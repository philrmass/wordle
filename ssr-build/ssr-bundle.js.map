{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./components/CountBoxes.module.css?e552","webpack:///./data/allWords.txt","webpack:///../node_modules/classnames/index.js","webpack:///./components/PatternSearch.jsx","webpack:///./components/MatchWords.jsx","webpack:///./components/BoxesInput.module.css?39a2","webpack:///./components/LetterSearch.jsx","webpack:///./components/Home.module.css?8acb","webpack:///./components/Home.js","webpack:///external \"preact\"","webpack:///../node_modules/webpack/buildin/amd-options.js","webpack:///../src/index.js","webpack:///./index.js","webpack:///./components/MatchedWord.module.css?ee82","webpack:///./utilities/words.js","webpack:///./components/PatternSearch.module.css?cbcf","webpack:///./components/MatchedWord.js","webpack:///./components/LetterPositions.module.css?6b97","webpack:///../src/util.js","webpack:///../src/PureComponent.js","webpack:///../src/forwardRef.js","webpack:///../src/Children.js","webpack:///../src/suspense.js","webpack:///../src/suspense-list.js","webpack:///../src/render.js","webpack:///./components/MatchWords.module.css?032b","webpack:///./components/BoxesInput.js","webpack:///./components/CountBoxes.js","webpack:///./data/display.js","webpack:///./components/LetterSearch.module.css?40c9","webpack:///./data/answerWords.txt","webpack:///./components/LetterPositions.jsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","hasOwn","classNames","classes","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","join","default","define","window","PatternSearch","words","useState","search","setSearch","matches","setMatches","haveMatches","Boolean","count","useEffect","text","pattern","replaceNonWords","find","RegExp","reduce","found","word","index","findMatches","className","styles","main","tabindex","input","type","onInput","e","target","patternLetters","split","remaining","shown","slice","map","generateMatches","match","colors","offset","letters","fill","letter","patternIndex","findMatchedColors","buildMatches","replace","MatchWords","useBest","scale","setScale","ratio","Math","pow","sorted","sort","a","b","sumA","yellow","green","sumB","min","max","step","onChange","wordSpacer","LetterSearch","indices","every","patternLetter","indexOf","answers","answerWords","all","allWords","Home","displayDefault","display","setDisplay","useAll","setUseAll","allMatches","answerMatches","title","version","dropdowns","buildDropdown","displayNames","separator","wordNames","wordsDefault","description","displayDescriptions","buildDisplay","namesObj","selectedName","entries","onchange","entry","selected","require","__webpack_amd_options__","currentIndex","currentComponent","prevRaf","currentHook","afterPaintEffects","oldBeforeDiff","options","oldBeforeRender","oldAfterDiff","diffed","oldCommit","oldBeforeUnmount","unmount","getHookState","hooks","__","__h","initialState","useReducer","invokeOrReturn","reducer","init","hookState","_reducer","action","nextValue","setState","callback","args","state","argsChanged","useLayoutEffect","useRef","initialValue","useMemo","current","useImperativeHandle","ref","createHandle","concat","factory","useCallback","useContext","context","provider","sub","props","useDebugValue","formatter","flushAfterPaintEffects","component","shift","forEach","invokeCleanup","invokeEffect","vnode","requestAnimationFrame","raf","done","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","setTimeout","commitQueue","some","filter","cb","hasErrored","hook","comp","cleanup","oldArgs","newArgs","f","App","countLettersByPosition","charCodeAt","zeros","from","keys","String","fromCharCode","counts","sortLetterCounts","byLetter","MatchedWord","color","classnames","assign","obj","shallowDiffers","PureComponent","Component","isPureReactComponent","shouldComponentUpdate","this","oldDiffHook","for","Forwarded","mapFn","children","fn","toChildArray","oldCatchError","error","newVNode","oldVNode","errorInfo","then","oldUnmount","Suspense","_suspenders","suspended","SuspenseList","_next","_map","promise","suspendingVNode","suspendingComponent","resolve","resolved","onResolved","onSuspensionComplete","suspendedVNode","removeOriginal","detachedParent","originalParent","child","insertBefore","__e","pop","forceUpdate","wasHydrating","componentWillUnmount","render","document","createElement","detachedComponent","__c","detachedClone","parentDom","effect","fallback","Fragment","list","node","delete","revealOrder","size","delegated","u","unsuspend","wrappedUnsuspend","Map","reverse","set","componentDidUpdate","componentDidMount","_this","REACT_ELEMENT_TYPE","CAMEL_PROPS","IS_DOM","onChangeInputType","test","isReactComponent","configurable","v","writable","oldEventHook","event","empty","isPropagationStopped","cancelBubble","isDefaultPrevented","defaultPrevented","persist","nativeEvent","classNameDescriptor","class","oldVNodeHook","normalizedProps","nonCustomElement","toLowerCase","multiple","defaultValue","$$typeof","createContext","createRef","BoxesInput","setSelected","label","boxes","box","maxLength","CountBoxes","whole","floor","part","wholeClasses","partClasses","partStyle","width","style","toFixed","letterPositions","bestMatch","worstMatch","patternSearch","letterSearch","total","LetterPositions","columns","allCount","sum","positionCount","allPercent","positionPercent","allLabel","positionLabel","allClasses","bar","positionClasses","allStyle","height","positionStyle","graph","graphBars","graphText","buildGraph","letterCounts","percent","gray","getColors","letterCount","buildLetterCount","buildLetterCounts","buildColumns"],"mappings":"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","file":"ssr-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/wordle-stats/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"QfWi\");\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"main__InFax\",\"boxes\":\"boxes__ABBgP\",\"box\":\"box__jkhXl\",\"whole\":\"whole__MNVXe\",\"count\":\"count__lTuIz\"};","export default \"aahed\\naalii\\naargh\\naarti\\nabaca\\nabaci\\nabacs\\nabaft\\nabaka\\nabamp\\naband\\nabash\\nabask\\nabaya\\nabbas\\nabbed\\nabbes\\nabcee\\nabeam\\nabear\\nabele\\nabers\\nabets\\nabies\\nabler\\nables\\nablet\\nablow\\nabmho\\nabohm\\naboil\\naboma\\naboon\\nabord\\nabore\\nabram\\nabray\\nabrim\\nabrin\\nabris\\nabsey\\nabsit\\nabuna\\nabune\\nabuts\\nabuzz\\nabyes\\nabysm\\nacais\\nacari\\naccas\\naccoy\\nacerb\\nacers\\naceta\\nachar\\nached\\naches\\nachoo\\nacids\\nacidy\\nacing\\nacini\\nackee\\nacker\\nacmes\\nacmic\\nacned\\nacnes\\nacock\\nacold\\nacred\\nacres\\nacros\\nacted\\nactin\\nacton\\nacyls\\nadaws\\nadays\\nadbot\\naddax\\nadded\\nadder\\naddio\\naddle\\nadeem\\nadhan\\nadieu\\nadios\\nadits\\nadman\\nadmen\\nadmix\\nadobo\\nadown\\nadoze\\nadrad\\nadred\\nadsum\\naduki\\nadunc\\nadust\\nadvew\\nadyta\\nadzed\\nadzes\\naecia\\naedes\\naegis\\naeons\\naerie\\naeros\\naesir\\nafald\\nafara\\nafars\\nafear\\naflaj\\nafore\\nafrit\\nafros\\nagama\\nagami\\nagars\\nagast\\nagave\\nagaze\\nagene\\nagers\\nagger\\naggie\\naggri\\naggro\\naggry\\naghas\\nagila\\nagios\\nagism\\nagist\\nagita\\naglee\\naglet\\nagley\\nagloo\\naglus\\nagmas\\nagoge\\nagone\\nagons\\nagood\\nagria\\nagrin\\nagros\\nagued\\nagues\\naguna\\naguti\\naheap\\nahent\\nahigh\\nahind\\nahing\\nahint\\nahold\\nahull\\nahuru\\naidas\\naided\\naides\\naidoi\\naidos\\naiery\\naigas\\naight\\nailed\\naimed\\naimer\\nainee\\nainga\\naioli\\naired\\nairer\\nairns\\nairth\\nairts\\naitch\\naitus\\naiver\\naiyee\\naizle\\najies\\najiva\\najuga\\najwan\\nakees\\nakela\\nakene\\naking\\nakita\\nakkas\\nalaap\\nalack\\nalamo\\naland\\nalane\\nalang\\nalans\\nalant\\nalapa\\nalaps\\nalary\\nalate\\nalays\\nalbas\\nalbee\\nalcid\\nalcos\\naldea\\nalder\\naldol\\naleck\\nalecs\\nalefs\\naleft\\naleph\\nalews\\naleye\\nalfas\\nalgal\\nalgas\\nalgid\\nalgin\\nalgor\\nalgum\\nalias\\nalifs\\naline\\nalist\\naliya\\nalkie\\nalkos\\nalkyd\\nalkyl\\nallee\\nallel\\nallis\\nallod\\nallyl\\nalmah\\nalmas\\nalmeh\\nalmes\\nalmud\\nalmug\\nalods\\naloed\\naloes\\naloha\\naloin\\naloos\\nalowe\\naltho\\naltos\\nalula\\nalums\\nalure\\nalvar\\nalway\\namahs\\namain\\namate\\namaut\\namban\\nambit\\nambos\\nambry\\nameba\\nameer\\namene\\namens\\nament\\namias\\namice\\namici\\namide\\namido\\namids\\namies\\namiga\\namigo\\namine\\namino\\namins\\namirs\\namlas\\namman\\nammon\\nammos\\namnia\\namnic\\namnio\\namoks\\namole\\namort\\namour\\namove\\namowt\\namped\\nampul\\namrit\\namuck\\namyls\\nanana\\nanata\\nancho\\nancle\\nancon\\nandro\\nanear\\nanele\\nanent\\nangas\\nanglo\\nanigh\\nanile\\nanils\\nanima\\nanimi\\nanion\\nanise\\nanker\\nankhs\\nankus\\nanlas\\nannal\\nannas\\nannat\\nanoas\\nanole\\nanomy\\nansae\\nantae\\nantar\\nantas\\nanted\\nantes\\nantis\\nantra\\nantre\\nantsy\\nanura\\nanyon\\napace\\napage\\napaid\\napayd\\napays\\napeak\\napeek\\napers\\napert\\napery\\napgar\\naphis\\napian\\napiol\\napish\\napism\\napode\\napods\\napoop\\naport\\nappal\\nappay\\nappel\\nappro\\nappui\\nappuy\\napres\\napses\\napsis\\napsos\\napted\\napter\\naquae\\naquas\\naraba\\naraks\\narame\\narars\\narbas\\narced\\narchi\\narcos\\narcus\\nardeb\\nardri\\naread\\nareae\\nareal\\narear\\nareas\\nareca\\naredd\\narede\\narefy\\nareic\\narene\\narepa\\narere\\narete\\narets\\narett\\nargal\\nargan\\nargil\\nargle\\nargol\\nargon\\nargot\\nargus\\narhat\\narias\\nariel\\nariki\\narils\\nariot\\narish\\narked\\narled\\narles\\narmed\\narmer\\narmet\\narmil\\narnas\\narnut\\naroba\\naroha\\naroid\\narpas\\narpen\\narrah\\narras\\narret\\narris\\narroz\\narsed\\narses\\narsey\\narsis\\nartal\\nartel\\nartic\\nartis\\naruhe\\narums\\narval\\narvee\\narvos\\naryls\\nasana\\nascon\\nascus\\nasdic\\nashed\\nashes\\nashet\\nasked\\nasker\\naskoi\\naskos\\naspen\\nasper\\naspic\\naspie\\naspis\\naspro\\nassai\\nassam\\nasses\\nassez\\nassot\\naster\\nastir\\nastun\\nasura\\nasway\\naswim\\nasyla\\nataps\\nataxy\\natigi\\natilt\\natimy\\natlas\\natman\\natmas\\natmos\\natocs\\natoke\\natoks\\natoms\\natomy\\natony\\natopy\\natria\\natrip\\nattap\\nattar\\natuas\\naudad\\nauger\\naught\\naulas\\naulic\\nauloi\\naulos\\naumil\\naunes\\naunts\\naurae\\naural\\naurar\\nauras\\naurei\\naures\\nauric\\nauris\\naurum\\nautos\\nauxin\\navale\\navant\\navast\\navels\\navens\\navers\\navgas\\navine\\navion\\navise\\naviso\\navize\\navows\\navyze\\nawarn\\nawato\\nawave\\naways\\nawdls\\naweel\\naweto\\nawing\\nawmry\\nawned\\nawner\\nawols\\nawork\\naxels\\naxile\\naxils\\naxing\\naxite\\naxled\\naxles\\naxman\\naxmen\\naxoid\\naxone\\naxons\\nayahs\\nayaya\\nayelp\\naygre\\nayins\\nayont\\nayres\\nayrie\\nazans\\nazide\\nazido\\nazine\\nazlon\\nazoic\\nazole\\nazons\\nazote\\nazoth\\nazuki\\nazurn\\nazury\\nazygy\\nazyme\\nazyms\\nbaaed\\nbaals\\nbabas\\nbabel\\nbabes\\nbabka\\nbaboo\\nbabul\\nbabus\\nbacca\\nbacco\\nbaccy\\nbacha\\nbachs\\nbacks\\nbaddy\\nbaels\\nbaffs\\nbaffy\\nbafts\\nbaghs\\nbagie\\nbahts\\nbahus\\nbahut\\nbails\\nbairn\\nbaisa\\nbaith\\nbaits\\nbaiza\\nbaize\\nbajan\\nbajra\\nbajri\\nbajus\\nbaked\\nbaken\\nbakes\\nbakra\\nbalas\\nbalds\\nbaldy\\nbaled\\nbales\\nbalks\\nbalky\\nballs\\nbally\\nbalms\\nbaloo\\nbalsa\\nbalti\\nbalun\\nbalus\\nbambi\\nbanak\\nbanco\\nbancs\\nbanda\\nbandh\\nbands\\nbandy\\nbaned\\nbanes\\nbangs\\nbania\\nbanks\\nbanns\\nbants\\nbantu\\nbanty\\nbanya\\nbapus\\nbarbe\\nbarbs\\nbarby\\nbarca\\nbarde\\nbardo\\nbards\\nbardy\\nbared\\nbarer\\nbares\\nbarfi\\nbarfs\\nbaric\\nbarks\\nbarky\\nbarms\\nbarmy\\nbarns\\nbarny\\nbarps\\nbarra\\nbarre\\nbarro\\nbarry\\nbarye\\nbasan\\nbased\\nbasen\\nbaser\\nbases\\nbasho\\nbasij\\nbasks\\nbason\\nbasse\\nbassi\\nbasso\\nbassy\\nbasta\\nbasti\\nbasto\\nbasts\\nbated\\nbates\\nbaths\\nbatik\\nbatta\\nbatts\\nbattu\\nbauds\\nbauks\\nbaulk\\nbaurs\\nbavin\\nbawds\\nbawks\\nbawls\\nbawns\\nbawrs\\nbawty\\nbayed\\nbayer\\nbayes\\nbayle\\nbayts\\nbazar\\nbazoo\\nbeads\\nbeaks\\nbeaky\\nbeals\\nbeams\\nbeamy\\nbeano\\nbeans\\nbeany\\nbeare\\nbears\\nbeath\\nbeats\\nbeaty\\nbeaus\\nbeaut\\nbeaux\\nbebop\\nbecap\\nbecke\\nbecks\\nbedad\\nbedel\\nbedes\\nbedew\\nbedim\\nbedye\\nbeedi\\nbeefs\\nbeeps\\nbeers\\nbeery\\nbeets\\nbefog\\nbegad\\nbegar\\nbegem\\nbegot\\nbegum\\nbeige\\nbeigy\\nbeins\\nbekah\\nbelah\\nbelar\\nbelay\\nbelee\\nbelga\\nbells\\nbelon\\nbelts\\nbemad\\nbemas\\nbemix\\nbemud\\nbends\\nbendy\\nbenes\\nbenet\\nbenga\\nbenis\\nbenne\\nbenni\\nbenny\\nbento\\nbents\\nbenty\\nbepat\\nberay\\nberes\\nbergs\\nberko\\nberks\\nberme\\nberms\\nberob\\nberyl\\nbesat\\nbesaw\\nbesee\\nbeses\\nbesit\\nbesom\\nbesot\\nbesti\\nbests\\nbetas\\nbeted\\nbetes\\nbeths\\nbetid\\nbeton\\nbetta\\nbetty\\nbever\\nbevor\\nbevue\\nbevvy\\nbewet\\nbewig\\nbezes\\nbezil\\nbezzy\\nbhais\\nbhaji\\nbhang\\nbhats\\nbhels\\nbhoot\\nbhuna\\nbhuts\\nbiach\\nbiali\\nbialy\\nbibbs\\nbibes\\nbiccy\\nbices\\nbided\\nbider\\nbides\\nbidet\\nbidis\\nbidon\\nbield\\nbiers\\nbiffo\\nbiffs\\nbiffy\\nbifid\\nbigae\\nbiggs\\nbiggy\\nbigha\\nbight\\nbigly\\nbigos\\nbijou\\nbiked\\nbiker\\nbikes\\nbikie\\nbilbo\\nbilby\\nbiled\\nbiles\\nbilgy\\nbilks\\nbills\\nbimah\\nbimas\\nbimbo\\nbinal\\nbindi\\nbinds\\nbiner\\nbines\\nbings\\nbingy\\nbinit\\nbinks\\nbints\\nbiogs\\nbiont\\nbiota\\nbiped\\nbipod\\nbirds\\nbirks\\nbirle\\nbirls\\nbiros\\nbirrs\\nbirse\\nbirsy\\nbises\\nbisks\\nbisom\\nbiter\\nbites\\nbitos\\nbitou\\nbitsy\\nbitte\\nbitts\\nbivia\\nbivvy\\nbizes\\nbizzo\\nbizzy\\nblabs\\nblads\\nblady\\nblaer\\nblaes\\nblaff\\nblags\\nblahs\\nblain\\nblams\\nblart\\nblase\\nblash\\nblate\\nblats\\nblatt\\nblaud\\nblawn\\nblaws\\nblays\\nblear\\nblebs\\nblech\\nblees\\nblent\\nblert\\nblest\\nblets\\nbleys\\nblimy\\nbling\\nblini\\nblins\\nbliny\\nblips\\nblist\\nblite\\nblits\\nblive\\nblobs\\nblocs\\nblogs\\nblook\\nbloop\\nblore\\nblots\\nblows\\nblowy\\nblubs\\nblude\\nbluds\\nbludy\\nblued\\nblues\\nbluet\\nbluey\\nbluid\\nblume\\nblunk\\nblurs\\nblype\\nboabs\\nboaks\\nboars\\nboart\\nboats\\nbobac\\nbobak\\nbobas\\nbobol\\nbobos\\nbocca\\nbocce\\nbocci\\nboche\\nbocks\\nboded\\nbodes\\nbodge\\nbodhi\\nbodle\\nboeps\\nboets\\nboeuf\\nboffo\\nboffs\\nbogan\\nbogey\\nboggy\\nbogie\\nbogle\\nbogue\\nbogus\\nbohea\\nbohos\\nboils\\nboing\\nboink\\nboite\\nboked\\nbokeh\\nbokes\\nbokos\\nbolar\\nbolas\\nbolds\\nboles\\nbolix\\nbolls\\nbolos\\nbolts\\nbolus\\nbomas\\nbombe\\nbombo\\nbombs\\nbonce\\nbonds\\nboned\\nboner\\nbones\\nbongs\\nbonie\\nbonks\\nbonne\\nbonny\\nbonza\\nbonze\\nbooai\\nbooay\\nboobs\\nboody\\nbooed\\nboofy\\nboogy\\nboohs\\nbooks\\nbooky\\nbools\\nbooms\\nboomy\\nboong\\nboons\\nboord\\nboors\\nboose\\nboots\\nboppy\\nborak\\nboral\\nboras\\nborde\\nbords\\nbored\\nboree\\nborel\\nborer\\nbores\\nborgo\\nboric\\nborks\\nborms\\nborna\\nboron\\nborts\\nborty\\nbortz\\nbosie\\nbosks\\nbosky\\nboson\\nbosun\\nbotas\\nbotel\\nbotes\\nbothy\\nbotte\\nbotts\\nbotty\\nbouge\\nbouks\\nboult\\nbouns\\nbourd\\nbourg\\nbourn\\nbouse\\nbousy\\nbouts\\nbovid\\nbowat\\nbowed\\nbower\\nbowes\\nbowet\\nbowie\\nbowls\\nbowne\\nbowrs\\nbowse\\nboxed\\nboxen\\nboxes\\nboxla\\nboxty\\nboyar\\nboyau\\nboyed\\nboyfs\\nboygs\\nboyla\\nboyos\\nboysy\\nbozos\\nbraai\\nbrach\\nbrack\\nbract\\nbrads\\nbraes\\nbrags\\nbrail\\nbraks\\nbraky\\nbrame\\nbrane\\nbrank\\nbrans\\nbrant\\nbrast\\nbrats\\nbrava\\nbravi\\nbraws\\nbraxy\\nbrays\\nbraza\\nbraze\\nbream\\nbrede\\nbreds\\nbreem\\nbreer\\nbrees\\nbreid\\nbreis\\nbreme\\nbrens\\nbrent\\nbrere\\nbrers\\nbreve\\nbrews\\nbreys\\nbrier\\nbries\\nbrigs\\nbriki\\nbriks\\nbrill\\nbrims\\nbrins\\nbrios\\nbrise\\nbriss\\nbrith\\nbrits\\nbritt\\nbrize\\nbroch\\nbrock\\nbrods\\nbrogh\\nbrogs\\nbrome\\nbromo\\nbronc\\nbrond\\nbrool\\nbroos\\nbrose\\nbrosy\\nbrows\\nbrugh\\nbruin\\nbruit\\nbrule\\nbrume\\nbrung\\nbrusk\\nbrust\\nbruts\\nbuats\\nbuaze\\nbubal\\nbubas\\nbubba\\nbubbe\\nbubby\\nbubus\\nbuchu\\nbucko\\nbucks\\nbucku\\nbudas\\nbudis\\nbudos\\nbuffa\\nbuffe\\nbuffi\\nbuffo\\nbuffs\\nbuffy\\nbufos\\nbufty\\nbuhls\\nbuhrs\\nbuiks\\nbuist\\nbukes\\nbulbs\\nbulgy\\nbulks\\nbulla\\nbulls\\nbulse\\nbumbo\\nbumfs\\nbumph\\nbumps\\nbumpy\\nbunas\\nbunce\\nbunco\\nbunde\\nbundh\\nbunds\\nbundt\\nbundu\\nbundy\\nbungs\\nbungy\\nbunia\\nbunje\\nbunjy\\nbunko\\nbunks\\nbunns\\nbunts\\nbunty\\nbunya\\nbuoys\\nbuppy\\nburan\\nburas\\nburbs\\nburds\\nburet\\nburfi\\nburgh\\nburgs\\nburin\\nburka\\nburke\\nburks\\nburls\\nburns\\nburoo\\nburps\\nburqa\\nburro\\nburrs\\nburry\\nbursa\\nburse\\nbusby\\nbuses\\nbusks\\nbusky\\nbussu\\nbusti\\nbusts\\nbusty\\nbuteo\\nbutes\\nbutle\\nbutoh\\nbutts\\nbutty\\nbutut\\nbutyl\\nbuzzy\\nbwana\\nbwazi\\nbyded\\nbydes\\nbyked\\nbykes\\nbyres\\nbyrls\\nbyssi\\nbytes\\nbyway\\ncaaed\\ncabas\\ncaber\\ncabob\\ncaboc\\ncabre\\ncacas\\ncacks\\ncacky\\ncadee\\ncades\\ncadge\\ncadgy\\ncadie\\ncadis\\ncadre\\ncaeca\\ncaese\\ncafes\\ncaffs\\ncaged\\ncager\\ncages\\ncagot\\ncahow\\ncaids\\ncains\\ncaird\\ncajon\\ncajun\\ncaked\\ncakes\\ncakey\\ncalfs\\ncalid\\ncalif\\ncalix\\ncalks\\ncalla\\ncalls\\ncalms\\ncalmy\\ncalos\\ncalpa\\ncalps\\ncalve\\ncalyx\\ncaman\\ncamas\\ncames\\ncamis\\ncamos\\ncampi\\ncampo\\ncamps\\ncampy\\ncamus\\ncaned\\ncaneh\\ncaner\\ncanes\\ncangs\\ncanid\\ncanna\\ncanns\\ncanso\\ncanst\\ncanto\\ncants\\ncanty\\ncapas\\ncaped\\ncapes\\ncapex\\ncaphs\\ncapiz\\ncaple\\ncapon\\ncapos\\ncapot\\ncapri\\ncapul\\ncarap\\ncarbo\\ncarbs\\ncarby\\ncardi\\ncards\\ncardy\\ncared\\ncarer\\ncares\\ncaret\\ncarex\\ncarks\\ncarle\\ncarls\\ncarns\\ncarny\\ncarob\\ncarom\\ncaron\\ncarpi\\ncarps\\ncarrs\\ncarse\\ncarta\\ncarte\\ncarts\\ncarvy\\ncasas\\ncasco\\ncased\\ncases\\ncasks\\ncasky\\ncasts\\ncasus\\ncates\\ncauda\\ncauks\\ncauld\\ncauls\\ncaums\\ncaups\\ncauri\\ncausa\\ncavas\\ncaved\\ncavel\\ncaver\\ncaves\\ncavie\\ncawed\\ncawks\\ncaxon\\nceaze\\ncebid\\ncecal\\ncecum\\nceded\\nceder\\ncedes\\ncedis\\nceiba\\nceili\\nceils\\nceleb\\ncella\\ncelli\\ncells\\ncelom\\ncelts\\ncense\\ncento\\ncents\\ncentu\\nceorl\\ncepes\\ncerci\\ncered\\nceres\\ncerge\\nceria\\nceric\\ncerne\\nceroc\\nceros\\ncerts\\ncerty\\ncesse\\ncesta\\ncesti\\ncetes\\ncetyl\\ncezve\\nchace\\nchack\\nchaco\\nchado\\nchads\\nchaft\\nchais\\nchals\\nchams\\nchana\\nchang\\nchank\\nchape\\nchaps\\nchapt\\nchara\\nchare\\nchark\\ncharr\\nchars\\nchary\\nchats\\nchave\\nchavs\\nchawk\\nchaws\\nchaya\\nchays\\ncheep\\nchefs\\ncheka\\nchela\\nchelp\\nchemo\\nchems\\nchere\\nchert\\ncheth\\nchevy\\nchews\\nchewy\\nchiao\\nchias\\nchibs\\nchica\\nchich\\nchico\\nchics\\nchiel\\nchiks\\nchile\\nchimb\\nchimo\\nchimp\\nchine\\nching\\nchino\\nchins\\nchips\\nchirk\\nchirl\\nchirm\\nchiro\\nchirr\\nchirt\\nchiru\\nchits\\nchive\\nchivs\\nchivy\\nchizz\\nchoco\\nchocs\\nchode\\nchogs\\nchoil\\nchoko\\nchoky\\nchola\\ncholi\\ncholo\\nchomp\\nchons\\nchoof\\nchook\\nchoom\\nchoon\\nchops\\nchota\\nchott\\nchout\\nchoux\\nchowk\\nchows\\nchubs\\nchufa\\nchuff\\nchugs\\nchums\\nchurl\\nchurr\\nchuse\\nchuts\\nchyle\\nchyme\\nchynd\\ncibol\\ncided\\ncides\\nciels\\nciggy\\ncilia\\ncills\\ncimar\\ncimex\\ncinct\\ncines\\ncinqs\\ncions\\ncippi\\ncircs\\ncires\\ncirls\\ncirri\\ncisco\\ncissy\\ncists\\ncital\\ncited\\nciter\\ncites\\ncives\\ncivet\\ncivie\\ncivvy\\nclach\\nclade\\nclads\\nclaes\\nclags\\nclame\\nclams\\nclans\\nclaps\\nclapt\\nclaro\\nclart\\nclary\\nclast\\nclats\\nclaut\\nclave\\nclavi\\nclaws\\nclays\\ncleck\\ncleek\\ncleep\\nclefs\\nclegs\\ncleik\\nclems\\nclepe\\nclept\\ncleve\\nclews\\nclied\\nclies\\nclift\\nclime\\ncline\\nclint\\nclipe\\nclips\\nclipt\\nclits\\ncloam\\nclods\\ncloff\\nclogs\\ncloke\\nclomb\\nclomp\\nclonk\\nclons\\ncloop\\ncloot\\nclops\\nclote\\nclots\\nclour\\nclous\\nclows\\ncloye\\ncloys\\ncloze\\nclubs\\nclues\\ncluey\\nclunk\\nclype\\ncnida\\ncoact\\ncoady\\ncoala\\ncoals\\ncoaly\\ncoapt\\ncoarb\\ncoate\\ncoati\\ncoats\\ncobbs\\ncobby\\ncobia\\ncoble\\ncobza\\ncocas\\ncocci\\ncocco\\ncocks\\ncocky\\ncocos\\ncodas\\ncodec\\ncoded\\ncoden\\ncoder\\ncodes\\ncodex\\ncodon\\ncoeds\\ncoffs\\ncogie\\ncogon\\ncogue\\ncohab\\ncohen\\ncohoe\\ncohog\\ncohos\\ncoifs\\ncoign\\ncoils\\ncoins\\ncoirs\\ncoits\\ncoked\\ncokes\\ncolas\\ncolby\\ncolds\\ncoled\\ncoles\\ncoley\\ncolic\\ncolin\\ncolls\\ncolly\\ncolog\\ncolts\\ncolza\\ncomae\\ncomal\\ncomas\\ncombe\\ncombi\\ncombo\\ncombs\\ncomby\\ncomer\\ncomes\\ncomix\\ncommo\\ncomms\\ncommy\\ncompo\\ncomps\\ncompt\\ncomte\\ncomus\\nconed\\ncones\\nconey\\nconfs\\nconga\\nconge\\ncongo\\nconia\\nconin\\nconks\\nconky\\nconne\\nconns\\nconte\\nconto\\nconus\\nconvo\\ncooch\\ncooed\\ncooee\\ncooer\\ncooey\\ncoofs\\ncooks\\ncooky\\ncools\\ncooly\\ncoomb\\ncooms\\ncoomy\\ncoops\\ncoopt\\ncoost\\ncoots\\ncooze\\ncopal\\ncopay\\ncoped\\ncopen\\ncoper\\ncopes\\ncoppy\\ncopra\\ncopsy\\ncoqui\\ncoram\\ncorbe\\ncorby\\ncords\\ncored\\ncores\\ncorey\\ncorgi\\ncoria\\ncorks\\ncorky\\ncorms\\ncorni\\ncorno\\ncorns\\ncornu\\ncorps\\ncorse\\ncorso\\ncosec\\ncosed\\ncoses\\ncoset\\ncosey\\ncosie\\ncosta\\ncoste\\ncosts\\ncotan\\ncoted\\ncotes\\ncoths\\ncotta\\ncotts\\ncoude\\ncoups\\ncourb\\ncourd\\ncoure\\ncours\\ncouta\\ncouth\\ncoved\\ncoves\\ncovin\\ncowal\\ncowan\\ncowed\\ncowks\\ncowls\\ncowps\\ncowry\\ncoxae\\ncoxal\\ncoxed\\ncoxes\\ncoxib\\ncoyau\\ncoyed\\ncoyer\\ncoypu\\ncozed\\ncozen\\ncozes\\ncozey\\ncozie\\ncraal\\ncrabs\\ncrags\\ncraic\\ncraig\\ncrake\\ncrame\\ncrams\\ncrans\\ncrape\\ncraps\\ncrapy\\ncrare\\ncraws\\ncrays\\ncreds\\ncreel\\ncrees\\ncrems\\ncrena\\ncreps\\ncrepy\\ncrewe\\ncrews\\ncrias\\ncribs\\ncries\\ncrims\\ncrine\\ncrios\\ncripe\\ncrips\\ncrise\\ncrith\\ncrits\\ncroci\\ncrocs\\ncroft\\ncrogs\\ncromb\\ncrome\\ncronk\\ncrons\\ncrool\\ncroon\\ncrops\\ncrore\\ncrost\\ncrout\\ncrows\\ncroze\\ncruck\\ncrudo\\ncruds\\ncrudy\\ncrues\\ncruet\\ncruft\\ncrunk\\ncruor\\ncrura\\ncruse\\ncrusy\\ncruve\\ncrwth\\ncryer\\nctene\\ncubby\\ncubeb\\ncubed\\ncuber\\ncubes\\ncubit\\ncuddy\\ncuffo\\ncuffs\\ncuifs\\ncuing\\ncuish\\ncuits\\ncukes\\nculch\\nculet\\nculex\\nculls\\ncully\\nculms\\nculpa\\nculti\\ncults\\nculty\\ncumec\\ncundy\\ncunei\\ncunit\\ncunts\\ncupel\\ncupid\\ncuppa\\ncuppy\\ncurat\\ncurbs\\ncurch\\ncurds\\ncurdy\\ncured\\ncurer\\ncures\\ncuret\\ncurfs\\ncuria\\ncurie\\ncurli\\ncurls\\ncurns\\ncurny\\ncurrs\\ncursi\\ncurst\\ncusec\\ncushy\\ncusks\\ncusps\\ncuspy\\ncusso\\ncusum\\ncutch\\ncuter\\ncutes\\ncutey\\ncutin\\ncutis\\ncutto\\ncutty\\ncutup\\ncuvee\\ncuzes\\ncwtch\\ncyano\\ncyans\\ncycad\\ncycas\\ncyclo\\ncyder\\ncylix\\ncymae\\ncymar\\ncymas\\ncymes\\ncymol\\ncysts\\ncytes\\ncyton\\nczars\\ndaals\\ndabba\\ndaces\\ndacha\\ndacks\\ndadah\\ndadas\\ndados\\ndaffs\\ndaffy\\ndagga\\ndaggy\\ndagos\\ndahls\\ndaiko\\ndaine\\ndaint\\ndaker\\ndaled\\ndales\\ndalis\\ndalle\\ndalts\\ndaman\\ndamar\\ndames\\ndamme\\ndamns\\ndamps\\ndampy\\ndancy\\ndangs\\ndanio\\ndanks\\ndanny\\ndants\\ndaraf\\ndarbs\\ndarcy\\ndared\\ndarer\\ndares\\ndarga\\ndargs\\ndaric\\ndaris\\ndarks\\ndarns\\ndarre\\ndarts\\ndarzi\\ndashi\\ndashy\\ndatal\\ndated\\ndater\\ndates\\ndatos\\ndatto\\ndaube\\ndaubs\\ndauby\\ndauds\\ndault\\ndaurs\\ndauts\\ndaven\\ndavit\\ndawah\\ndawds\\ndawed\\ndawen\\ndawks\\ndawns\\ndawts\\ndayan\\ndaych\\ndaynt\\ndazed\\ndazer\\ndazes\\ndeads\\ndeair\\ndeals\\ndeans\\ndeare\\ndearn\\ndears\\ndeary\\ndeash\\ndeave\\ndeaws\\ndeawy\\ndebag\\ndebby\\ndebel\\ndebes\\ndebts\\ndebud\\ndebur\\ndebus\\ndebye\\ndecad\\ndecaf\\ndecan\\ndecko\\ndecks\\ndecos\\ndedal\\ndeeds\\ndeedy\\ndeely\\ndeems\\ndeens\\ndeeps\\ndeere\\ndeers\\ndeets\\ndeeve\\ndeevs\\ndefat\\ndeffo\\ndefis\\ndefog\\ndegas\\ndegum\\ndegus\\ndeice\\ndeids\\ndeify\\ndeils\\ndeism\\ndeist\\ndeked\\ndekes\\ndekko\\ndeled\\ndeles\\ndelfs\\ndelft\\ndelis\\ndells\\ndelly\\ndelos\\ndelph\\ndelts\\ndeman\\ndemes\\ndemic\\ndemit\\ndemob\\ndemoi\\ndemos\\ndempt\\ndenar\\ndenay\\ndench\\ndenes\\ndenet\\ndenis\\ndents\\ndeoxy\\nderat\\nderay\\ndered\\nderes\\nderig\\nderma\\nderms\\nderns\\nderny\\nderos\\nderro\\nderry\\nderth\\ndervs\\ndesex\\ndeshi\\ndesis\\ndesks\\ndesse\\ndevas\\ndevel\\ndevis\\ndevon\\ndevos\\ndevot\\ndewan\\ndewar\\ndewax\\ndewed\\ndexes\\ndexie\\ndhaba\\ndhaks\\ndhals\\ndhikr\\ndhobi\\ndhole\\ndholl\\ndhols\\ndhoti\\ndhows\\ndhuti\\ndiact\\ndials\\ndiane\\ndiazo\\ndibbs\\ndiced\\ndicer\\ndices\\ndicht\\ndicks\\ndicky\\ndicot\\ndicta\\ndicts\\ndicty\\ndiddy\\ndidie\\ndidos\\ndidst\\ndiebs\\ndiels\\ndiene\\ndiets\\ndiffs\\ndight\\ndikas\\ndiked\\ndiker\\ndikes\\ndikey\\ndildo\\ndilli\\ndills\\ndimbo\\ndimer\\ndimes\\ndimps\\ndinar\\ndined\\ndines\\ndinge\\ndings\\ndinic\\ndinks\\ndinky\\ndinna\\ndinos\\ndints\\ndiols\\ndiota\\ndippy\\ndipso\\ndiram\\ndirer\\ndirke\\ndirks\\ndirls\\ndirts\\ndisas\\ndisci\\ndiscs\\ndishy\\ndisks\\ndisme\\ndital\\nditas\\ndited\\ndites\\nditsy\\nditts\\nditzy\\ndivan\\ndivas\\ndived\\ndives\\ndivis\\ndivna\\ndivos\\ndivot\\ndivvy\\ndiwan\\ndixie\\ndixit\\ndiyas\\ndizen\\ndjinn\\ndjins\\ndoabs\\ndoats\\ndobby\\ndobes\\ndobie\\ndobla\\ndobra\\ndobro\\ndocht\\ndocks\\ndocos\\ndocus\\ndoddy\\ndodos\\ndoeks\\ndoers\\ndoest\\ndoeth\\ndoffs\\ndogan\\ndoges\\ndogey\\ndoggo\\ndoggy\\ndogie\\ndohyo\\ndoilt\\ndoily\\ndoits\\ndojos\\ndolce\\ndolci\\ndoled\\ndoles\\ndolia\\ndolls\\ndolma\\ndolor\\ndolos\\ndolts\\ndomal\\ndomed\\ndomes\\ndomic\\ndonah\\ndonas\\ndonee\\ndoner\\ndonga\\ndongs\\ndonko\\ndonna\\ndonne\\ndonny\\ndonsy\\ndoobs\\ndooce\\ndoody\\ndooks\\ndoole\\ndools\\ndooly\\ndooms\\ndoomy\\ndoona\\ndoorn\\ndoors\\ndoozy\\ndopas\\ndoped\\ndoper\\ndopes\\ndorad\\ndorba\\ndorbs\\ndoree\\ndores\\ndoric\\ndoris\\ndorks\\ndorky\\ndorms\\ndormy\\ndorps\\ndorrs\\ndorsa\\ndorse\\ndorts\\ndorty\\ndosai\\ndosas\\ndosed\\ndoseh\\ndoser\\ndoses\\ndosha\\ndotal\\ndoted\\ndoter\\ndotes\\ndotty\\ndouar\\ndouce\\ndoucs\\ndouks\\ndoula\\ndouma\\ndoums\\ndoups\\ndoura\\ndouse\\ndouts\\ndoved\\ndoven\\ndover\\ndoves\\ndovie\\ndowar\\ndowds\\ndowed\\ndower\\ndowie\\ndowle\\ndowls\\ndowly\\ndowna\\ndowns\\ndowps\\ndowse\\ndowts\\ndoxed\\ndoxes\\ndoxie\\ndoyen\\ndoyly\\ndozed\\ndozer\\ndozes\\ndrabs\\ndrack\\ndraco\\ndraff\\ndrags\\ndrail\\ndrams\\ndrant\\ndraps\\ndrats\\ndrave\\ndraws\\ndrays\\ndrear\\ndreck\\ndreed\\ndreer\\ndrees\\ndregs\\ndreks\\ndrent\\ndrere\\ndrest\\ndreys\\ndribs\\ndrice\\ndries\\ndrily\\ndrips\\ndript\\ndroid\\ndroil\\ndroke\\ndrole\\ndrome\\ndrony\\ndroob\\ndroog\\ndrook\\ndrops\\ndropt\\ndrouk\\ndrows\\ndrubs\\ndrugs\\ndrums\\ndrupe\\ndruse\\ndrusy\\ndruxy\\ndryad\\ndryas\\ndsobo\\ndsomo\\nduads\\nduals\\nduans\\nduars\\ndubbo\\nducal\\nducat\\nduces\\nducks\\nducky\\nducts\\nduddy\\nduded\\ndudes\\nduels\\nduets\\nduett\\nduffs\\ndufus\\nduing\\nduits\\ndukas\\nduked\\ndukes\\ndukka\\ndulce\\ndules\\ndulia\\ndulls\\ndulse\\ndumas\\ndumbo\\ndumbs\\ndumka\\ndumky\\ndumps\\ndunam\\ndunch\\ndunes\\ndungs\\ndungy\\ndunks\\ndunno\\ndunny\\ndunsh\\ndunts\\nduomi\\nduomo\\nduped\\nduper\\ndupes\\nduple\\nduply\\nduppy\\ndural\\nduras\\ndured\\ndures\\ndurgy\\ndurns\\nduroc\\nduros\\nduroy\\ndurra\\ndurrs\\ndurry\\ndurst\\ndurum\\ndurzi\\ndusks\\ndusts\\nduxes\\ndwaal\\ndwale\\ndwalm\\ndwams\\ndwang\\ndwaum\\ndweeb\\ndwile\\ndwine\\ndyads\\ndyers\\ndykon\\ndynel\\ndynes\\ndzhos\\neagre\\nealed\\neales\\neaned\\neards\\neared\\nearls\\nearns\\nearnt\\nearst\\neased\\neaser\\neases\\neasle\\neasts\\neathe\\neaved\\neaves\\nebbed\\nebbet\\nebons\\nebook\\necads\\neched\\neches\\nechos\\necrus\\nedema\\nedged\\nedger\\nedges\\nedile\\nedits\\neduce\\neduct\\neejit\\neensy\\neeven\\neevns\\neffed\\negads\\negers\\negest\\neggar\\negged\\negger\\negmas\\nehing\\neider\\neidos\\neigne\\neiked\\neikon\\neilds\\neisel\\nejido\\nekkas\\nelain\\neland\\nelans\\nelchi\\neldin\\nelemi\\nelfed\\neliad\\nelint\\nelmen\\neloge\\nelogy\\neloin\\nelops\\nelpee\\nelsin\\nelute\\nelvan\\nelven\\nelver\\nelves\\nemacs\\nembar\\nembay\\nembog\\nembow\\nembox\\nembus\\nemeer\\nemend\\nemerg\\nemery\\nemeus\\nemics\\nemirs\\nemits\\nemmas\\nemmer\\nemmet\\nemmew\\nemmys\\nemoji\\nemong\\nemote\\nemove\\nempts\\nemule\\nemure\\nemyde\\nemyds\\nenarm\\nenate\\nended\\nender\\nendew\\nendue\\nenews\\nenfix\\neniac\\nenlit\\nenmew\\nennog\\nenoki\\nenols\\nenorm\\nenows\\nenrol\\nensew\\nensky\\nentia\\nenure\\nenurn\\nenvoi\\nenzym\\neorls\\neosin\\nepact\\nepees\\nephah\\nephas\\nephod\\nephor\\nepics\\nepode\\nepopt\\nepris\\neques\\nequid\\nerbia\\nerevs\\nergon\\nergos\\nergot\\nerhus\\nerica\\nerick\\nerics\\nering\\nerned\\nernes\\nerose\\nerred\\nerses\\neruct\\nerugo\\neruvs\\nerven\\nervil\\nescar\\nescot\\nesile\\neskar\\nesker\\nesnes\\nesses\\nestoc\\nestop\\nestro\\netage\\netape\\netats\\netens\\nethal\\nethne\\nethyl\\netics\\netnas\\nettin\\nettle\\netuis\\netwee\\netyma\\neughs\\neuked\\neupad\\neuros\\neusol\\nevens\\nevert\\nevets\\nevhoe\\nevils\\nevite\\nevohe\\newers\\newest\\newhow\\newked\\nexams\\nexeat\\nexecs\\nexeem\\nexeme\\nexfil\\nexies\\nexine\\nexing\\nexits\\nexode\\nexome\\nexons\\nexpat\\nexpos\\nexude\\nexuls\\nexurb\\neyass\\neyers\\neyots\\neyras\\neyres\\neyrie\\neyrir\\nezine\\nfabby\\nfaced\\nfacer\\nfaces\\nfacia\\nfacta\\nfacts\\nfaddy\\nfaded\\nfader\\nfades\\nfadge\\nfados\\nfaena\\nfaery\\nfaffs\\nfaffy\\nfagin\\nfaiks\\nfails\\nfaine\\nfains\\nfairs\\nfaked\\nfaker\\nfakes\\nfakey\\nfakie\\nfakir\\nfalaj\\nfalls\\nfamed\\nfames\\nfanal\\nfands\\nfanes\\nfanga\\nfango\\nfangs\\nfanks\\nfanon\\nfanos\\nfanum\\nfaqir\\nfarad\\nfarci\\nfarcy\\nfards\\nfared\\nfarer\\nfares\\nfarle\\nfarls\\nfarms\\nfaros\\nfarro\\nfarse\\nfarts\\nfasci\\nfasti\\nfasts\\nfated\\nfates\\nfatly\\nfatso\\nfatwa\\nfaugh\\nfauld\\nfauns\\nfaurd\\nfauts\\nfauve\\nfavas\\nfavel\\nfaver\\nfaves\\nfavus\\nfawns\\nfawny\\nfaxed\\nfaxes\\nfayed\\nfayer\\nfayne\\nfayre\\nfazed\\nfazes\\nfeals\\nfeare\\nfears\\nfeart\\nfease\\nfeats\\nfeaze\\nfeces\\nfecht\\nfecit\\nfecks\\nfedex\\nfeebs\\nfeeds\\nfeels\\nfeens\\nfeers\\nfeese\\nfeeze\\nfehme\\nfeint\\nfeist\\nfelch\\nfelid\\nfells\\nfelly\\nfelts\\nfelty\\nfemal\\nfemes\\nfemmy\\nfends\\nfendy\\nfenis\\nfenks\\nfenny\\nfents\\nfeods\\nfeoff\\nferer\\nferes\\nferia\\nferly\\nfermi\\nferms\\nferns\\nferny\\nfesse\\nfesta\\nfests\\nfesty\\nfetas\\nfeted\\nfetes\\nfetor\\nfetta\\nfetts\\nfetwa\\nfeuar\\nfeuds\\nfeued\\nfeyed\\nfeyer\\nfeyly\\nfezes\\nfezzy\\nfiars\\nfiats\\nfibro\\nfices\\nfiche\\nfichu\\nficin\\nficos\\nfides\\nfidge\\nfidos\\nfiefs\\nfient\\nfiere\\nfiers\\nfiest\\nfifed\\nfifer\\nfifes\\nfifis\\nfiggy\\nfigos\\nfiked\\nfikes\\nfilar\\nfilch\\nfiled\\nfiles\\nfilii\\nfilks\\nfille\\nfillo\\nfills\\nfilmi\\nfilms\\nfilos\\nfilum\\nfinca\\nfinds\\nfined\\nfines\\nfinis\\nfinks\\nfinny\\nfinos\\nfiord\\nfiqhs\\nfique\\nfired\\nfirer\\nfires\\nfirie\\nfirks\\nfirms\\nfirns\\nfirry\\nfirth\\nfiscs\\nfisks\\nfists\\nfisty\\nfitch\\nfitly\\nfitna\\nfitte\\nfitts\\nfiver\\nfives\\nfixed\\nfixes\\nfixit\\nfjeld\\nflabs\\nflaff\\nflags\\nflaks\\nflamm\\nflams\\nflamy\\nflane\\nflans\\nflaps\\nflary\\nflats\\nflava\\nflawn\\nflaws\\nflawy\\nflaxy\\nflays\\nfleam\\nfleas\\nfleek\\nfleer\\nflees\\nflegs\\nfleme\\nfleur\\nflews\\nflexi\\nflexo\\nfleys\\nflics\\nflied\\nflies\\nflimp\\nflims\\nflips\\nflirs\\nflisk\\nflite\\nflits\\nflitt\\nflobs\\nflocs\\nfloes\\nflogs\\nflong\\nflops\\nflors\\nflory\\nflosh\\nflota\\nflote\\nflows\\nflubs\\nflued\\nflues\\nfluey\\nfluky\\nflump\\nfluor\\nflurr\\nfluty\\nfluyt\\nflyby\\nflype\\nflyte\\nfoals\\nfoams\\nfoehn\\nfogey\\nfogie\\nfogle\\nfogou\\nfohns\\nfoids\\nfoils\\nfoins\\nfolds\\nfoley\\nfolia\\nfolic\\nfolie\\nfolks\\nfolky\\nfomes\\nfonda\\nfonds\\nfondu\\nfones\\nfonly\\nfonts\\nfoods\\nfoody\\nfools\\nfoots\\nfooty\\nforam\\nforbs\\nforby\\nfordo\\nfords\\nforel\\nfores\\nforex\\nforks\\nforky\\nforme\\nforms\\nforts\\nforza\\nforze\\nfossa\\nfosse\\nfouat\\nfouds\\nfouer\\nfouet\\nfoule\\nfouls\\nfount\\nfours\\nfouth\\nfovea\\nfowls\\nfowth\\nfoxed\\nfoxes\\nfoxie\\nfoyle\\nfoyne\\nfrabs\\nfrack\\nfract\\nfrags\\nfraim\\nfranc\\nfrape\\nfraps\\nfrass\\nfrate\\nfrati\\nfrats\\nfraus\\nfrays\\nfrees\\nfreet\\nfreit\\nfremd\\nfrena\\nfreon\\nfrere\\nfrets\\nfribs\\nfrier\\nfries\\nfrigs\\nfrise\\nfrist\\nfrith\\nfrits\\nfritt\\nfrize\\nfrizz\\nfroes\\nfrogs\\nfrons\\nfrore\\nfrorn\\nfrory\\nfrosh\\nfrows\\nfrowy\\nfrugs\\nfrump\\nfrush\\nfrust\\nfryer\\nfubar\\nfubby\\nfubsy\\nfucks\\nfucus\\nfuddy\\nfudgy\\nfuels\\nfuero\\nfuffs\\nfuffy\\nfugal\\nfuggy\\nfugie\\nfugio\\nfugle\\nfugly\\nfugus\\nfujis\\nfulls\\nfumed\\nfumer\\nfumes\\nfumet\\nfundi\\nfunds\\nfundy\\nfungo\\nfungs\\nfunks\\nfural\\nfuran\\nfurca\\nfurls\\nfurol\\nfurrs\\nfurth\\nfurze\\nfurzy\\nfused\\nfusee\\nfusel\\nfuses\\nfusil\\nfusks\\nfusts\\nfusty\\nfuton\\nfuzed\\nfuzee\\nfuzes\\nfuzil\\nfyces\\nfyked\\nfykes\\nfyles\\nfyrds\\nfytte\\ngabba\\ngabby\\ngable\\ngaddi\\ngades\\ngadge\\ngadid\\ngadis\\ngadje\\ngadjo\\ngadso\\ngaffs\\ngaged\\ngager\\ngages\\ngaids\\ngains\\ngairs\\ngaita\\ngaits\\ngaitt\\ngajos\\ngalah\\ngalas\\ngalax\\ngalea\\ngaled\\ngales\\ngalls\\ngally\\ngalop\\ngalut\\ngalvo\\ngamas\\ngamay\\ngamba\\ngambe\\ngambo\\ngambs\\ngamed\\ngames\\ngamey\\ngamic\\ngamin\\ngamme\\ngammy\\ngamps\\nganch\\ngandy\\nganef\\nganev\\ngangs\\nganja\\nganof\\ngants\\ngaols\\ngaped\\ngaper\\ngapes\\ngapos\\ngappy\\ngarbe\\ngarbo\\ngarbs\\ngarda\\ngares\\ngaris\\ngarms\\ngarni\\ngarre\\ngarth\\ngarum\\ngases\\ngasps\\ngaspy\\ngasts\\ngatch\\ngated\\ngater\\ngates\\ngaths\\ngator\\ngauch\\ngaucy\\ngauds\\ngauje\\ngault\\ngaums\\ngaumy\\ngaups\\ngaurs\\ngauss\\ngauzy\\ngavot\\ngawcy\\ngawds\\ngawks\\ngawps\\ngawsy\\ngayal\\ngazal\\ngazar\\ngazed\\ngazes\\ngazon\\ngazoo\\ngeals\\ngeans\\ngeare\\ngears\\ngeats\\ngebur\\ngecks\\ngeeks\\ngeeps\\ngeest\\ngeist\\ngeits\\ngelds\\ngelee\\ngelid\\ngelly\\ngelts\\ngemel\\ngemma\\ngemmy\\ngemot\\ngenal\\ngenas\\ngenes\\ngenet\\ngenic\\ngenii\\ngenip\\ngenny\\ngenoa\\ngenom\\ngenro\\ngents\\ngenty\\ngenua\\ngenus\\ngeode\\ngeoid\\ngerah\\ngerbe\\ngeres\\ngerle\\ngerms\\ngermy\\ngerne\\ngesse\\ngesso\\ngeste\\ngests\\ngetas\\ngetup\\ngeums\\ngeyan\\ngeyer\\nghast\\nghats\\nghaut\\nghazi\\nghees\\nghest\\nghyll\\ngibed\\ngibel\\ngiber\\ngibes\\ngibli\\ngibus\\ngifts\\ngigas\\ngighe\\ngigot\\ngigue\\ngilas\\ngilds\\ngilet\\ngills\\ngilly\\ngilpy\\ngilts\\ngimel\\ngimme\\ngimps\\ngimpy\\nginch\\nginge\\ngings\\nginks\\nginny\\nginzo\\ngipon\\ngippo\\ngippy\\ngirds\\ngirls\\ngirns\\ngiron\\ngiros\\ngirrs\\ngirsh\\ngirts\\ngismo\\ngisms\\ngists\\ngitch\\ngites\\ngiust\\ngived\\ngives\\ngizmo\\nglace\\nglads\\nglady\\nglaik\\nglair\\nglams\\nglans\\nglary\\nglaum\\nglaur\\nglazy\\ngleba\\nglebe\\ngleby\\nglede\\ngleds\\ngleed\\ngleek\\nglees\\ngleet\\ngleis\\nglens\\nglent\\ngleys\\nglial\\nglias\\nglibs\\ngliff\\nglift\\nglike\\nglime\\nglims\\nglisk\\nglits\\nglitz\\ngloam\\nglobi\\nglobs\\ngloby\\nglode\\nglogg\\ngloms\\ngloop\\nglops\\nglost\\nglout\\nglows\\ngloze\\nglued\\ngluer\\nglues\\ngluey\\nglugs\\nglume\\nglums\\ngluon\\nglute\\ngluts\\ngnarl\\ngnarr\\ngnars\\ngnats\\ngnawn\\ngnaws\\ngnows\\ngoads\\ngoafs\\ngoals\\ngoary\\ngoats\\ngoaty\\ngoban\\ngobar\\ngobbi\\ngobbo\\ngobby\\ngobis\\ngobos\\ngodet\\ngodso\\ngoels\\ngoers\\ngoest\\ngoeth\\ngoety\\ngofer\\ngoffs\\ngogga\\ngogos\\ngoier\\ngojis\\ngolds\\ngoldy\\ngoles\\ngolfs\\ngolpe\\ngolps\\ngombo\\ngomer\\ngompa\\ngonch\\ngonef\\ngongs\\ngonia\\ngonif\\ngonks\\ngonna\\ngonof\\ngonys\\ngonzo\\ngooby\\ngoods\\ngoofs\\ngoogs\\ngooky\\ngoold\\ngools\\ngooly\\ngoons\\ngoony\\ngoops\\ngoopy\\ngoors\\ngoory\\ngoosy\\ngopak\\ngopik\\ngoral\\ngoras\\ngored\\ngores\\ngoris\\ngorms\\ngormy\\ngorps\\ngorse\\ngorsy\\ngosht\\ngosse\\ngotch\\ngoths\\ngothy\\ngotta\\ngouch\\ngouks\\ngoura\\ngouts\\ngouty\\ngowan\\ngowds\\ngowfs\\ngowks\\ngowls\\ngowns\\ngoxes\\ngoyim\\ngoyle\\ngraal\\ngrabs\\ngrads\\ngraff\\ngraip\\ngrama\\ngrame\\ngramp\\ngrams\\ngrana\\ngrans\\ngrapy\\ngravs\\ngrays\\ngrebe\\ngrebo\\ngrece\\ngreek\\ngrees\\ngrege\\ngrego\\ngrein\\ngrens\\ngrese\\ngreve\\ngrews\\ngreys\\ngrice\\ngride\\ngrids\\ngriff\\ngrift\\ngrigs\\ngrike\\ngrins\\ngriot\\ngrips\\ngript\\ngripy\\ngrise\\ngrist\\ngrisy\\ngrith\\ngrits\\ngrize\\ngroat\\ngrody\\ngrogs\\ngroks\\ngroma\\ngrone\\ngroof\\ngrosz\\ngrots\\ngrouf\\ngrovy\\ngrows\\ngrrls\\ngrrrl\\ngrubs\\ngrued\\ngrues\\ngrufe\\ngrume\\ngrump\\ngrund\\ngryce\\ngryde\\ngryke\\ngrype\\ngrypt\\nguaco\\nguana\\nguano\\nguans\\nguars\\ngucks\\ngucky\\ngudes\\nguffs\\ngugas\\nguids\\nguimp\\nguiro\\ngulag\\ngular\\ngulas\\ngules\\ngulet\\ngulfs\\ngulfy\\ngulls\\ngulph\\ngulps\\ngulpy\\ngumma\\ngummi\\ngumps\\ngundy\\ngunge\\ngungy\\ngunks\\ngunky\\ngunny\\nguqin\\ngurdy\\ngurge\\ngurls\\ngurly\\ngurns\\ngurry\\ngursh\\ngurus\\ngushy\\ngusla\\ngusle\\ngusli\\ngussy\\ngusts\\ngutsy\\ngutta\\ngutty\\nguyed\\nguyle\\nguyot\\nguyse\\ngwine\\ngyals\\ngyans\\ngybed\\ngybes\\ngyeld\\ngymps\\ngynae\\ngynie\\ngynny\\ngynos\\ngyoza\\ngypos\\ngyppo\\ngyppy\\ngyral\\ngyred\\ngyres\\ngyron\\ngyros\\ngyrus\\ngytes\\ngyved\\ngyves\\nhaafs\\nhaars\\nhable\\nhabus\\nhacek\\nhacks\\nhadal\\nhaded\\nhades\\nhadji\\nhadst\\nhaems\\nhaets\\nhaffs\\nhafiz\\nhafts\\nhaggs\\nhahas\\nhaick\\nhaika\\nhaiks\\nhaiku\\nhails\\nhaily\\nhains\\nhaint\\nhairs\\nhaith\\nhajes\\nhajis\\nhajji\\nhakam\\nhakas\\nhakea\\nhakes\\nhakim\\nhakus\\nhalal\\nhaled\\nhaler\\nhales\\nhalfa\\nhalfs\\nhalid\\nhallo\\nhalls\\nhalma\\nhalms\\nhalon\\nhalos\\nhalse\\nhalts\\nhalva\\nhalwa\\nhamal\\nhamba\\nhamed\\nhames\\nhammy\\nhamza\\nhanap\\nhance\\nhanch\\nhands\\nhangi\\nhangs\\nhanks\\nhanky\\nhansa\\nhanse\\nhants\\nhaole\\nhaoma\\nhapax\\nhaply\\nhappi\\nhapus\\nharam\\nhards\\nhared\\nhares\\nharim\\nharks\\nharls\\nharms\\nharns\\nharos\\nharps\\nharts\\nhashy\\nhasks\\nhasps\\nhasta\\nhated\\nhates\\nhatha\\nhauds\\nhaufs\\nhaugh\\nhauld\\nhaulm\\nhauls\\nhault\\nhauns\\nhause\\nhaver\\nhaves\\nhawed\\nhawks\\nhawms\\nhawse\\nhayed\\nhayer\\nhayey\\nhayle\\nhazan\\nhazed\\nhazer\\nhazes\\nheads\\nheald\\nheals\\nheame\\nheaps\\nheapy\\nheare\\nhears\\nheast\\nheats\\nheben\\nhebes\\nhecht\\nhecks\\nheder\\nhedgy\\nheeds\\nheedy\\nheels\\nheeze\\nhefte\\nhefts\\nheids\\nheigh\\nheils\\nheirs\\nhejab\\nhejra\\nheled\\nheles\\nhelio\\nhells\\nhelms\\nhelos\\nhelot\\nhelps\\nhelve\\nhemal\\nhemes\\nhemic\\nhemin\\nhemps\\nhempy\\nhench\\nhends\\nhenge\\nhenna\\nhenny\\nhenry\\nhents\\nhepar\\nherbs\\nherby\\nherds\\nheres\\nherls\\nherma\\nherms\\nherns\\nheros\\nherry\\nherse\\nhertz\\nherye\\nhesps\\nhests\\nhetes\\nheths\\nheuch\\nheugh\\nhevea\\nhewed\\nhewer\\nhewgh\\nhexad\\nhexed\\nhexer\\nhexes\\nhexyl\\nheyed\\nhiant\\nhicks\\nhided\\nhider\\nhides\\nhiems\\nhighs\\nhight\\nhijab\\nhijra\\nhiked\\nhiker\\nhikes\\nhikoi\\nhilar\\nhilch\\nhillo\\nhills\\nhilts\\nhilum\\nhilus\\nhimbo\\nhinau\\nhinds\\nhings\\nhinky\\nhinny\\nhints\\nhiois\\nhiply\\nhired\\nhiree\\nhirer\\nhires\\nhissy\\nhists\\nhithe\\nhived\\nhiver\\nhives\\nhizen\\nhoaed\\nhoagy\\nhoars\\nhoary\\nhoast\\nhobos\\nhocks\\nhocus\\nhodad\\nhodja\\nhoers\\nhogan\\nhogen\\nhoggs\\nhoghs\\nhohed\\nhoick\\nhoied\\nhoiks\\nhoing\\nhoise\\nhokas\\nhoked\\nhokes\\nhokey\\nhokis\\nhokku\\nhokum\\nholds\\nholed\\nholes\\nholey\\nholks\\nholla\\nhollo\\nholme\\nholms\\nholon\\nholos\\nholts\\nhomas\\nhomed\\nhomes\\nhomey\\nhomie\\nhomme\\nhonan\\nhonda\\nhonds\\nhoned\\nhoner\\nhones\\nhongi\\nhongs\\nhonks\\nhonky\\nhooch\\nhoods\\nhoody\\nhooey\\nhoofs\\nhooka\\nhooks\\nhooky\\nhooly\\nhoons\\nhoops\\nhoord\\nhoors\\nhoosh\\nhoots\\nhooty\\nhoove\\nhopak\\nhoped\\nhoper\\nhopes\\nhoppy\\nhorah\\nhoral\\nhoras\\nhoris\\nhorks\\nhorme\\nhorns\\nhorst\\nhorsy\\nhosed\\nhosel\\nhosen\\nhoser\\nhoses\\nhosey\\nhosta\\nhosts\\nhotch\\nhoten\\nhotty\\nhouff\\nhoufs\\nhough\\nhouri\\nhours\\nhouts\\nhovea\\nhoved\\nhoven\\nhoves\\nhowbe\\nhowes\\nhowff\\nhowfs\\nhowks\\nhowls\\nhowre\\nhowso\\nhoxed\\nhoxes\\nhoyas\\nhoyed\\nhoyle\\nhubby\\nhucks\\nhudna\\nhudud\\nhuers\\nhuffs\\nhuffy\\nhuger\\nhuggy\\nhuhus\\nhuias\\nhulas\\nhules\\nhulks\\nhulky\\nhullo\\nhulls\\nhully\\nhumas\\nhumfs\\nhumic\\nhumps\\nhumpy\\nhunks\\nhunts\\nhurds\\nhurls\\nhurly\\nhurra\\nhurst\\nhurts\\nhushy\\nhusks\\nhusos\\nhutia\\nhuzza\\nhuzzy\\nhwyls\\nhydra\\nhyens\\nhygge\\nhying\\nhykes\\nhylas\\nhyleg\\nhyles\\nhylic\\nhymns\\nhynde\\nhyoid\\nhyped\\nhypes\\nhypha\\nhyphy\\nhypos\\nhyrax\\nhyson\\nhythe\\niambi\\niambs\\nibrik\\nicers\\niched\\niches\\nichor\\nicier\\nicker\\nickle\\nicons\\nictal\\nictic\\nictus\\nidant\\nideas\\nidees\\nident\\nidled\\nidles\\nidola\\nidols\\nidyls\\niftar\\nigapo\\nigged\\niglus\\nihram\\nikans\\nikats\\nikons\\nileac\\nileal\\nileum\\nileus\\niliad\\nilial\\nilium\\niller\\nillth\\nimago\\nimams\\nimari\\nimaum\\nimbar\\nimbed\\nimide\\nimido\\nimids\\nimine\\nimino\\nimmew\\nimmit\\nimmix\\nimped\\nimpis\\nimpot\\nimpro\\nimshi\\nimshy\\ninapt\\ninarm\\ninbye\\nincel\\nincle\\nincog\\nincus\\nincut\\nindew\\nindia\\nindie\\nindol\\nindow\\nindri\\nindue\\ninerm\\ninfix\\ninfos\\ninfra\\ningan\\ningle\\ninion\\ninked\\ninker\\ninkle\\ninned\\ninnit\\ninorb\\ninrun\\ninset\\ninspo\\nintel\\nintil\\nintis\\nintra\\ninula\\ninure\\ninurn\\ninust\\ninvar\\ninwit\\niodic\\niodid\\niodin\\niotas\\nippon\\nirade\\nirids\\niring\\nirked\\niroko\\nirone\\nirons\\nisbas\\nishes\\nisled\\nisles\\nisnae\\nissei\\nistle\\nitems\\nither\\nivied\\nivies\\nixias\\nixnay\\nixora\\nixtle\\nizard\\nizars\\nizzat\\njaaps\\njabot\\njacal\\njacks\\njacky\\njaded\\njades\\njafas\\njaffa\\njagas\\njager\\njaggs\\njaggy\\njagir\\njagra\\njails\\njaker\\njakes\\njakey\\njalap\\njalop\\njambe\\njambo\\njambs\\njambu\\njames\\njammy\\njamon\\njanes\\njanns\\njanny\\njanty\\njapan\\njaped\\njaper\\njapes\\njarks\\njarls\\njarps\\njarta\\njarul\\njasey\\njaspe\\njasps\\njatos\\njauks\\njaups\\njavas\\njavel\\njawan\\njawed\\njaxie\\njeans\\njeats\\njebel\\njedis\\njeels\\njeely\\njeeps\\njeers\\njeeze\\njefes\\njeffs\\njehad\\njehus\\njelab\\njello\\njells\\njembe\\njemmy\\njenny\\njeons\\njerid\\njerks\\njerry\\njesse\\njests\\njesus\\njetes\\njeton\\njeune\\njewed\\njewie\\njhala\\njiaos\\njibba\\njibbs\\njibed\\njiber\\njibes\\njiffs\\njiggy\\njigot\\njihad\\njills\\njilts\\njimmy\\njimpy\\njingo\\njinks\\njinne\\njinni\\njinns\\njirds\\njirga\\njirre\\njisms\\njived\\njiver\\njives\\njivey\\njnana\\njobed\\njobes\\njocko\\njocks\\njocky\\njocos\\njodel\\njoeys\\njohns\\njoins\\njoked\\njokes\\njokey\\njokol\\njoled\\njoles\\njolls\\njolts\\njolty\\njomon\\njomos\\njones\\njongs\\njonty\\njooks\\njoram\\njorum\\njotas\\njotty\\njotun\\njoual\\njougs\\njouks\\njoule\\njours\\njowar\\njowed\\njowls\\njowly\\njoyed\\njubas\\njubes\\njucos\\njudas\\njudgy\\njudos\\njugal\\njugum\\njujus\\njuked\\njukes\\njukus\\njulep\\njumar\\njumby\\njumps\\njunco\\njunks\\njunky\\njupes\\njupon\\njural\\njurat\\njurel\\njures\\njusts\\njutes\\njutty\\njuves\\njuvie\\nkaama\\nkabab\\nkabar\\nkabob\\nkacha\\nkacks\\nkadai\\nkades\\nkadis\\nkafir\\nkagos\\nkagus\\nkahal\\nkaiak\\nkaids\\nkaies\\nkaifs\\nkaika\\nkaiks\\nkails\\nkaims\\nkaing\\nkains\\nkakas\\nkakis\\nkalam\\nkales\\nkalif\\nkalis\\nkalpa\\nkamas\\nkames\\nkamik\\nkamis\\nkamme\\nkanae\\nkanas\\nkandy\\nkaneh\\nkanes\\nkanga\\nkangs\\nkanji\\nkants\\nkanzu\\nkaons\\nkapas\\nkaphs\\nkapok\\nkapow\\nkapus\\nkaput\\nkaras\\nkarat\\nkarks\\nkarns\\nkaroo\\nkaros\\nkarri\\nkarst\\nkarsy\\nkarts\\nkarzy\\nkasha\\nkasme\\nkatal\\nkatas\\nkatis\\nkatti\\nkaugh\\nkauri\\nkauru\\nkaury\\nkaval\\nkavas\\nkawas\\nkawau\\nkawed\\nkayle\\nkayos\\nkazis\\nkazoo\\nkbars\\nkebar\\nkebob\\nkecks\\nkedge\\nkedgy\\nkeech\\nkeefs\\nkeeks\\nkeels\\nkeema\\nkeeno\\nkeens\\nkeeps\\nkeets\\nkeeve\\nkefir\\nkehua\\nkeirs\\nkelep\\nkelim\\nkells\\nkelly\\nkelps\\nkelpy\\nkelts\\nkelty\\nkembo\\nkembs\\nkemps\\nkempt\\nkempy\\nkenaf\\nkench\\nkendo\\nkenos\\nkente\\nkents\\nkepis\\nkerbs\\nkerel\\nkerfs\\nkerky\\nkerma\\nkerne\\nkerns\\nkeros\\nkerry\\nkerve\\nkesar\\nkests\\nketas\\nketch\\nketes\\nketol\\nkevel\\nkevil\\nkexes\\nkeyed\\nkeyer\\nkhadi\\nkhafs\\nkhans\\nkhaph\\nkhats\\nkhaya\\nkhazi\\nkheda\\nkheth\\nkhets\\nkhoja\\nkhors\\nkhoum\\nkhuds\\nkiaat\\nkiack\\nkiang\\nkibbe\\nkibbi\\nkibei\\nkibes\\nkibla\\nkicks\\nkicky\\nkiddo\\nkiddy\\nkidel\\nkidge\\nkiefs\\nkiers\\nkieve\\nkievs\\nkight\\nkikoi\\nkiley\\nkilim\\nkills\\nkilns\\nkilos\\nkilps\\nkilts\\nkilty\\nkimbo\\nkinas\\nkinda\\nkinds\\nkindy\\nkines\\nkings\\nkinin\\nkinks\\nkinos\\nkiore\\nkipes\\nkippa\\nkipps\\nkirby\\nkirks\\nkirns\\nkirri\\nkisan\\nkissy\\nkists\\nkited\\nkiter\\nkites\\nkithe\\nkiths\\nkitul\\nkivas\\nkiwis\\nklang\\nklaps\\nklett\\nklick\\nklieg\\nkliks\\nklong\\nkloof\\nkluge\\nklutz\\nknags\\nknaps\\nknarl\\nknars\\nknaur\\nknawe\\nknees\\nknell\\nknish\\nknits\\nknive\\nknobs\\nknops\\nknosp\\nknots\\nknout\\nknowe\\nknows\\nknubs\\nknurl\\nknurr\\nknurs\\nknuts\\nkoans\\nkoaps\\nkoban\\nkobos\\nkoels\\nkoffs\\nkofta\\nkogal\\nkohas\\nkohen\\nkohls\\nkoine\\nkojis\\nkokam\\nkokas\\nkoker\\nkokra\\nkokum\\nkolas\\nkolos\\nkombu\\nkonbu\\nkondo\\nkonks\\nkooks\\nkooky\\nkoori\\nkopek\\nkophs\\nkopje\\nkoppa\\nkorai\\nkoras\\nkorat\\nkores\\nkorma\\nkoros\\nkorun\\nkorus\\nkoses\\nkotch\\nkotos\\nkotow\\nkoura\\nkraal\\nkrabs\\nkraft\\nkrais\\nkrait\\nkrang\\nkrans\\nkranz\\nkraut\\nkrays\\nkreep\\nkreng\\nkrewe\\nkrona\\nkrone\\nkroon\\nkrubi\\nkrunk\\nksars\\nkubie\\nkudos\\nkudus\\nkudzu\\nkufis\\nkugel\\nkuias\\nkukri\\nkukus\\nkulak\\nkulan\\nkulas\\nkulfi\\nkumis\\nkumys\\nkuris\\nkurre\\nkurta\\nkurus\\nkusso\\nkutas\\nkutch\\nkutis\\nkutus\\nkuzus\\nkvass\\nkvell\\nkwela\\nkyack\\nkyaks\\nkyang\\nkyars\\nkyats\\nkybos\\nkydst\\nkyles\\nkylie\\nkylin\\nkylix\\nkyloe\\nkynde\\nkynds\\nkypes\\nkyrie\\nkytes\\nkythe\\nlaari\\nlabda\\nlabia\\nlabis\\nlabra\\nlaced\\nlacer\\nlaces\\nlacet\\nlacey\\nlacks\\nladdy\\nladed\\nlader\\nlades\\nlaers\\nlaevo\\nlagan\\nlahal\\nlahar\\nlaich\\nlaics\\nlaids\\nlaigh\\nlaika\\nlaiks\\nlaird\\nlairs\\nlairy\\nlaith\\nlaity\\nlaked\\nlaker\\nlakes\\nlakhs\\nlakin\\nlaksa\\nlaldy\\nlalls\\nlamas\\nlambs\\nlamby\\nlamed\\nlamer\\nlames\\nlamia\\nlammy\\nlamps\\nlanai\\nlanas\\nlanch\\nlande\\nlands\\nlanes\\nlanks\\nlants\\nlapin\\nlapis\\nlapje\\nlarch\\nlards\\nlardy\\nlaree\\nlares\\nlargo\\nlaris\\nlarks\\nlarky\\nlarns\\nlarnt\\nlarum\\nlased\\nlaser\\nlases\\nlassi\\nlassu\\nlassy\\nlasts\\nlatah\\nlated\\nlaten\\nlatex\\nlathi\\nlaths\\nlathy\\nlatke\\nlatus\\nlauan\\nlauch\\nlauds\\nlaufs\\nlaund\\nlaura\\nlaval\\nlavas\\nlaved\\nlaver\\nlaves\\nlavra\\nlavvy\\nlawed\\nlawer\\nlawin\\nlawks\\nlawns\\nlawny\\nlaxed\\nlaxer\\nlaxes\\nlaxly\\nlayed\\nlayin\\nlayup\\nlazar\\nlazed\\nlazes\\nlazos\\nlazzi\\nlazzo\\nleads\\nleady\\nleafs\\nleaks\\nleams\\nleans\\nleany\\nleaps\\nleare\\nlears\\nleary\\nleats\\nleavy\\nleaze\\nleben\\nleccy\\nledes\\nledgy\\nledum\\nleear\\nleeks\\nleeps\\nleers\\nleese\\nleets\\nleeze\\nlefte\\nlefts\\nleger\\nleges\\nlegge\\nleggo\\nlegit\\nlehrs\\nlehua\\nleirs\\nleish\\nleman\\nlemed\\nlemel\\nlemes\\nlemma\\nlemme\\nlends\\nlenes\\nlengs\\nlenis\\nlenos\\nlense\\nlenti\\nlento\\nleone\\nlepid\\nlepra\\nlepta\\nlered\\nleres\\nlerps\\nleses\\nlests\\nletch\\nlethe\\nletup\\nleuch\\nleuco\\nleuds\\nleugh\\nlevas\\nlevee\\nleves\\nlevin\\nlevis\\nlewis\\nlexes\\nlexis\\nlezes\\nlezza\\nlezzy\\nliana\\nliane\\nliang\\nliard\\nliars\\nliart\\nliber\\nlibra\\nlibri\\nlichi\\nlicht\\nlicit\\nlicks\\nlidar\\nlidos\\nliefs\\nliens\\nliers\\nlieus\\nlieve\\nlifer\\nlifes\\nlifts\\nligan\\nliger\\nligge\\nligne\\nliked\\nliker\\nlikes\\nlikin\\nlills\\nlilos\\nlilts\\nliman\\nlimas\\nlimax\\nlimba\\nlimbi\\nlimbs\\nlimby\\nlimed\\nlimen\\nlimes\\nlimey\\nlimma\\nlimns\\nlimos\\nlimpa\\nlimps\\nlinac\\nlinch\\nlinds\\nlindy\\nlined\\nlines\\nliney\\nlinga\\nlings\\nlingy\\nlinin\\nlinks\\nlinky\\nlinns\\nlinny\\nlinos\\nlints\\nlinty\\nlinum\\nlinux\\nlions\\nlipas\\nlipes\\nlipin\\nlipos\\nlippy\\nliras\\nlirks\\nlirot\\nlisks\\nlisle\\nlisps\\nlists\\nlitai\\nlitas\\nlited\\nliter\\nlites\\nlitho\\nliths\\nlitre\\nlived\\nliven\\nlives\\nlivor\\nlivre\\nllano\\nloach\\nloads\\nloafs\\nloams\\nloans\\nloast\\nloave\\nlobar\\nlobed\\nlobes\\nlobos\\nlobus\\nloche\\nlochs\\nlocie\\nlocis\\nlocks\\nlocos\\nlocum\\nloden\\nlodes\\nloess\\nlofts\\nlogan\\nloges\\nloggy\\nlogia\\nlogie\\nlogoi\\nlogon\\nlogos\\nlohan\\nloids\\nloins\\nloipe\\nloirs\\nlokes\\nlolls\\nlolly\\nlolog\\nlomas\\nlomed\\nlomes\\nloner\\nlonga\\nlonge\\nlongs\\nlooby\\nlooed\\nlooey\\nloofa\\nloofs\\nlooie\\nlooks\\nlooky\\nlooms\\nloons\\nloony\\nloops\\nloord\\nloots\\nloped\\nloper\\nlopes\\nloppy\\nloral\\nloran\\nlords\\nlordy\\nlorel\\nlores\\nloric\\nloris\\nlosed\\nlosel\\nlosen\\nloses\\nlossy\\nlotah\\nlotas\\nlotes\\nlotic\\nlotos\\nlotsa\\nlotta\\nlotte\\nlotto\\nlotus\\nloued\\nlough\\nlouie\\nlouis\\nlouma\\nlound\\nlouns\\nloupe\\nloups\\nloure\\nlours\\nloury\\nlouts\\nlovat\\nloved\\nloves\\nlovey\\nlovie\\nlowan\\nlowed\\nlowes\\nlownd\\nlowne\\nlowns\\nlowps\\nlowry\\nlowse\\nlowts\\nloxed\\nloxes\\nlozen\\nluach\\nluaus\\nlubed\\nlubes\\nlubra\\nluces\\nlucks\\nlucre\\nludes\\nludic\\nludos\\nluffa\\nluffs\\nluged\\nluger\\nluges\\nlulls\\nlulus\\nlumas\\nlumbi\\nlumme\\nlummy\\nlumps\\nlunas\\nlunes\\nlunet\\nlungi\\nlungs\\nlunks\\nlunts\\nlupin\\nlured\\nlurer\\nlures\\nlurex\\nlurgi\\nlurgy\\nlurks\\nlurry\\nlurve\\nluser\\nlushy\\nlusks\\nlusts\\nlusus\\nlutea\\nluted\\nluter\\nlutes\\nluvvy\\nluxed\\nluxer\\nluxes\\nlweis\\nlyams\\nlyard\\nlyart\\nlyase\\nlycea\\nlycee\\nlycra\\nlymes\\nlynes\\nlyres\\nlysed\\nlyses\\nlysin\\nlysis\\nlysol\\nlyssa\\nlyted\\nlytes\\nlythe\\nlytic\\nlytta\\nmaaed\\nmaare\\nmaars\\nmabes\\nmacas\\nmaced\\nmacer\\nmaces\\nmache\\nmachi\\nmachs\\nmacks\\nmacle\\nmacon\\nmadge\\nmadid\\nmadre\\nmaerl\\nmafic\\nmages\\nmaggs\\nmagot\\nmagus\\nmahoe\\nmahua\\nmahwa\\nmaids\\nmaiko\\nmaiks\\nmaile\\nmaill\\nmails\\nmaims\\nmains\\nmaire\\nmairs\\nmaise\\nmaist\\nmakar\\nmakes\\nmakis\\nmakos\\nmalam\\nmalar\\nmalas\\nmalax\\nmales\\nmalic\\nmalik\\nmalis\\nmalls\\nmalms\\nmalmy\\nmalts\\nmalty\\nmalus\\nmalva\\nmalwa\\nmamas\\nmamba\\nmamee\\nmamey\\nmamie\\nmanas\\nmanat\\nmandi\\nmaneb\\nmaned\\nmaneh\\nmanes\\nmanet\\nmangs\\nmanis\\nmanky\\nmanna\\nmanos\\nmanse\\nmanta\\nmanto\\nmanty\\nmanul\\nmanus\\nmapau\\nmaqui\\nmarae\\nmarah\\nmaras\\nmarcs\\nmardy\\nmares\\nmarge\\nmargs\\nmaria\\nmarid\\nmarka\\nmarks\\nmarle\\nmarls\\nmarly\\nmarms\\nmaron\\nmaror\\nmarra\\nmarri\\nmarse\\nmarts\\nmarvy\\nmasas\\nmased\\nmaser\\nmases\\nmashy\\nmasks\\nmassa\\nmassy\\nmasts\\nmasty\\nmasus\\nmatai\\nmated\\nmater\\nmates\\nmaths\\nmatin\\nmatlo\\nmatte\\nmatts\\nmatza\\nmatzo\\nmauby\\nmauds\\nmauls\\nmaund\\nmauri\\nmausy\\nmauts\\nmauzy\\nmaven\\nmavie\\nmavin\\nmavis\\nmawed\\nmawks\\nmawky\\nmawns\\nmawrs\\nmaxed\\nmaxes\\nmaxis\\nmayan\\nmayas\\nmayed\\nmayos\\nmayst\\nmazed\\nmazer\\nmazes\\nmazey\\nmazut\\nmbira\\nmeads\\nmeals\\nmeane\\nmeans\\nmeany\\nmeare\\nmease\\nmeath\\nmeats\\nmebos\\nmechs\\nmecks\\nmedii\\nmedle\\nmeeds\\nmeers\\nmeets\\nmeffs\\nmeins\\nmeint\\nmeiny\\nmeith\\nmekka\\nmelas\\nmelba\\nmelds\\nmelic\\nmelik\\nmells\\nmelts\\nmelty\\nmemes\\nmemos\\nmenad\\nmends\\nmened\\nmenes\\nmenge\\nmengs\\nmensa\\nmense\\nmensh\\nmenta\\nmento\\nmenus\\nmeous\\nmeows\\nmerch\\nmercs\\nmerde\\nmered\\nmerel\\nmerer\\nmeres\\nmeril\\nmeris\\nmerks\\nmerle\\nmerls\\nmerse\\nmesal\\nmesas\\nmesel\\nmeses\\nmeshy\\nmesic\\nmesne\\nmeson\\nmessy\\nmesto\\nmeted\\nmetes\\nmetho\\nmeths\\nmetic\\nmetif\\nmetis\\nmetol\\nmetre\\nmeuse\\nmeved\\nmeves\\nmewed\\nmewls\\nmeynt\\nmezes\\nmezze\\nmezzo\\nmhorr\\nmiaou\\nmiaow\\nmiasm\\nmiaul\\nmicas\\nmiche\\nmicht\\nmicks\\nmicky\\nmicos\\nmicra\\nmiddy\\nmidgy\\nmidis\\nmiens\\nmieve\\nmiffs\\nmiffy\\nmifty\\nmiggs\\nmihas\\nmihis\\nmiked\\nmikes\\nmikra\\nmikva\\nmilch\\nmilds\\nmiler\\nmiles\\nmilfs\\nmilia\\nmilko\\nmilks\\nmille\\nmills\\nmilor\\nmilos\\nmilpa\\nmilts\\nmilty\\nmiltz\\nmimed\\nmimeo\\nmimer\\nmimes\\nmimsy\\nminae\\nminar\\nminas\\nmincy\\nminds\\nmined\\nmines\\nminge\\nmings\\nmingy\\nminis\\nminke\\nminks\\nminny\\nminos\\nmints\\nmired\\nmires\\nmirex\\nmirid\\nmirin\\nmirks\\nmirky\\nmirly\\nmiros\\nmirvs\\nmirza\\nmisch\\nmisdo\\nmises\\nmisgo\\nmisos\\nmissa\\nmists\\nmisty\\nmitch\\nmiter\\nmites\\nmitis\\nmitre\\nmitts\\nmixed\\nmixen\\nmixer\\nmixes\\nmixte\\nmixup\\nmizen\\nmizzy\\nmneme\\nmoans\\nmoats\\nmobby\\nmobes\\nmobey\\nmobie\\nmoble\\nmochi\\nmochs\\nmochy\\nmocks\\nmoder\\nmodes\\nmodge\\nmodii\\nmodus\\nmoers\\nmofos\\nmoggy\\nmohel\\nmohos\\nmohrs\\nmohua\\nmohur\\nmoile\\nmoils\\nmoira\\nmoire\\nmoits\\nmojos\\nmokes\\nmokis\\nmokos\\nmolal\\nmolas\\nmolds\\nmoled\\nmoles\\nmolla\\nmolls\\nmolly\\nmolto\\nmolts\\nmolys\\nmomes\\nmomma\\nmommy\\nmomus\\nmonad\\nmonal\\nmonas\\nmonde\\nmondo\\nmoner\\nmongo\\nmongs\\nmonic\\nmonie\\nmonks\\nmonos\\nmonte\\nmonty\\nmoobs\\nmooch\\nmoods\\nmooed\\nmooks\\nmoola\\nmooli\\nmools\\nmooly\\nmoong\\nmoons\\nmoony\\nmoops\\nmoors\\nmoory\\nmoots\\nmoove\\nmoped\\nmoper\\nmopes\\nmopey\\nmoppy\\nmopsy\\nmopus\\nmorae\\nmoras\\nmorat\\nmoray\\nmorel\\nmores\\nmoria\\nmorne\\nmorns\\nmorra\\nmorro\\nmorse\\nmorts\\nmosed\\nmoses\\nmosey\\nmosks\\nmosso\\nmoste\\nmosts\\nmoted\\nmoten\\nmotes\\nmotet\\nmotey\\nmoths\\nmothy\\nmotis\\nmotte\\nmotts\\nmotty\\nmotus\\nmotza\\nmouch\\nmoues\\nmould\\nmouls\\nmoups\\nmoust\\nmousy\\nmoved\\nmoves\\nmowas\\nmowed\\nmowra\\nmoxas\\nmoxie\\nmoyas\\nmoyle\\nmoyls\\nmozed\\nmozes\\nmozos\\nmpret\\nmucho\\nmucic\\nmucid\\nmucin\\nmucks\\nmucor\\nmucro\\nmudge\\nmudir\\nmudra\\nmuffs\\nmufti\\nmugga\\nmuggs\\nmuggy\\nmuhly\\nmuids\\nmuils\\nmuirs\\nmuist\\nmujik\\nmulct\\nmuled\\nmules\\nmuley\\nmulga\\nmulie\\nmulla\\nmulls\\nmulse\\nmulsh\\nmumms\\nmumps\\nmumsy\\nmumus\\nmunga\\nmunge\\nmungo\\nmungs\\nmunis\\nmunts\\nmuntu\\nmuons\\nmuras\\nmured\\nmures\\nmurex\\nmurid\\nmurks\\nmurls\\nmurly\\nmurra\\nmurre\\nmurri\\nmurrs\\nmurry\\nmurti\\nmurva\\nmusar\\nmusca\\nmused\\nmuser\\nmuses\\nmuset\\nmusha\\nmusit\\nmusks\\nmusos\\nmusse\\nmussy\\nmusth\\nmusts\\nmutch\\nmuted\\nmuter\\nmutes\\nmutha\\nmutis\\nmuton\\nmutts\\nmuxed\\nmuxes\\nmuzak\\nmuzzy\\nmvule\\nmyall\\nmylar\\nmynah\\nmynas\\nmyoid\\nmyoma\\nmyope\\nmyops\\nmyopy\\nmysid\\nmythi\\nmyths\\nmythy\\nmyxos\\nmzees\\nnaams\\nnaans\\nnabes\\nnabis\\nnabks\\nnabla\\nnabob\\nnache\\nnacho\\nnacre\\nnadas\\nnaeve\\nnaevi\\nnaffs\\nnagas\\nnaggy\\nnagor\\nnahal\\nnaiad\\nnaifs\\nnaiks\\nnails\\nnaira\\nnairu\\nnaked\\nnaker\\nnakfa\\nnalas\\nnaled\\nnalla\\nnamed\\nnamer\\nnames\\nnamma\\nnamus\\nnanas\\nnance\\nnancy\\nnandu\\nnanna\\nnanos\\nnanua\\nnapas\\nnaped\\nnapes\\nnapoo\\nnappa\\nnappe\\nnappy\\nnaras\\nnarco\\nnarcs\\nnards\\nnares\\nnaric\\nnaris\\nnarks\\nnarky\\nnarre\\nnashi\\nnatch\\nnates\\nnatis\\nnatty\\nnauch\\nnaunt\\nnavar\\nnaves\\nnavew\\nnavvy\\nnawab\\nnazes\\nnazir\\nnazis\\nnduja\\nneafe\\nneals\\nneaps\\nnears\\nneath\\nneats\\nnebek\\nnebel\\nnecks\\nneddy\\nneeds\\nneeld\\nneele\\nneemb\\nneems\\nneeps\\nneese\\nneeze\\nnegro\\nnegus\\nneifs\\nneist\\nneive\\nnelis\\nnelly\\nnemas\\nnemns\\nnempt\\nnenes\\nneons\\nneper\\nnepit\\nneral\\nnerds\\nnerka\\nnerks\\nnerol\\nnerts\\nnertz\\nnervy\\nnests\\nnetes\\nnetop\\nnetts\\nnetty\\nneuks\\nneume\\nneums\\nnevel\\nneves\\nnevus\\nnewbs\\nnewed\\nnewel\\nnewie\\nnewsy\\nnewts\\nnexts\\nnexus\\nngaio\\nngana\\nngati\\nngoma\\nngwee\\nnicad\\nnicht\\nnicks\\nnicol\\nnidal\\nnided\\nnides\\nnidor\\nnidus\\nniefs\\nnieve\\nnifes\\nniffs\\nniffy\\nnifty\\nniger\\nnighs\\nnihil\\nnikab\\nnikah\\nnikau\\nnills\\nnimbi\\nnimbs\\nnimps\\nniner\\nnines\\nninon\\nnipas\\nnippy\\nniqab\\nnirls\\nnirly\\nnisei\\nnisse\\nnisus\\nniter\\nnites\\nnitid\\nniton\\nnitre\\nnitro\\nnitry\\nnitty\\nnival\\nnixed\\nnixer\\nnixes\\nnixie\\nnizam\\nnkosi\\nnoahs\\nnobby\\nnocks\\nnodal\\nnoddy\\nnodes\\nnodus\\nnoels\\nnoggs\\nnohow\\nnoils\\nnoily\\nnoint\\nnoirs\\nnoles\\nnolls\\nnolos\\nnomas\\nnomen\\nnomes\\nnomic\\nnomoi\\nnomos\\nnonas\\nnonce\\nnones\\nnonet\\nnongs\\nnonis\\nnonny\\nnonyl\\nnoobs\\nnooit\\nnooks\\nnooky\\nnoons\\nnoops\\nnopal\\nnoria\\nnoris\\nnorks\\nnorma\\nnorms\\nnosed\\nnoser\\nnoses\\nnotal\\nnoted\\nnoter\\nnotes\\nnotum\\nnould\\nnoule\\nnouls\\nnouns\\nnouny\\nnoups\\nnovae\\nnovas\\nnovum\\nnoway\\nnowed\\nnowls\\nnowts\\nnowty\\nnoxal\\nnoxes\\nnoyau\\nnoyed\\nnoyes\\nnubby\\nnubia\\nnucha\\nnuddy\\nnuder\\nnudes\\nnudie\\nnudzh\\nnuffs\\nnugae\\nnuked\\nnukes\\nnulla\\nnulls\\nnumbs\\nnumen\\nnummy\\nnunny\\nnurds\\nnurdy\\nnurls\\nnurrs\\nnutso\\nnutsy\\nnyaff\\nnyala\\nnying\\nnyssa\\noaked\\noaker\\noakum\\noared\\noases\\noasis\\noasts\\noaten\\noater\\noaths\\noaves\\nobang\\nobeah\\nobeli\\nobeys\\nobias\\nobied\\nobiit\\nobits\\nobjet\\noboes\\nobole\\noboli\\nobols\\noccam\\nocher\\noches\\nochre\\nochry\\nocker\\nocrea\\noctad\\noctan\\noctas\\noctyl\\noculi\\nodahs\\nodals\\nodeon\\nodeum\\nodism\\nodist\\nodium\\nodors\\nodour\\nodyle\\nodyls\\nofays\\noffed\\noffie\\noflag\\nofter\\nogams\\nogeed\\nogees\\noggin\\nogham\\nogive\\nogled\\nogler\\nogles\\nogmic\\nogres\\nohias\\nohing\\nohmic\\nohone\\noidia\\noiled\\noiler\\noinks\\noints\\nojime\\nokapi\\nokays\\nokehs\\nokras\\noktas\\noldie\\noleic\\nolein\\nolent\\noleos\\noleum\\nolios\\nollas\\nollav\\noller\\nollie\\nology\\nolpae\\nolpes\\nomasa\\nomber\\nombus\\nomens\\nomers\\nomits\\nomlah\\nomovs\\nomrah\\noncer\\nonces\\noncet\\noncus\\nonely\\noners\\nonery\\nonium\\nonkus\\nonlay\\nonned\\nontic\\noobit\\noohed\\noomph\\noonts\\nooped\\noorie\\nooses\\nootid\\noozed\\noozes\\nopahs\\nopals\\nopens\\nopepe\\noping\\noppos\\nopsin\\nopted\\nopter\\norach\\noracy\\norals\\norang\\norant\\norate\\norbed\\norcas\\norcin\\nordos\\noread\\norfes\\norgia\\norgic\\norgue\\noribi\\noriel\\norixa\\norles\\norlon\\norlop\\normer\\nornis\\norpin\\norris\\northo\\norval\\norzos\\noscar\\noshac\\nosier\\nosmic\\nosmol\\nossia\\nostia\\notaku\\notary\\nottar\\nottos\\noubit\\noucht\\nouens\\nouija\\noulks\\noumas\\noundy\\noupas\\nouped\\nouphe\\nouphs\\nourie\\nousel\\nousts\\noutby\\nouted\\noutre\\noutro\\noutta\\nouzel\\nouzos\\novals\\novels\\novens\\novers\\novist\\novoli\\novolo\\novule\\nowche\\nowies\\nowled\\nowler\\nowlet\\nowned\\nowres\\nowrie\\nowsen\\noxbow\\noxers\\noxeye\\noxids\\noxies\\noxime\\noxims\\noxlip\\noxter\\noyers\\nozeki\\nozzie\\npaals\\npaans\\npacas\\npaced\\npacer\\npaces\\npacey\\npacha\\npacks\\npacos\\npacta\\npacts\\npadis\\npadle\\npadma\\npadre\\npadri\\npaean\\npaedo\\npaeon\\npaged\\npager\\npages\\npagle\\npagod\\npagri\\npaiks\\npails\\npains\\npaire\\npairs\\npaisa\\npaise\\npakka\\npalas\\npalay\\npalea\\npaled\\npales\\npalet\\npalis\\npalki\\npalla\\npalls\\npally\\npalms\\npalmy\\npalpi\\npalps\\npalsa\\npampa\\npanax\\npance\\npanda\\npands\\npandy\\npaned\\npanes\\npanga\\npangs\\npanim\\npanko\\npanne\\npanni\\npanto\\npants\\npanty\\npaoli\\npaolo\\npapas\\npapaw\\npapes\\npappi\\npappy\\nparae\\nparas\\nparch\\npardi\\npards\\npardy\\npared\\nparen\\npareo\\npares\\npareu\\nparev\\nparge\\npargo\\nparis\\nparki\\nparks\\nparky\\nparle\\nparly\\nparma\\nparol\\nparps\\nparra\\nparrs\\nparti\\nparts\\nparve\\nparvo\\npaseo\\npases\\npasha\\npashm\\npaska\\npaspy\\npasse\\npasts\\npated\\npaten\\npater\\npates\\npaths\\npatin\\npatka\\npatly\\npatte\\npatus\\npauas\\npauls\\npavan\\npaved\\npaven\\npaver\\npaves\\npavid\\npavin\\npavis\\npawas\\npawaw\\npawed\\npawer\\npawks\\npawky\\npawls\\npawns\\npaxes\\npayed\\npayor\\npaysd\\npeage\\npeags\\npeaks\\npeaky\\npeals\\npeans\\npeare\\npears\\npeart\\npease\\npeats\\npeaty\\npeavy\\npeaze\\npebas\\npechs\\npecke\\npecks\\npecky\\npedes\\npedis\\npedro\\npeece\\npeeks\\npeels\\npeens\\npeeoy\\npeepe\\npeeps\\npeers\\npeery\\npeeve\\npeggy\\npeghs\\npeins\\npeise\\npeize\\npekan\\npekes\\npekin\\npekoe\\npelas\\npelau\\npeles\\npelfs\\npells\\npelma\\npelon\\npelta\\npelts\\npends\\npendu\\npened\\npenes\\npengo\\npenie\\npenis\\npenks\\npenna\\npenni\\npents\\npeons\\npeony\\npepla\\npepos\\npeppy\\npepsi\\nperai\\nperce\\npercs\\nperdu\\nperdy\\nperea\\nperes\\nperis\\nperks\\nperms\\nperns\\nperog\\nperps\\nperry\\nperse\\nperst\\nperts\\nperve\\npervo\\npervs\\npervy\\npesos\\npests\\npesty\\npetar\\npeter\\npetit\\npetre\\npetri\\npetti\\npetto\\npewee\\npewit\\npeyse\\nphage\\nphang\\nphare\\npharm\\npheer\\nphene\\npheon\\nphese\\nphial\\nphish\\nphizz\\nphlox\\nphoca\\nphono\\nphons\\nphots\\nphpht\\nphuts\\nphyla\\nphyle\\npiani\\npians\\npibal\\npical\\npicas\\npiccy\\npicks\\npicot\\npicra\\npicul\\npiend\\npiers\\npiert\\npieta\\npiets\\npiezo\\npight\\npigmy\\npiing\\npikas\\npikau\\npiked\\npiker\\npikes\\npikey\\npikis\\npikul\\npilae\\npilaf\\npilao\\npilar\\npilau\\npilaw\\npilch\\npilea\\npiled\\npilei\\npiler\\npiles\\npilis\\npills\\npilow\\npilum\\npilus\\npimas\\npimps\\npinas\\npined\\npines\\npingo\\npings\\npinko\\npinks\\npinna\\npinny\\npinon\\npinot\\npinta\\npints\\npinup\\npions\\npiony\\npious\\npioye\\npioys\\npipal\\npipas\\npiped\\npipes\\npipet\\npipis\\npipit\\npippy\\npipul\\npirai\\npirls\\npirns\\npirog\\npisco\\npises\\npisky\\npisos\\npissy\\npiste\\npitas\\npiths\\npiton\\npitot\\npitta\\npiums\\npixes\\npized\\npizes\\nplaas\\nplack\\nplage\\nplans\\nplaps\\nplash\\nplasm\\nplast\\nplats\\nplatt\\nplaty\\nplaya\\nplays\\npleas\\nplebe\\nplebs\\nplena\\npleon\\nplesh\\nplews\\nplica\\nplies\\nplims\\npling\\nplink\\nploat\\nplods\\nplong\\nplonk\\nplook\\nplops\\nplots\\nplotz\\nplouk\\nplows\\nploye\\nploys\\nplues\\npluff\\nplugs\\nplums\\nplumy\\npluot\\npluto\\nplyer\\npoach\\npoaka\\npoake\\npoboy\\npocks\\npocky\\npodal\\npoddy\\npodex\\npodge\\npodgy\\npodia\\npoems\\npoeps\\npoets\\npogey\\npogge\\npogos\\npohed\\npoilu\\npoind\\npokal\\npoked\\npokes\\npokey\\npokie\\npoled\\npoler\\npoles\\npoley\\npolio\\npolis\\npolje\\npolks\\npolls\\npolly\\npolos\\npolts\\npolys\\npombe\\npomes\\npommy\\npomos\\npomps\\nponce\\nponcy\\nponds\\npones\\nponey\\nponga\\npongo\\npongs\\npongy\\nponks\\nponts\\nponty\\nponzu\\npoods\\npooed\\npoofs\\npoofy\\npoohs\\npooja\\npooka\\npooks\\npools\\npoons\\npoops\\npoopy\\npoori\\npoort\\npoots\\npoove\\npoovy\\npopes\\npoppa\\npopsy\\nporae\\nporal\\npored\\nporer\\npores\\nporge\\nporgy\\nporin\\nporks\\nporky\\nporno\\nporns\\nporny\\nporta\\nports\\nporty\\nposed\\nposes\\nposey\\nposho\\nposts\\npotae\\npotch\\npoted\\npotes\\npotin\\npotoo\\npotsy\\npotto\\npotts\\npotty\\npouff\\npoufs\\npouke\\npouks\\npoule\\npoulp\\npoult\\npoupe\\npoupt\\npours\\npouts\\npowan\\npowin\\npownd\\npowns\\npowny\\npowre\\npoxed\\npoxes\\npoynt\\npoyou\\npoyse\\npozzy\\npraam\\nprads\\nprahu\\nprams\\nprana\\nprang\\npraos\\nprase\\nprate\\nprats\\npratt\\npraty\\npraus\\nprays\\npredy\\npreed\\nprees\\npreif\\nprems\\npremy\\nprent\\npreon\\npreop\\npreps\\npresa\\nprese\\nprest\\npreve\\nprexy\\npreys\\nprial\\npricy\\nprief\\nprier\\npries\\nprigs\\nprill\\nprima\\nprimi\\nprimp\\nprims\\nprimy\\nprink\\nprion\\nprise\\npriss\\nproas\\nprobs\\nprods\\nproem\\nprofs\\nprogs\\nproin\\nproke\\nprole\\nproll\\npromo\\nproms\\npronk\\nprops\\nprore\\nproso\\npross\\nprost\\nprosy\\nproto\\nproul\\nprows\\nproyn\\nprunt\\npruta\\npryer\\npryse\\npseud\\npshaw\\npsion\\npsoae\\npsoai\\npsoas\\npsora\\npsych\\npsyop\\npubco\\npubes\\npubis\\npucan\\npucer\\npuces\\npucka\\npucks\\npuddy\\npudge\\npudic\\npudor\\npudsy\\npudus\\npuers\\npuffa\\npuffs\\npuggy\\npugil\\npuhas\\npujah\\npujas\\npukas\\npuked\\npuker\\npukes\\npukey\\npukka\\npukus\\npulao\\npulas\\npuled\\npuler\\npules\\npulik\\npulis\\npulka\\npulks\\npulli\\npulls\\npully\\npulmo\\npulps\\npulus\\npumas\\npumie\\npumps\\npunas\\npunce\\npunga\\npungs\\npunji\\npunka\\npunks\\npunky\\npunny\\npunto\\npunts\\npunty\\npupae\\npupas\\npupus\\npurda\\npured\\npures\\npurin\\npuris\\npurls\\npurpy\\npurrs\\npursy\\npurty\\npuses\\npusle\\nputid\\nputon\\nputti\\nputto\\nputts\\npuzel\\npwned\\npyats\\npyets\\npygal\\npyins\\npylon\\npyned\\npynes\\npyoid\\npyots\\npyral\\npyran\\npyres\\npyrex\\npyric\\npyros\\npyxed\\npyxes\\npyxie\\npyxis\\npzazz\\nqadis\\nqaids\\nqajaq\\nqanat\\nqapik\\nqibla\\nqophs\\nqorma\\nquads\\nquaff\\nquags\\nquair\\nquais\\nquaky\\nquale\\nquant\\nquare\\nquass\\nquate\\nquats\\nquayd\\nquays\\nqubit\\nquean\\nqueme\\nquena\\nquern\\nqueyn\\nqueys\\nquich\\nquids\\nquiff\\nquims\\nquina\\nquine\\nquino\\nquins\\nquint\\nquipo\\nquips\\nquipu\\nquire\\nquirt\\nquist\\nquits\\nquoad\\nquods\\nquoif\\nquoin\\nquoit\\nquoll\\nquonk\\nquops\\nqursh\\nquyte\\nrabat\\nrabic\\nrabis\\nraced\\nraces\\nrache\\nracks\\nracon\\nradge\\nradix\\nradon\\nraffs\\nrafts\\nragas\\nragde\\nraged\\nragee\\nrager\\nrages\\nragga\\nraggs\\nraggy\\nragis\\nragus\\nrahed\\nrahui\\nraias\\nraids\\nraiks\\nraile\\nrails\\nraine\\nrains\\nraird\\nraita\\nraits\\nrajas\\nrajes\\nraked\\nrakee\\nraker\\nrakes\\nrakia\\nrakis\\nrakus\\nrales\\nramal\\nramee\\nramet\\nramie\\nramin\\nramis\\nrammy\\nramps\\nramus\\nranas\\nrance\\nrands\\nranee\\nranga\\nrangi\\nrangs\\nrangy\\nranid\\nranis\\nranke\\nranks\\nrants\\nraped\\nraper\\nrapes\\nraphe\\nrappe\\nrared\\nraree\\nrares\\nrarks\\nrased\\nraser\\nrases\\nrasps\\nrasse\\nrasta\\nratal\\nratan\\nratas\\nratch\\nrated\\nratel\\nrater\\nrates\\nratha\\nrathe\\nraths\\nratoo\\nratos\\nratus\\nrauns\\nraupo\\nraved\\nravel\\nraver\\nraves\\nravey\\nravin\\nrawer\\nrawin\\nrawly\\nrawns\\nraxed\\nraxes\\nrayah\\nrayas\\nrayed\\nrayle\\nrayne\\nrazed\\nrazee\\nrazer\\nrazes\\nrazoo\\nreadd\\nreads\\nreais\\nreaks\\nrealo\\nreals\\nreame\\nreams\\nreamy\\nreans\\nreaps\\nrears\\nreast\\nreata\\nreate\\nreave\\nrebbe\\nrebec\\nrebid\\nrebit\\nrebop\\nrebuy\\nrecal\\nrecce\\nrecco\\nreccy\\nrecit\\nrecks\\nrecon\\nrecta\\nrecti\\nrecto\\nredan\\nredds\\nreddy\\nreded\\nredes\\nredia\\nredid\\nredip\\nredly\\nredon\\nredos\\nredox\\nredry\\nredub\\nredux\\nredye\\nreech\\nreede\\nreeds\\nreefs\\nreefy\\nreeks\\nreeky\\nreels\\nreens\\nreest\\nreeve\\nrefed\\nrefel\\nreffo\\nrefis\\nrefix\\nrefly\\nrefry\\nregar\\nreges\\nreggo\\nregie\\nregma\\nregna\\nregos\\nregur\\nrehem\\nreifs\\nreify\\nreiki\\nreiks\\nreink\\nreins\\nreird\\nreist\\nreive\\nrejig\\nrejon\\nreked\\nrekes\\nrekey\\nrelet\\nrelie\\nrelit\\nrello\\nreman\\nremap\\nremen\\nremet\\nremex\\nremix\\nrenay\\nrends\\nreney\\nrenga\\nrenig\\nrenin\\nrenne\\nrenos\\nrente\\nrents\\nreoil\\nreorg\\nrepeg\\nrepin\\nrepla\\nrepos\\nrepot\\nrepps\\nrepro\\nreran\\nrerig\\nresat\\nresaw\\nresay\\nresee\\nreses\\nresew\\nresid\\nresit\\nresod\\nresow\\nresto\\nrests\\nresty\\nresus\\nretag\\nretax\\nretem\\nretia\\nretie\\nretox\\nrevet\\nrevie\\nrewan\\nrewax\\nrewed\\nrewet\\nrewin\\nrewon\\nrewth\\nrexes\\nrezes\\nrheas\\nrheme\\nrheum\\nrhies\\nrhime\\nrhine\\nrhody\\nrhomb\\nrhone\\nrhumb\\nrhyne\\nrhyta\\nriads\\nrials\\nriant\\nriata\\nribas\\nribby\\nribes\\nriced\\nricer\\nrices\\nricey\\nricht\\nricin\\nricks\\nrides\\nridgy\\nridic\\nriels\\nriems\\nrieve\\nrifer\\nriffs\\nrifte\\nrifts\\nrifty\\nriggs\\nrigol\\nriled\\nriles\\nriley\\nrille\\nrills\\nrimae\\nrimed\\nrimer\\nrimes\\nrimus\\nrinds\\nrindy\\nrines\\nrings\\nrinks\\nrioja\\nriots\\nriped\\nripes\\nripps\\nrises\\nrishi\\nrisks\\nrisps\\nrisus\\nrites\\nritts\\nritzy\\nrivas\\nrived\\nrivel\\nriven\\nrives\\nriyal\\nrizas\\nroads\\nroams\\nroans\\nroars\\nroary\\nroate\\nrobed\\nrobes\\nroble\\nrocks\\nroded\\nrodes\\nroguy\\nrohes\\nroids\\nroils\\nroily\\nroins\\nroist\\nrojak\\nrojis\\nroked\\nroker\\nrokes\\nrolag\\nroles\\nrolfs\\nrolls\\nromal\\nroman\\nromeo\\nromps\\nronde\\nrondo\\nroneo\\nrones\\nronin\\nronne\\nronte\\nronts\\nroods\\nroofs\\nroofy\\nrooks\\nrooky\\nrooms\\nroons\\nroops\\nroopy\\nroosa\\nroose\\nroots\\nrooty\\nroped\\nroper\\nropes\\nropey\\nroque\\nroral\\nrores\\nroric\\nrorid\\nrorie\\nrorts\\nrorty\\nrosed\\nroses\\nroset\\nroshi\\nrosin\\nrosit\\nrosti\\nrosts\\nrotal\\nrotan\\nrotas\\nrotch\\nroted\\nrotes\\nrotis\\nrotls\\nroton\\nrotos\\nrotte\\nrouen\\nroues\\nroule\\nrouls\\nroums\\nroups\\nroupy\\nroust\\nrouth\\nrouts\\nroved\\nroven\\nroves\\nrowan\\nrowed\\nrowel\\nrowen\\nrowie\\nrowme\\nrownd\\nrowth\\nrowts\\nroyne\\nroyst\\nrozet\\nrozit\\nruana\\nrubai\\nrubby\\nrubel\\nrubes\\nrubin\\nruble\\nrubli\\nrubus\\nruche\\nrucks\\nrudas\\nrudds\\nrudes\\nrudie\\nrudis\\nrueda\\nruers\\nruffe\\nruffs\\nrugae\\nrugal\\nruggy\\nruing\\nruins\\nrukhs\\nruled\\nrules\\nrumal\\nrumbo\\nrumen\\nrumes\\nrumly\\nrummy\\nrumpo\\nrumps\\nrumpy\\nrunch\\nrunds\\nruned\\nrunes\\nrungs\\nrunic\\nrunny\\nrunts\\nrunty\\nrupia\\nrurps\\nrurus\\nrusas\\nruses\\nrushy\\nrusks\\nrusma\\nrusse\\nrusts\\nruths\\nrutin\\nrutty\\nryals\\nrybat\\nryked\\nrykes\\nrymme\\nrynds\\nryots\\nryper\\nsaags\\nsabal\\nsabed\\nsaber\\nsabes\\nsabha\\nsabin\\nsabir\\nsable\\nsabot\\nsabra\\nsabre\\nsacks\\nsacra\\nsaddo\\nsades\\nsadhe\\nsadhu\\nsadis\\nsados\\nsadza\\nsafed\\nsafes\\nsagas\\nsager\\nsages\\nsaggy\\nsagos\\nsagum\\nsaheb\\nsahib\\nsaice\\nsaick\\nsaics\\nsaids\\nsaiga\\nsails\\nsaims\\nsaine\\nsains\\nsairs\\nsaist\\nsaith\\nsajou\\nsakai\\nsaker\\nsakes\\nsakia\\nsakis\\nsakti\\nsalal\\nsalat\\nsalep\\nsales\\nsalet\\nsalic\\nsalix\\nsalle\\nsalmi\\nsalol\\nsalop\\nsalpa\\nsalps\\nsalse\\nsalto\\nsalts\\nsalue\\nsalut\\nsaman\\nsamas\\nsamba\\nsambo\\nsamek\\nsamel\\nsamen\\nsames\\nsamey\\nsamfu\\nsammy\\nsampi\\nsamps\\nsands\\nsaned\\nsanes\\nsanga\\nsangh\\nsango\\nsangs\\nsanko\\nsansa\\nsanto\\nsants\\nsaola\\nsapan\\nsapid\\nsapor\\nsaran\\nsards\\nsared\\nsaree\\nsarge\\nsargo\\nsarin\\nsaris\\nsarks\\nsarky\\nsarod\\nsaros\\nsarus\\nsaser\\nsasin\\nsasse\\nsatai\\nsatay\\nsated\\nsatem\\nsates\\nsatis\\nsauba\\nsauch\\nsaugh\\nsauls\\nsault\\nsaunt\\nsaury\\nsauts\\nsaved\\nsaver\\nsaves\\nsavey\\nsavin\\nsawah\\nsawed\\nsawer\\nsaxes\\nsayed\\nsayer\\nsayid\\nsayne\\nsayon\\nsayst\\nsazes\\nscabs\\nscads\\nscaff\\nscags\\nscail\\nscala\\nscall\\nscams\\nscand\\nscans\\nscapa\\nscape\\nscapi\\nscarp\\nscars\\nscart\\nscath\\nscats\\nscatt\\nscaud\\nscaup\\nscaur\\nscaws\\nsceat\\nscena\\nscend\\nschav\\nschmo\\nschul\\nschwa\\nsclim\\nscody\\nscogs\\nscoog\\nscoot\\nscopa\\nscops\\nscots\\nscoug\\nscoup\\nscowp\\nscows\\nscrab\\nscrae\\nscrag\\nscran\\nscrat\\nscraw\\nscray\\nscrim\\nscrip\\nscrob\\nscrod\\nscrog\\nscrow\\nscudi\\nscudo\\nscuds\\nscuff\\nscuft\\nscugs\\nsculk\\nscull\\nsculp\\nsculs\\nscums\\nscups\\nscurf\\nscurs\\nscuse\\nscuta\\nscute\\nscuts\\nscuzz\\nscyes\\nsdayn\\nsdein\\nseals\\nseame\\nseams\\nseamy\\nseans\\nseare\\nsears\\nsease\\nseats\\nseaze\\nsebum\\nsecco\\nsechs\\nsects\\nseder\\nsedes\\nsedge\\nsedgy\\nsedum\\nseeds\\nseeks\\nseeld\\nseels\\nseely\\nseems\\nseeps\\nseepy\\nseers\\nsefer\\nsegar\\nsegni\\nsegno\\nsegol\\nsegos\\nsehri\\nseifs\\nseils\\nseine\\nseirs\\nseise\\nseism\\nseity\\nseiza\\nsekos\\nsekts\\nselah\\nseles\\nselfs\\nsella\\nselle\\nsells\\nselva\\nsemee\\nsemes\\nsemie\\nsemis\\nsenas\\nsends\\nsenes\\nsengi\\nsenna\\nsenor\\nsensa\\nsensi\\nsente\\nsenti\\nsents\\nsenvy\\nsenza\\nsepad\\nsepal\\nsepic\\nsepoy\\nsepta\\nsepts\\nserac\\nserai\\nseral\\nsered\\nserer\\nseres\\nserfs\\nserge\\nseric\\nserin\\nserks\\nseron\\nserow\\nserra\\nserre\\nserrs\\nserry\\nservo\\nsesey\\nsessa\\nsetae\\nsetal\\nseton\\nsetts\\nsewan\\nsewar\\nsewed\\nsewel\\nsewen\\nsewin\\nsexed\\nsexer\\nsexes\\nsexto\\nsexts\\nseyen\\nshads\\nshags\\nshahs\\nshako\\nshakt\\nshalm\\nshaly\\nshama\\nshams\\nshand\\nshans\\nshaps\\nsharn\\nshash\\nshaul\\nshawm\\nshawn\\nshaws\\nshaya\\nshays\\nshchi\\nsheaf\\nsheal\\nsheas\\nsheds\\nsheel\\nshend\\nshent\\nsheol\\nsherd\\nshere\\nshero\\nshets\\nsheva\\nshewn\\nshews\\nshiai\\nshiel\\nshier\\nshies\\nshill\\nshily\\nshims\\nshins\\nships\\nshirr\\nshirs\\nshish\\nshiso\\nshist\\nshite\\nshits\\nshiur\\nshiva\\nshive\\nshivs\\nshlep\\nshlub\\nshmek\\nshmoe\\nshoat\\nshoed\\nshoer\\nshoes\\nshogi\\nshogs\\nshoji\\nshojo\\nshola\\nshool\\nshoon\\nshoos\\nshope\\nshops\\nshorl\\nshote\\nshots\\nshott\\nshowd\\nshows\\nshoyu\\nshred\\nshris\\nshrow\\nshtik\\nshtum\\nshtup\\nshule\\nshuln\\nshuls\\nshuns\\nshura\\nshute\\nshuts\\nshwas\\nshyer\\nsials\\nsibbs\\nsibyl\\nsices\\nsicht\\nsicko\\nsicks\\nsicky\\nsidas\\nsided\\nsider\\nsides\\nsidha\\nsidhe\\nsidle\\nsield\\nsiens\\nsient\\nsieth\\nsieur\\nsifts\\nsighs\\nsigil\\nsigla\\nsigna\\nsigns\\nsijos\\nsikas\\nsiker\\nsikes\\nsilds\\nsiled\\nsilen\\nsiler\\nsiles\\nsilex\\nsilks\\nsills\\nsilos\\nsilts\\nsilty\\nsilva\\nsimar\\nsimas\\nsimba\\nsimis\\nsimps\\nsimul\\nsinds\\nsined\\nsines\\nsings\\nsinhs\\nsinks\\nsinky\\nsinus\\nsiped\\nsipes\\nsippy\\nsired\\nsiree\\nsires\\nsirih\\nsiris\\nsiroc\\nsirra\\nsirup\\nsisal\\nsises\\nsista\\nsists\\nsitar\\nsited\\nsites\\nsithe\\nsitka\\nsitup\\nsitus\\nsiver\\nsixer\\nsixes\\nsixmo\\nsixte\\nsizar\\nsized\\nsizel\\nsizer\\nsizes\\nskags\\nskail\\nskald\\nskank\\nskart\\nskats\\nskatt\\nskaws\\nskean\\nskear\\nskeds\\nskeed\\nskeef\\nskeen\\nskeer\\nskees\\nskeet\\nskegg\\nskegs\\nskein\\nskelf\\nskell\\nskelm\\nskelp\\nskene\\nskens\\nskeos\\nskeps\\nskers\\nskets\\nskews\\nskids\\nskied\\nskies\\nskiey\\nskimo\\nskims\\nskink\\nskins\\nskint\\nskios\\nskips\\nskirl\\nskirr\\nskite\\nskits\\nskive\\nskivy\\nsklim\\nskoal\\nskody\\nskoff\\nskogs\\nskols\\nskool\\nskort\\nskosh\\nskran\\nskrik\\nskuas\\nskugs\\nskyed\\nskyer\\nskyey\\nskyfs\\nskyre\\nskyrs\\nskyte\\nslabs\\nslade\\nslaes\\nslags\\nslaid\\nslake\\nslams\\nslane\\nslank\\nslaps\\nslart\\nslats\\nslaty\\nslaws\\nslays\\nslebs\\nsleds\\nsleer\\nslews\\nsleys\\nslier\\nslily\\nslims\\nslipe\\nslips\\nslipt\\nslish\\nslits\\nslive\\nsloan\\nslobs\\nsloes\\nslogs\\nsloid\\nslojd\\nslomo\\nsloom\\nsloot\\nslops\\nslopy\\nslorm\\nslots\\nslove\\nslows\\nsloyd\\nslubb\\nslubs\\nslued\\nslues\\nsluff\\nslugs\\nsluit\\nslums\\nslurb\\nslurs\\nsluse\\nslyer\\nslype\\nsmaak\\nsmaik\\nsmalm\\nsmalt\\nsmarm\\nsmaze\\nsmeek\\nsmees\\nsmeik\\nsmeke\\nsmerk\\nsmews\\nsmirr\\nsmirs\\nsmits\\nsmogs\\nsmoko\\nsmolt\\nsmoor\\nsmoot\\nsmore\\nsmorg\\nsmout\\nsmowt\\nsmugs\\nsmurs\\nsmush\\nsmuts\\nsnabs\\nsnafu\\nsnags\\nsnaps\\nsnarf\\nsnark\\nsnars\\nsnary\\nsnash\\nsnath\\nsnaws\\nsnead\\nsneap\\nsnebs\\nsneck\\nsneds\\nsneed\\nsnees\\nsnell\\nsnibs\\nsnick\\nsnies\\nsnift\\nsnigs\\nsnips\\nsnipy\\nsnirt\\nsnits\\nsnobs\\nsnods\\nsnoek\\nsnoep\\nsnogs\\nsnoke\\nsnood\\nsnook\\nsnool\\nsnoot\\nsnots\\nsnowk\\nsnows\\nsnubs\\nsnugs\\nsnush\\nsnyes\\nsoaks\\nsoaps\\nsoare\\nsoars\\nsoave\\nsobas\\nsocas\\nsoces\\nsocko\\nsocks\\nsocle\\nsodas\\nsoddy\\nsodic\\nsodom\\nsofar\\nsofas\\nsofta\\nsofts\\nsofty\\nsoger\\nsohur\\nsoils\\nsoily\\nsojas\\nsojus\\nsokah\\nsoken\\nsokes\\nsokol\\nsolah\\nsolan\\nsolas\\nsolde\\nsoldi\\nsoldo\\nsolds\\nsoled\\nsolei\\nsoler\\nsoles\\nsolon\\nsolos\\nsolum\\nsolus\\nsoman\\nsomas\\nsonce\\nsonde\\nsones\\nsongs\\nsonly\\nsonne\\nsonny\\nsonse\\nsonsy\\nsooey\\nsooks\\nsooky\\nsoole\\nsools\\nsooms\\nsoops\\nsoote\\nsoots\\nsophs\\nsophy\\nsopor\\nsoppy\\nsopra\\nsoral\\nsoras\\nsorbo\\nsorbs\\nsorda\\nsordo\\nsords\\nsored\\nsoree\\nsorel\\nsorer\\nsores\\nsorex\\nsorgo\\nsorns\\nsorra\\nsorta\\nsorts\\nsorus\\nsoths\\nsotol\\nsouce\\nsouct\\nsough\\nsouks\\nsouls\\nsoums\\nsoups\\nsoupy\\nsours\\nsouse\\nsouts\\nsowar\\nsowce\\nsowed\\nsowff\\nsowfs\\nsowle\\nsowls\\nsowms\\nsownd\\nsowne\\nsowps\\nsowse\\nsowth\\nsoyas\\nsoyle\\nsoyuz\\nsozin\\nspacy\\nspado\\nspaed\\nspaer\\nspaes\\nspags\\nspahi\\nspail\\nspain\\nspait\\nspake\\nspald\\nspale\\nspall\\nspalt\\nspams\\nspane\\nspang\\nspans\\nspard\\nspars\\nspart\\nspate\\nspats\\nspaul\\nspawl\\nspaws\\nspayd\\nspays\\nspaza\\nspazz\\nspeal\\nspean\\nspeat\\nspecs\\nspect\\nspeel\\nspeer\\nspeil\\nspeir\\nspeks\\nspeld\\nspelk\\nspeos\\nspets\\nspeug\\nspews\\nspewy\\nspial\\nspica\\nspide\\nspier\\nspies\\nspiff\\nspifs\\nspile\\nspims\\nspina\\nspink\\nspins\\nspirt\\nspiry\\nspits\\nspitz\\nspivs\\nsplay\\nsplog\\nspode\\nspods\\nspoom\\nspoor\\nspoot\\nspork\\nsposh\\nspots\\nsprad\\nsprag\\nsprat\\nspred\\nsprew\\nsprit\\nsprod\\nsprog\\nsprue\\nsprug\\nspuds\\nspued\\nspuer\\nspues\\nspugs\\nspule\\nspume\\nspumy\\nspurs\\nsputa\\nspyal\\nspyre\\nsquab\\nsquaw\\nsqueg\\nsquid\\nsquit\\nsquiz\\nstabs\\nstade\\nstags\\nstagy\\nstaig\\nstane\\nstang\\nstaph\\nstaps\\nstarn\\nstarr\\nstars\\nstats\\nstaun\\nstaws\\nstays\\nstean\\nstear\\nstedd\\nstede\\nsteds\\nsteek\\nsteem\\nsteen\\nsteil\\nstela\\nstele\\nstell\\nsteme\\nstems\\nstend\\nsteno\\nstens\\nstent\\nsteps\\nstept\\nstere\\nstets\\nstews\\nstewy\\nsteys\\nstich\\nstied\\nsties\\nstilb\\nstile\\nstime\\nstims\\nstimy\\nstipa\\nstipe\\nstire\\nstirk\\nstirp\\nstirs\\nstive\\nstivy\\nstoae\\nstoai\\nstoas\\nstoat\\nstobs\\nstoep\\nstogy\\nstoit\\nstoln\\nstoma\\nstond\\nstong\\nstonk\\nstonn\\nstook\\nstoor\\nstope\\nstops\\nstopt\\nstoss\\nstots\\nstott\\nstoun\\nstoup\\nstour\\nstown\\nstowp\\nstows\\nstrad\\nstrae\\nstrag\\nstrak\\nstrep\\nstrew\\nstria\\nstrig\\nstrim\\nstrop\\nstrow\\nstroy\\nstrum\\nstubs\\nstude\\nstuds\\nstull\\nstulm\\nstumm\\nstums\\nstuns\\nstupa\\nstupe\\nsture\\nsturt\\nstyed\\nstyes\\nstyli\\nstylo\\nstyme\\nstymy\\nstyre\\nstyte\\nsubah\\nsubas\\nsubby\\nsuber\\nsubha\\nsucci\\nsucks\\nsucky\\nsucre\\nsudds\\nsudor\\nsudsy\\nsuede\\nsuent\\nsuers\\nsuete\\nsuets\\nsuety\\nsugan\\nsughs\\nsugos\\nsuhur\\nsuids\\nsuint\\nsuits\\nsujee\\nsukhs\\nsukuk\\nsulci\\nsulfa\\nsulfo\\nsulks\\nsulph\\nsulus\\nsumis\\nsumma\\nsumos\\nsumph\\nsumps\\nsunis\\nsunks\\nsunna\\nsunns\\nsunup\\nsupes\\nsupra\\nsurah\\nsural\\nsuras\\nsurat\\nsurds\\nsured\\nsures\\nsurfs\\nsurfy\\nsurgy\\nsurra\\nsused\\nsuses\\nsusus\\nsutor\\nsutra\\nsutta\\nswabs\\nswack\\nswads\\nswage\\nswags\\nswail\\nswain\\nswale\\nswaly\\nswamy\\nswang\\nswank\\nswans\\nswaps\\nswapt\\nsward\\nsware\\nswarf\\nswart\\nswats\\nswayl\\nsways\\nsweal\\nswede\\nsweed\\nsweel\\nsweer\\nswees\\nsweir\\nswelt\\nswerf\\nsweys\\nswies\\nswigs\\nswile\\nswims\\nswink\\nswipe\\nswire\\nswiss\\nswith\\nswits\\nswive\\nswizz\\nswobs\\nswole\\nswoln\\nswops\\nswopt\\nswots\\nswoun\\nsybbe\\nsybil\\nsyboe\\nsybow\\nsycee\\nsyces\\nsycon\\nsyens\\nsyker\\nsykes\\nsylis\\nsylph\\nsylva\\nsymar\\nsynch\\nsyncs\\nsynds\\nsyned\\nsynes\\nsynth\\nsyped\\nsypes\\nsyphs\\nsyrah\\nsyren\\nsysop\\nsythe\\nsyver\\ntaals\\ntaata\\ntaber\\ntabes\\ntabid\\ntabis\\ntabla\\ntabor\\ntabun\\ntabus\\ntacan\\ntaces\\ntacet\\ntache\\ntacho\\ntachs\\ntacks\\ntacos\\ntacts\\ntaels\\ntafia\\ntaggy\\ntagma\\ntahas\\ntahrs\\ntaiga\\ntaigs\\ntaiko\\ntails\\ntains\\ntaira\\ntaish\\ntaits\\ntajes\\ntakas\\ntakes\\ntakhi\\ntakin\\ntakis\\ntakky\\ntalak\\ntalaq\\ntalar\\ntalas\\ntalcs\\ntalcy\\ntalea\\ntaler\\ntales\\ntalks\\ntalky\\ntalls\\ntalma\\ntalpa\\ntaluk\\ntalus\\ntamal\\ntamed\\ntames\\ntamin\\ntamis\\ntammy\\ntamps\\ntanas\\ntanga\\ntangi\\ntangs\\ntanhs\\ntanka\\ntanks\\ntanky\\ntanna\\ntansy\\ntanti\\ntanto\\ntanty\\ntapas\\ntaped\\ntapen\\ntapes\\ntapet\\ntapis\\ntappa\\ntapus\\ntaras\\ntardo\\ntared\\ntares\\ntarga\\ntarge\\ntarns\\ntaroc\\ntarok\\ntaros\\ntarps\\ntarre\\ntarry\\ntarsi\\ntarts\\ntarty\\ntasar\\ntased\\ntaser\\ntases\\ntasks\\ntassa\\ntasse\\ntasso\\ntatar\\ntater\\ntates\\ntaths\\ntatie\\ntatou\\ntatts\\ntatus\\ntaube\\ntauld\\ntauon\\ntaupe\\ntauts\\ntavah\\ntavas\\ntaver\\ntawai\\ntawas\\ntawed\\ntawer\\ntawie\\ntawse\\ntawts\\ntaxed\\ntaxer\\ntaxes\\ntaxis\\ntaxol\\ntaxon\\ntaxor\\ntaxus\\ntayra\\ntazza\\ntazze\\nteade\\nteads\\nteaed\\nteaks\\nteals\\nteams\\ntears\\nteats\\nteaze\\ntechs\\ntechy\\ntecta\\nteels\\nteems\\nteend\\nteene\\nteens\\nteeny\\nteers\\nteffs\\nteggs\\ntegua\\ntegus\\ntehrs\\nteiid\\nteils\\nteind\\nteins\\ntelae\\ntelco\\nteles\\ntelex\\ntelia\\ntelic\\ntells\\ntelly\\nteloi\\ntelos\\ntemed\\ntemes\\ntempi\\ntemps\\ntempt\\ntemse\\ntench\\ntends\\ntendu\\ntenes\\ntenge\\ntenia\\ntenne\\ntenno\\ntenny\\ntenon\\ntents\\ntenty\\ntenue\\ntepal\\ntepas\\ntepoy\\nterai\\nteras\\nterce\\nterek\\nteres\\nterfe\\nterfs\\nterga\\nterms\\nterne\\nterns\\nterry\\nterts\\ntesla\\ntesta\\nteste\\ntests\\ntetes\\nteths\\ntetra\\ntetri\\nteuch\\nteugh\\ntewed\\ntewel\\ntewit\\ntexas\\ntexes\\ntexts\\nthack\\nthagi\\nthaim\\nthale\\nthali\\nthana\\nthane\\nthang\\nthans\\nthanx\\ntharm\\nthars\\nthaws\\nthawy\\nthebe\\ntheca\\ntheed\\ntheek\\nthees\\nthegn\\ntheic\\nthein\\nthelf\\nthema\\nthens\\ntheow\\ntherm\\nthesp\\nthete\\nthews\\nthewy\\nthigs\\nthilk\\nthill\\nthine\\nthins\\nthiol\\nthirl\\nthoft\\nthole\\ntholi\\nthoro\\nthorp\\nthous\\nthowl\\nthrae\\nthraw\\nthrid\\nthrip\\nthroe\\nthuds\\nthugs\\nthuja\\nthunk\\nthurl\\nthuya\\nthymi\\nthymy\\ntians\\ntiars\\ntical\\nticca\\nticed\\ntices\\ntichy\\nticks\\nticky\\ntiddy\\ntided\\ntides\\ntiers\\ntiffs\\ntifos\\ntifts\\ntiges\\ntigon\\ntikas\\ntikes\\ntikis\\ntikka\\ntilak\\ntiled\\ntiler\\ntiles\\ntills\\ntilly\\ntilth\\ntilts\\ntimbo\\ntimed\\ntimes\\ntimon\\ntimps\\ntinas\\ntinct\\ntinds\\ntinea\\ntined\\ntines\\ntinge\\ntings\\ntinks\\ntinny\\ntints\\ntinty\\ntipis\\ntippy\\ntired\\ntires\\ntirls\\ntiros\\ntirrs\\ntitch\\ntiter\\ntitis\\ntitre\\ntitty\\ntitup\\ntiyin\\ntiyns\\ntizes\\ntizzy\\ntoads\\ntoady\\ntoaze\\ntocks\\ntocky\\ntocos\\ntodde\\ntoeas\\ntoffs\\ntoffy\\ntofts\\ntofus\\ntogae\\ntogas\\ntoged\\ntoges\\ntogue\\ntohos\\ntoile\\ntoils\\ntoing\\ntoise\\ntoits\\ntokay\\ntoked\\ntoker\\ntokes\\ntokos\\ntolan\\ntolar\\ntolas\\ntoled\\ntoles\\ntolls\\ntolly\\ntolts\\ntolus\\ntolyl\\ntoman\\ntombs\\ntomes\\ntomia\\ntommy\\ntomos\\ntondi\\ntondo\\ntoned\\ntoner\\ntones\\ntoney\\ntongs\\ntonka\\ntonks\\ntonne\\ntonus\\ntools\\ntooms\\ntoons\\ntoots\\ntoped\\ntopee\\ntopek\\ntoper\\ntopes\\ntophe\\ntophi\\ntophs\\ntopis\\ntopoi\\ntopos\\ntoppy\\ntoque\\ntorah\\ntoran\\ntoras\\ntorcs\\ntores\\ntoric\\ntorii\\ntoros\\ntorot\\ntorrs\\ntorse\\ntorsi\\ntorsk\\ntorta\\ntorte\\ntorts\\ntosas\\ntosed\\ntoses\\ntoshy\\ntossy\\ntoted\\ntoter\\ntotes\\ntotty\\ntouks\\ntouns\\ntours\\ntouse\\ntousy\\ntouts\\ntouze\\ntouzy\\ntowed\\ntowie\\ntowns\\ntowny\\ntowse\\ntowsy\\ntowts\\ntowze\\ntowzy\\ntoyed\\ntoyer\\ntoyon\\ntoyos\\ntozed\\ntozes\\ntozie\\ntrabs\\ntrads\\ntragi\\ntraik\\ntrams\\ntrank\\ntranq\\ntrans\\ntrant\\ntrape\\ntraps\\ntrapt\\ntrass\\ntrats\\ntratt\\ntrave\\ntrayf\\ntrays\\ntreck\\ntreed\\ntreen\\ntrees\\ntrefa\\ntreif\\ntreks\\ntrema\\ntrems\\ntress\\ntrest\\ntrets\\ntrews\\ntreyf\\ntreys\\ntriac\\ntride\\ntrier\\ntries\\ntriff\\ntrigo\\ntrigs\\ntrike\\ntrild\\ntrill\\ntrims\\ntrine\\ntrins\\ntriol\\ntrior\\ntrios\\ntrips\\ntripy\\ntrist\\ntroad\\ntroak\\ntroat\\ntrock\\ntrode\\ntrods\\ntrogs\\ntrois\\ntroke\\ntromp\\ntrona\\ntronc\\ntrone\\ntronk\\ntrons\\ntrooz\\ntroth\\ntrots\\ntrows\\ntroys\\ntrued\\ntrues\\ntrugo\\ntrugs\\ntrull\\ntryer\\ntryke\\ntryma\\ntryps\\ntsade\\ntsadi\\ntsars\\ntsked\\ntsuba\\ntsubo\\ntuans\\ntuart\\ntuath\\ntubae\\ntubar\\ntubas\\ntubby\\ntubed\\ntubes\\ntucks\\ntufas\\ntuffe\\ntuffs\\ntufts\\ntufty\\ntugra\\ntuile\\ntuina\\ntuism\\ntuktu\\ntules\\ntulpa\\ntulsi\\ntumid\\ntummy\\ntumps\\ntumpy\\ntunas\\ntunds\\ntuned\\ntuner\\ntunes\\ntungs\\ntunny\\ntupek\\ntupik\\ntuple\\ntuque\\nturds\\nturfs\\nturfy\\nturks\\nturme\\nturms\\nturns\\nturnt\\nturps\\nturrs\\ntushy\\ntusks\\ntusky\\ntutee\\ntutti\\ntutty\\ntutus\\ntuxes\\ntuyer\\ntwaes\\ntwain\\ntwals\\ntwank\\ntwats\\ntways\\ntweel\\ntween\\ntweep\\ntweer\\ntwerk\\ntwerp\\ntwier\\ntwigs\\ntwill\\ntwilt\\ntwink\\ntwins\\ntwiny\\ntwire\\ntwirp\\ntwite\\ntwits\\ntwoer\\ntwyer\\ntyees\\ntyers\\ntyiyn\\ntykes\\ntyler\\ntymps\\ntynde\\ntyned\\ntynes\\ntypal\\ntyped\\ntypes\\ntypey\\ntypic\\ntypos\\ntypps\\ntypto\\ntyran\\ntyred\\ntyres\\ntyros\\ntythe\\ntzars\\nudals\\nudons\\nugali\\nugged\\nuhlan\\nuhuru\\nukase\\nulama\\nulans\\nulema\\nulmin\\nulnad\\nulnae\\nulnar\\nulnas\\nulpan\\nulvas\\nulyie\\nulzie\\numami\\numbel\\number\\numble\\numbos\\numbre\\numiac\\numiak\\numiaq\\nummah\\nummas\\nummed\\numped\\numphs\\numpie\\numpty\\numrah\\numras\\nunais\\nunapt\\nunarm\\nunary\\nunaus\\nunbag\\nunban\\nunbar\\nunbed\\nunbid\\nunbox\\nuncap\\nunces\\nuncia\\nuncos\\nuncoy\\nuncus\\nundam\\nundee\\nundos\\nundug\\nuneth\\nunfix\\nungag\\nunget\\nungod\\nungot\\nungum\\nunhat\\nunhip\\nunica\\nunits\\nunjam\\nunked\\nunket\\nunkid\\nunlaw\\nunlay\\nunled\\nunlet\\nunlid\\nunman\\nunmew\\nunmix\\nunpay\\nunpeg\\nunpen\\nunpin\\nunred\\nunrid\\nunrig\\nunrip\\nunsaw\\nunsay\\nunsee\\nunsew\\nunsex\\nunsod\\nuntax\\nuntin\\nunwet\\nunwit\\nunwon\\nupbow\\nupbye\\nupdos\\nupdry\\nupend\\nupjet\\nuplay\\nupled\\nuplit\\nupped\\nupran\\nuprun\\nupsee\\nupsey\\nuptak\\nupter\\nuptie\\nuraei\\nurali\\nuraos\\nurare\\nurari\\nurase\\nurate\\nurbex\\nurbia\\nurdee\\nureal\\nureas\\nuredo\\nureic\\nurena\\nurent\\nurged\\nurger\\nurges\\nurial\\nurite\\nurman\\nurnal\\nurned\\nurped\\nursae\\nursid\\nurson\\nurubu\\nurvas\\nusers\\nusnea\\nusque\\nusure\\nusury\\nuteri\\nuveal\\nuveas\\nuvula\\nvacua\\nvaded\\nvades\\nvagal\\nvagus\\nvails\\nvaire\\nvairs\\nvairy\\nvakas\\nvakil\\nvales\\nvalis\\nvalse\\nvamps\\nvampy\\nvanda\\nvaned\\nvanes\\nvangs\\nvants\\nvaped\\nvaper\\nvapes\\nvaran\\nvaras\\nvardy\\nvarec\\nvares\\nvaria\\nvarix\\nvarna\\nvarus\\nvarve\\nvasal\\nvases\\nvasts\\nvasty\\nvatic\\nvatus\\nvauch\\nvaute\\nvauts\\nvawte\\nvaxes\\nveale\\nveals\\nvealy\\nveena\\nveeps\\nveers\\nveery\\nvegas\\nveges\\nvegie\\nvegos\\nvehme\\nveils\\nveily\\nveins\\nveiny\\nvelar\\nvelds\\nveldt\\nveles\\nvells\\nvelum\\nvenae\\nvenal\\nvends\\nvendu\\nveney\\nvenge\\nvenin\\nvents\\nvenus\\nverbs\\nverra\\nverry\\nverst\\nverts\\nvertu\\nvespa\\nvesta\\nvests\\nvetch\\nvexed\\nvexer\\nvexes\\nvexil\\nvezir\\nvials\\nviand\\nvibes\\nvibex\\nvibey\\nviced\\nvices\\nvichy\\nviers\\nviews\\nviewy\\nvifda\\nviffs\\nvigas\\nvigia\\nvilde\\nviler\\nvilli\\nvills\\nvimen\\nvinal\\nvinas\\nvinca\\nvined\\nviner\\nvines\\nvinew\\nvinic\\nvinos\\nvints\\nviold\\nviols\\nvired\\nvireo\\nvires\\nvirga\\nvirge\\nvirid\\nvirls\\nvirtu\\nvisas\\nvised\\nvises\\nvisie\\nvisne\\nvison\\nvisto\\nvitae\\nvitas\\nvitex\\nvitro\\nvitta\\nvivas\\nvivat\\nvivda\\nviver\\nvives\\nvizir\\nvizor\\nvleis\\nvlies\\nvlogs\\nvoars\\nvocab\\nvoces\\nvoddy\\nvodou\\nvodun\\nvoema\\nvogie\\nvoids\\nvoile\\nvoips\\nvolae\\nvolar\\nvoled\\nvoles\\nvolet\\nvolks\\nvolta\\nvolte\\nvolti\\nvolts\\nvolva\\nvolve\\nvomer\\nvoted\\nvotes\\nvouge\\nvoulu\\nvowed\\nvower\\nvoxel\\nvozhd\\nvraic\\nvrils\\nvroom\\nvrous\\nvrouw\\nvrows\\nvuggs\\nvuggy\\nvughs\\nvughy\\nvulgo\\nvulns\\nvulva\\nvutty\\nwaacs\\nwacke\\nwacko\\nwacks\\nwadds\\nwaddy\\nwaded\\nwader\\nwades\\nwadge\\nwadis\\nwadts\\nwaffs\\nwafts\\nwaged\\nwages\\nwagga\\nwagyu\\nwahoo\\nwaide\\nwaifs\\nwaift\\nwails\\nwains\\nwairs\\nwaite\\nwaits\\nwakas\\nwaked\\nwaken\\nwaker\\nwakes\\nwakfs\\nwaldo\\nwalds\\nwaled\\nwaler\\nwales\\nwalie\\nwalis\\nwalks\\nwalla\\nwalls\\nwally\\nwalty\\nwamed\\nwames\\nwamus\\nwands\\nwaned\\nwanes\\nwaney\\nwangs\\nwanks\\nwanky\\nwanle\\nwanly\\nwanna\\nwants\\nwanty\\nwanze\\nwaqfs\\nwarbs\\nwarby\\nwards\\nwared\\nwares\\nwarez\\nwarks\\nwarms\\nwarns\\nwarps\\nwarre\\nwarst\\nwarts\\nwases\\nwashy\\nwasms\\nwasps\\nwaspy\\nwasts\\nwatap\\nwatts\\nwauff\\nwaugh\\nwauks\\nwaulk\\nwauls\\nwaurs\\nwaved\\nwaves\\nwavey\\nwawas\\nwawes\\nwawls\\nwaxed\\nwaxer\\nwaxes\\nwayed\\nwazir\\nwazoo\\nweald\\nweals\\nweamb\\nweans\\nwears\\nwebby\\nweber\\nwecht\\nwedel\\nwedgy\\nweeds\\nweeke\\nweeks\\nweels\\nweems\\nweens\\nweeny\\nweeps\\nweepy\\nweest\\nweete\\nweets\\nwefte\\nwefts\\nweids\\nweils\\nweirs\\nweise\\nweize\\nwekas\\nwelds\\nwelke\\nwelks\\nwelkt\\nwells\\nwelly\\nwelts\\nwembs\\nwends\\nwenge\\nwenny\\nwents\\nweros\\nwersh\\nwests\\nwetas\\nwetly\\nwexed\\nwexes\\nwhamo\\nwhams\\nwhang\\nwhaps\\nwhare\\nwhata\\nwhats\\nwhaup\\nwhaur\\nwheal\\nwhear\\nwheen\\nwheep\\nwheft\\nwhelk\\nwhelm\\nwhens\\nwhets\\nwhews\\nwheys\\nwhids\\nwhift\\nwhigs\\nwhilk\\nwhims\\nwhins\\nwhios\\nwhips\\nwhipt\\nwhirr\\nwhirs\\nwhish\\nwhiss\\nwhist\\nwhits\\nwhity\\nwhizz\\nwhomp\\nwhoof\\nwhoot\\nwhops\\nwhorl\\nwhort\\nwhoso\\nwhows\\nwhump\\nwhups\\nwhyda\\nwicca\\nwicks\\nwicky\\nwiddy\\nwides\\nwiels\\nwifed\\nwifes\\nwifey\\nwifie\\nwifty\\nwigan\\nwigga\\nwiggy\\nwikis\\nwilco\\nwilds\\nwiled\\nwiles\\nwilga\\nwilis\\nwilja\\nwills\\nwilts\\nwimps\\nwinds\\nwined\\nwines\\nwiney\\nwinge\\nwings\\nwingy\\nwinks\\nwinna\\nwinns\\nwinos\\nwinze\\nwiped\\nwiper\\nwipes\\nwired\\nwirer\\nwires\\nwirra\\nwised\\nwises\\nwisha\\nwisht\\nwisps\\nwists\\nwitan\\nwited\\nwites\\nwithe\\nwiths\\nwithy\\nwived\\nwiver\\nwives\\nwizen\\nwizes\\nwoads\\nwoald\\nwocks\\nwodge\\nwoful\\nwojus\\nwoker\\nwokka\\nwolds\\nwolfs\\nwolly\\nwolve\\nwombs\\nwomby\\nwomyn\\nwonga\\nwongi\\nwonks\\nwonky\\nwonts\\nwoods\\nwooed\\nwoofs\\nwoofy\\nwoold\\nwools\\nwoons\\nwoops\\nwoopy\\nwoose\\nwoosh\\nwootz\\nwords\\nworks\\nworms\\nwormy\\nworts\\nwowed\\nwowee\\nwoxen\\nwrang\\nwraps\\nwrapt\\nwrast\\nwrate\\nwrawl\\nwrens\\nwrick\\nwried\\nwrier\\nwries\\nwrits\\nwroke\\nwroot\\nwroth\\nwryer\\nwuddy\\nwudus\\nwulls\\nwurst\\nwuses\\nwushu\\nwussy\\nwuxia\\nwyled\\nwyles\\nwynds\\nwynns\\nwyted\\nwytes\\nxebec\\nxenia\\nxenic\\nxenon\\nxeric\\nxerox\\nxerus\\nxoana\\nxrays\\nxylan\\nxylem\\nxylic\\nxylol\\nxylyl\\nxysti\\nxysts\\nyaars\\nyabas\\nyabba\\nyabby\\nyacca\\nyacka\\nyacks\\nyaffs\\nyager\\nyages\\nyagis\\nyahoo\\nyaird\\nyakka\\nyakow\\nyales\\nyamen\\nyampy\\nyamun\\nyangs\\nyanks\\nyapok\\nyapon\\nyapps\\nyappy\\nyarak\\nyarco\\nyards\\nyarer\\nyarfa\\nyarks\\nyarns\\nyarrs\\nyarta\\nyarto\\nyates\\nyauds\\nyauld\\nyaups\\nyawed\\nyawey\\nyawls\\nyawns\\nyawny\\nyawps\\nybore\\nyclad\\nycled\\nycond\\nydrad\\nydred\\nyeads\\nyeahs\\nyealm\\nyeans\\nyeard\\nyears\\nyecch\\nyechs\\nyechy\\nyedes\\nyeeds\\nyeesh\\nyeggs\\nyelks\\nyells\\nyelms\\nyelps\\nyelts\\nyenta\\nyente\\nyerba\\nyerds\\nyerks\\nyeses\\nyesks\\nyests\\nyesty\\nyetis\\nyetts\\nyeuks\\nyeuky\\nyeven\\nyeves\\nyewen\\nyexed\\nyexes\\nyfere\\nyiked\\nyikes\\nyills\\nyince\\nyipes\\nyippy\\nyirds\\nyirks\\nyirrs\\nyirth\\nyites\\nyitie\\nylems\\nylike\\nylkes\\nymolt\\nympes\\nyobbo\\nyobby\\nyocks\\nyodel\\nyodhs\\nyodle\\nyogas\\nyogee\\nyoghs\\nyogic\\nyogin\\nyogis\\nyoick\\nyojan\\nyoked\\nyokel\\nyoker\\nyokes\\nyokul\\nyolks\\nyolky\\nyomim\\nyomps\\nyonic\\nyonis\\nyonks\\nyoofs\\nyoops\\nyores\\nyorks\\nyorps\\nyouks\\nyourn\\nyours\\nyourt\\nyouse\\nyowed\\nyowes\\nyowie\\nyowls\\nyowza\\nyrapt\\nyrent\\nyrivd\\nyrneh\\nysame\\nytost\\nyuans\\nyucas\\nyucca\\nyucch\\nyucko\\nyucks\\nyucky\\nyufts\\nyugas\\nyuked\\nyukes\\nyukky\\nyukos\\nyulan\\nyules\\nyummo\\nyummy\\nyumps\\nyupon\\nyuppy\\nyurta\\nyurts\\nyuzus\\nzabra\\nzacks\\nzaida\\nzaidy\\nzaire\\nzakat\\nzaman\\nzambo\\nzamia\\nzanja\\nzante\\nzanza\\nzanze\\nzappy\\nzarfs\\nzaris\\nzatis\\nzaxes\\nzayin\\nzazen\\nzeals\\nzebec\\nzebub\\nzebus\\nzedas\\nzeins\\nzendo\\nzerda\\nzerks\\nzeros\\nzests\\nzetas\\nzexes\\nzezes\\nzhomo\\nzibet\\nziffs\\nzigan\\nzilas\\nzilch\\nzilla\\nzills\\nzimbi\\nzimbs\\nzinco\\nzincs\\nzincy\\nzineb\\nzines\\nzings\\nzingy\\nzinke\\nzinky\\nzippo\\nzippy\\nziram\\nzitis\\nzizel\\nzizit\\nzlote\\nzloty\\nzoaea\\nzobos\\nzobus\\nzocco\\nzoeae\\nzoeal\\nzoeas\\nzoism\\nzoist\\nzombi\\nzonae\\nzonda\\nzoned\\nzoner\\nzones\\nzonks\\nzooea\\nzooey\\nzooid\\nzooks\\nzooms\\nzoons\\nzooty\\nzoppa\\nzoppo\\nzoril\\nzoris\\nzorro\\nzouks\\nzowee\\nzowie\\nzulus\\nzupan\\nzupas\\nzuppa\\nzurfs\\nzuzim\\nzygal\\nzygon\\nzymes\\nzymic\";","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import { useEffect, useState } from 'react';\nimport MatchedWord from './MatchedWord';\nimport styles from './PatternSearch.module.css';\n\nexport default function PatternSearch({ words }) {\n  const [search, setSearch] = useState('');\n  const [matches, setMatches] = useState(null);\n  const haveMatches = Boolean(matches);\n  const count = haveMatches ? matches.length : words.length;\n\n  useEffect(() => {\n    setMatches(findMatches(search, words));\n  }, [words, search]);\n\n  return (\n    <div className={styles.main}>\n      <input\n        tabindex='0'\n        className={styles.input}\n        type=\"text\"\n        value={search}\n        onInput={(e) => setSearch(e.target.value)}\n      />\n      <div className={styles.count}>\n        {`Found ${count} matches`}\n      </div>\n      {buildMatches(haveMatches, matches, words, search)}\n    </div>\n  );\n}\n\nfunction buildMatches(haveMatches, matches, words, search) {\n  const shownCount = 200;\n  const patternLetters = replaceNonWords(search).split('');\n  const { shown, remaining } = generateMatches(haveMatches, matches, words, shownCount);\n\n  return (\n    <>\n      {shown.map(match => {\n        const colors = findMatchedColors(patternLetters, match.index);\n        return <MatchedWord word={match.word} colors={colors}/>;\n      })}\n      {(remaining > 0) &&\n        <div className={styles.count}>\n          {`... and ${remaining} more`}\n        </div>\n      }\n    </>\n  );\n}\n\nfunction findMatches(text, words) {\n  if (text === '') {\n    return null;\n  }\n\n  const pattern = replaceNonWords(text);\n  const find = new RegExp(pattern, 'i');\n\n  return words.reduce((found, word) => {\n    const index = word.search(find);\n    if (index >= 0) {\n      return [...found, { word, index }];\n    }\n    return found;\n  }, []);\n}\n\nfunction generateMatches(haveMatches, matches, words, count) {\n  if (haveMatches) {\n    const remaining = matches.length - count;\n    const shown = matches.slice(0, count);\n\n    return { shown, remaining };\n  }\n\n  const remaining = words.length - count;\n  const shown = words.slice(0, count).map(word => ({ word, index: -1 }));\n\n  return { shown, remaining };\n}\n\nfunction findMatchedColors(patternLetters, offset) {\n  const letters = Array(5).fill(' ');\n\n  if (offset < 0) {\n    return letters;\n  }\n  \n  const matched = letters.map((letter, index) => {\n    const patternIndex = index - offset;\n    if (patternIndex >= 0 && patternIndex < patternLetters.length) {\n      return patternLetters[patternIndex] === '.' ? 'y' : 'g';\n    }\n    return letter;\n  });\n\n  return matched;\n}\n\nfunction replaceNonWords(input) {\n  const nonWords = /[^A-Za-z]/ig;\n  return input.replace(nonWords, '.');\n}\n","import { useState } from 'react';\nimport { getMatches } from '../utilities/words';\nimport CountBoxes from './CountBoxes';\nimport styles from './MatchWords.module.css';\n\nexport default function MatchWords({ words, matches, useBest = true }) {\n  const shownCount = 200;\n  const [scale, setScale] = useState(0);\n  const ratio = Math.pow(15, useBest ? scale : -scale);\n  const bySum = (a, b) => {\n    const sumA = a.yellow + ratio * a.green;\n    const sumB = b.yellow + ratio * b.green;\n    return useBest ? sumB - sumA : sumA - sumB;\n  };\n  const sorted = [...matches].sort(bySum);\n\n  return (\n    <div className={styles.main}>\n      <div className={styles.scale}>\n        <span>Prefer yellow</span>\n        <input\n          className={styles.input}\n          type=\"range\"\n          min=\"-1\"\n          max=\"1\"\n          step=\"0.01\"\n          value={scale}\n          onChange={(e) => setScale(e.target.value)}\n        />\n        <span>Prefer green</span>\n      </div>\n      <div className={styles.matches}>\n        {sorted.slice(0, shownCount).map(({ word, green, yellow }) => {\n          return (\n            <>\n              <div>\n                <div className={styles.word}>{word}</div>\n                <div className={styles.wordSpacer}> </div>\n              </div>\n              <CountBoxes count={yellow} className='yellow' />\n              <CountBoxes count={green} className='green' />\n            </>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"label__7Pl9u\",\"box\":\"box__fAZMC\",\"boxes\":\"boxes__HDmY0\"};","import { useEffect, useState } from 'react';\nimport MatchedWord from './MatchedWord';\nimport styles from './LetterSearch.module.css';\n\nexport default function LetterSearch({ words }) {\n  const [search, setSearch] = useState('');\n  const [matches, setMatches] = useState(null);\n  const haveMatches = Boolean(matches);\n  const count = haveMatches ? matches.length : words.length;\n\n  useEffect(() => {\n    setMatches(findMatches(search, words));\n  }, [words, search]);\n\n  return (\n    <div className={styles.main}>\n      <input\n        tabindex='0'\n        className={styles.input}\n        type=\"text\"\n        value={search}\n        onInput={(e) => setSearch(e.target.value)}\n      />\n      <div className={styles.count}>\n        {`Found ${count} matches`}\n      </div>\n      {buildMatches(haveMatches, matches, words, search)}\n    </div>\n  );\n}\n\nfunction buildMatches(haveMatches, matches, words, search) {\n  const shownCount = 200;\n  const { shown, remaining } = generateMatches(haveMatches, matches, words, shownCount);\n\n  return (\n    <>\n      {shown.map(match => {\n        const colors = findMatchedColors(match.indices);\n        return <MatchedWord word={match.word} colors={colors}/>;\n      })}\n      {(remaining > 0) &&\n        <div className={styles.count}>\n          {`... and ${remaining} more`}\n        </div>\n      }\n    </>\n  );\n}\n\nfunction findMatches(search, words) {\n  if (search === '') {\n    return null;\n  }\n\n  const pattern = filterNonWords(search);\n  const patternLetters = pattern.split('');\n\n  return words.reduce((found, word) => {\n    const letters = word.split('');\n    const indices = [];\n\n    const matches = patternLetters.every(patternLetter => {\n      const index = letters.indexOf(patternLetter);\n\n      if (index >= 0) {\n        letters[index] = '_';\n        indices.push(index);\n        return true;\n      }\n      return false;\n    });\n\n    if (matches) {\n      return [...found, { word, indices }];\n    }\n    return found;\n  }, []);\n}\n\nfunction generateMatches(haveMatches, matches, words, count) {\n  if (haveMatches) {\n    const remaining = matches.length - count;\n    const shown = matches.slice(0, count);\n\n    return { shown, remaining };\n  }\n\n  const remaining = words.length - count;\n  const shown = words.slice(0, count).map(word => ({ word, indices: [] }));\n\n  return { shown, remaining };\n}\n\nfunction findMatchedColors(indices) {\n  const letters = Array(5).fill(' ');\n  return letters;\n\n  for (index of indices) {\n    letters[index] = 'g';\n  }\n  \n  return letters;\n}\n\nfunction filterNonWords(input) {\n  const nonWords = /[^A-Za-z]/ig;\n  return input.replace(nonWords, '');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"main__eYC4W\",\"title\":\"title__L5hTC\",\"version\":\"version__4gqHp\",\"dropdown\":\"dropdown__JuTX9\",\"dropdowns\":\"dropdowns__Cxjyw\",\"separator\":\"separator__UUwnC\",\"description\":\"description__GdBwm\",\"display\":\"display__KM5eB\"};","import { useState } from 'preact/hooks';\n\nimport { version } from '../../package.json';\nimport answerWords from '../data/answerWords.txt';\nimport allWords from '../data/allWords.txt';\nimport answerMatches from '../data/answerMatches.json';\nimport allMatches from '../data/allMatches.json';\nimport {\n  wordsDefault,\n  wordNames,\n  displayDefault,\n  displayNames,\n  displayElements,\n  displayDescriptions,\n} from '../data/display.js';\nimport LetterPositions from '../components/LetterPositions';\nimport LetterSearch from '../components/LetterSearch';\nimport MatchWords from '../components/MatchWords';\nimport PatternSearch from '../components/PatternSearch';\nimport styles from './Home.module.css';\n\nconst answers = answerWords.split('\\n');\nconst all = allWords.split('\\n');\n\nexport default function Home() {\n  const [display, setDisplay] = useState(displayDefault);\n  const [useAll, setUseAll] = useState(false);\n  const words = useAll ? all : answers;\n  const matches = useAll ? allMatches : answerMatches;\n\n  function changeDisplay(e) {\n    setDisplay(e.target.value);\n  }\n\n  function changeUseAll(e) {\n    setUseAll(e.target.value === 'all');\n  }\n\n  return (\n    <div className={styles.main}>\n      <div className={styles.title}>\n        <h1>Wordle Stats</h1>\n        <span className={styles.version}>{version}</span>\n      </div>\n      <div className={styles.dropdowns}>\n        {buildDropdown(displayNames, displayDefault, changeDisplay)}\n        <span className={styles.separator}>{'of'}</span>\n        {buildDropdown(wordNames, wordsDefault, changeUseAll)}\n      </div>\n      <div className={styles.description}>\n        {displayDescriptions[display](words.length)}\n      </div>\n      <div className={styles.display}>\n        {buildDisplay(display, words, matches)}\n      </div>\n    </div>\n  );\n}\n\nfunction buildDisplay(display, words, matches) {\n  switch (display) {\n    case 'letterPositions':\n      return <LetterPositions words={words} />;\n    case 'bestMatch':\n      return <MatchWords words={words} matches={matches} />;\n    case 'worstMatch':\n      return <MatchWords words={words} matches={matches} useBest={false} />;\n    case 'letterSearch':\n      return <LetterSearch words={words} />;\n    case 'patternSearch':\n      return <PatternSearch words={words} />;\n  }\n}\n\nfunction buildDropdown(namesObj, selectedName, onChange) {\n  const entries = Object.entries(namesObj);\n\n  return (\n    <select onchange={onChange}>\n      {entries.map((entry) => {\n        const selected = entry[0] === selectedName ? 'selected' : '';\n        \n        return (\n          <option value={entry[0]} selected={selected}>\n            {entry[1]}\n          </option>\n        );\n      })}\n    </select>\n  );\n}\n","module.exports = require(\"preact\");","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","import {\n\tcreateElement,\n\trender as preactRender,\n\tcloneElement as preactCloneElement,\n\tcreateRef,\n\tComponent,\n\tcreateContext,\n\tFragment\n} from 'preact';\nimport {\n\tuseState,\n\tuseReducer,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseRef,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue\n} from 'preact/hooks';\nimport { PureComponent } from './PureComponent';\nimport { memo } from './memo';\nimport { forwardRef } from './forwardRef';\nimport { Children } from './Children';\nimport { Suspense, lazy } from './suspense';\nimport { SuspenseList } from './suspense-list';\nimport { createPortal } from './portals';\nimport {\n\thydrate,\n\trender,\n\tREACT_ELEMENT_TYPE,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n} from './render';\n\nconst version = '17.0.2'; // trick libraries to think we are react\n\n/**\n * Legacy version of createElement.\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component constructor\n */\nfunction createFactory(type) {\n\treturn createElement.bind(null, type);\n}\n\n/**\n * Check if the passed element is a valid (p)react node.\n * @param {*} element The element to check\n * @returns {boolean}\n */\nfunction isValidElement(element) {\n\treturn !!element && element.$$typeof === REACT_ELEMENT_TYPE;\n}\n\n/**\n * Wrap `cloneElement` to abort if the passed element is not a valid element and apply\n * all vnode normalizations.\n * @param {import('./internal').VNode} element The vnode to clone\n * @param {object} props Props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Optional component children\n */\nfunction cloneElement(element) {\n\tif (!isValidElement(element)) return element;\n\treturn preactCloneElement.apply(null, arguments);\n}\n\n/**\n * Remove a component tree from the DOM, including state and event handlers.\n * @param {import('./internal').PreactElement} container\n * @returns {boolean}\n */\nfunction unmountComponentAtNode(container) {\n\tif (container._children) {\n\t\tpreactRender(null, container);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/**\n * Get the matching DOM node for a component\n * @param {import('./internal').Component} component\n * @returns {import('./internal').PreactElement | null}\n */\nfunction findDOMNode(component) {\n\treturn (\n\t\t(component &&\n\t\t\t(component.base || (component.nodeType === 1 && component))) ||\n\t\tnull\n\t);\n}\n\n/**\n * Deprecated way to control batched rendering inside the reconciler, but we\n * already schedule in batches inside our rendering code\n * @template Arg\n * @param {(arg: Arg) => void} callback function that triggers the updated\n * @param {Arg} [arg] Optional argument that can be passed to the callback\n */\n// eslint-disable-next-line camelcase\nconst unstable_batchedUpdates = (callback, arg) => callback(arg);\n\n/**\n * In React, `flushSync` flushes the entire tree and forces a rerender. It's\n * implmented here as a no-op.\n * @template Arg\n * @template Result\n * @param {(arg: Arg) => Result} callback function that runs before the flush\n * @param {Arg} [arg] Optional arugment that can be passed to the callback\n * @returns\n */\nconst flushSync = (callback, arg) => callback(arg);\n\n/**\n * Strict Mode is not implemented in Preact, so we provide a stand-in for it\n * that just renders its children without imposing any restrictions.\n */\nconst StrictMode = Fragment;\n\nexport * from 'preact/hooks';\nexport {\n\tversion,\n\tChildren,\n\trender,\n\thydrate,\n\tunmountComponentAtNode,\n\tcreatePortal,\n\tcreateElement,\n\tcreateContext,\n\tcreateFactory,\n\tcloneElement,\n\tcreateRef,\n\tFragment,\n\tisValidElement,\n\tfindDOMNode,\n\tComponent,\n\tPureComponent,\n\tmemo,\n\tforwardRef,\n\tflushSync,\n\t// eslint-disable-next-line camelcase\n\tunstable_batchedUpdates,\n\tStrictMode,\n\tSuspense,\n\tSuspenseList,\n\tlazy,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n};\n\n// React copies the named exports to the default one.\nexport default {\n\tuseState,\n\tuseReducer,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseRef,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue,\n\tversion,\n\tChildren,\n\trender,\n\thydrate,\n\tunmountComponentAtNode,\n\tcreatePortal,\n\tcreateElement,\n\tcreateContext,\n\tcreateFactory,\n\tcloneElement,\n\tcreateRef,\n\tFragment,\n\tisValidElement,\n\tfindDOMNode,\n\tComponent,\n\tPureComponent,\n\tmemo,\n\tforwardRef,\n\tflushSync,\n\tunstable_batchedUpdates,\n\tStrictMode,\n\tSuspense,\n\tSuspenseList,\n\tlazy,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n};\n","import Home from './components/Home';\nimport './style';\n\nexport default function App() {\n  return (\n    <Home />\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"main__Fr+Jp\",\"letter\":\"letter__WjLzG\"};","export function countLettersByPosition(index, words) {\n  const a = 'a'.charCodeAt(0);\n  const allLetters = Array.from(Array(26).keys(), (i) => String.fromCharCode(a + i));\n  const zeros = allLetters.reduce((all, letter) => ({ ...all, [letter]: 0}), {});\n  return words.reduce((counts, word) => {\n    const letter = word[index];\n\n    return {\n      ...counts,\n      [letter]: counts[letter] + 1,\n    }\n  }, zeros);\n}\n\nexport function sortLetterCounts(byLetter) {\n  const entries = Object.entries(byLetter);\n  const byCount = (a, b) => {\n    if (a[1] === b[1]) {\n      return (a[0] > b[0] ? 1 : -1);\n    }\n    return b[1] - a[1];\n  };\n\n  return entries.sort(byCount);\n}\n\nexport function getMatches(words, answers) {\n  if (words.length === 0) {\n    return [];\n  }\n\n  return words.map((word) => {\n    const wordSums = answers.reduce((sums, answer) => {\n      const match = getMatch(word, answer);\n\n      return {\n        green: sums.green + match.green,\n        yellow: sums.yellow + match.yellow,\n      }\n    }, { green: 0, yellow: 0 });\n    const scale = 1 / answers.length;\n\n    return {\n      word,\n      green: scale * wordSums.green,\n      yellow: scale * wordSums.yellow,\n    };\n  });\n}\n\nfunction getMatch(word, answer) {\n  const matchChars = answer.split('');\n  const chars = word.split('');\n\n  const green = chars.reduce((sum, char, index) => {\n    if (char === matchChars[index]) {\n      matchChars[index] = null;\n      return sum + 1;\n    }\n    return sum;\n  }, 0);\n\n  const yellow = chars.reduce((sum, char, index) => {\n    const matchIndex = matchChars.indexOf(char);\n    if (matchIndex >= 0) {\n      matchChars[matchIndex] = null;\n      return sum + 1;\n    }\n    return sum;\n  }, 0);\n\n  return { green, yellow };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"main__wHwG-\",\"input\":\"input__lgz8d\",\"count\":\"count__YnFKv\"};","import classnames from 'classnames';\n\nimport styles from './MatchedWord.module.css';\n\nexport default function MatchedWord({ word, colors }) {\n  const letters = word.split('');\n\n  return (\n    <div className={styles.main}>\n      {letters.map((letter, index) => {\n        const color = colors[index];\n        const classes = classnames({\n          [styles.letter]: true,\n          'yellow': color === 'y',\n          'green': color === 'g',\n        });\n\n        return <div className={classes}>{letter}</div>\n      })}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"main__FhM7p\",\"columns\":\"columns__qZbLA\",\"graph\":\"graph__-0tSx\",\"graphBars\":\"graphBars__eitL0\",\"bar\":\"bar__QuGFH\",\"positionBar\":\"positionBar__Wye0D\",\"graphText\":\"graphText__9aPFr\",\"letterCounts\":\"letterCounts__7-+Di\",\"letterCount\":\"letterCount__wpSqd\",\"letter\":\"letter__+dBPV\",\"count\":\"count__ci2qK\"};","/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Check if two objects have a different shape\n * @param {object} a\n * @param {object} b\n * @returns {boolean}\n */\nexport function shallowDiffers(a, b) {\n\tfor (let i in a) if (i !== '__source' && !(i in b)) return true;\n\tfor (let i in b) if (i !== '__source' && a[i] !== b[i]) return true;\n\treturn false;\n}\n\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n","import { Component } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Component class with a predefined `shouldComponentUpdate` implementation\n */\nexport function PureComponent(p) {\n\tthis.props = p;\n}\nPureComponent.prototype = new Component();\n// Some third-party libraries check if this property is present\nPureComponent.prototype.isPureReactComponent = true;\nPureComponent.prototype.shouldComponentUpdate = function(props, state) {\n\treturn shallowDiffers(this.props, props) || shallowDiffers(this.state, state);\n};\n","import { options } from 'preact';\nimport { assign } from './util';\n\nlet oldDiffHook = options._diff;\noptions._diff = vnode => {\n\tif (vnode.type && vnode.type._forwarded && vnode.ref) {\n\t\tvnode.props.ref = vnode.ref;\n\t\tvnode.ref = null;\n\t}\n\tif (oldDiffHook) oldDiffHook(vnode);\n};\n\nexport const REACT_FORWARD_SYMBOL =\n\t(typeof Symbol != 'undefined' &&\n\t\tSymbol.for &&\n\t\tSymbol.for('react.forward_ref')) ||\n\t0xf47;\n\n/**\n * Pass ref down to a child. This is mainly used in libraries with HOCs that\n * wrap components. Using `forwardRef` there is an easy way to get a reference\n * of the wrapped component instead of one of the wrapper itself.\n * @param {import('./index').ForwardFn} fn\n * @returns {import('./internal').FunctionComponent}\n */\nexport function forwardRef(fn) {\n\tfunction Forwarded(props) {\n\t\tlet clone = assign({}, props);\n\t\tdelete clone.ref;\n\t\treturn fn(clone, props.ref || null);\n\t}\n\n\t// mobx-react checks for this being present\n\tForwarded.$$typeof = REACT_FORWARD_SYMBOL;\n\t// mobx-react heavily relies on implementation details.\n\t// It expects an object here with a `render` property,\n\t// and prototype.render will fail. Without this\n\t// mobx-react throws.\n\tForwarded.render = Forwarded;\n\n\tForwarded.prototype.isReactComponent = Forwarded._forwarded = true;\n\tForwarded.displayName = 'ForwardRef(' + (fn.displayName || fn.name) + ')';\n\treturn Forwarded;\n}\n","import { toChildArray } from 'preact';\n\nconst mapFn = (children, fn) => {\n\tif (children == null) return null;\n\treturn toChildArray(toChildArray(children).map(fn));\n};\n\n// This API is completely unnecessary for Preact, so it's basically passthrough.\nexport const Children = {\n\tmap: mapFn,\n\tforEach: mapFn,\n\tcount(children) {\n\t\treturn children ? toChildArray(children).length : 0;\n\t},\n\tonly(children) {\n\t\tconst normalized = toChildArray(children);\n\t\tif (normalized.length !== 1) throw 'Children.only';\n\t\treturn normalized[0];\n\t},\n\ttoArray: toChildArray\n};\n","import { Component, createElement, options, Fragment } from 'preact';\nimport { assign } from './util';\n\nconst oldCatchError = options._catchError;\noptions._catchError = function(error, newVNode, oldVNode, errorInfo) {\n\tif (error.then) {\n\t\t/** @type {import('./internal').Component} */\n\t\tlet component;\n\t\tlet vnode = newVNode;\n\n\t\tfor (; (vnode = vnode._parent); ) {\n\t\t\tif ((component = vnode._component) && component._childDidSuspend) {\n\t\t\t\tif (newVNode._dom == null) {\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t}\n\t\t\t\t// Don't call oldCatchError if we found a Suspense\n\t\t\t\treturn component._childDidSuspend(error, newVNode);\n\t\t\t}\n\t\t}\n\t}\n\toldCatchError(error, newVNode, oldVNode, errorInfo);\n};\n\nconst oldUnmount = options.unmount;\noptions.unmount = function(vnode) {\n\t/** @type {import('./internal').Component} */\n\tconst component = vnode._component;\n\tif (component && component._onResolve) {\n\t\tcomponent._onResolve();\n\t}\n\n\t// if the component is still hydrating\n\t// most likely it is because the component is suspended\n\t// we set the vnode.type as `null` so that it is not a typeof function\n\t// so the unmount will remove the vnode._dom\n\tif (component && vnode._hydrating === true) {\n\t\tvnode.type = null;\n\t}\n\n\tif (oldUnmount) oldUnmount(vnode);\n};\n\nfunction detachedClone(vnode, detachedParent, parentDom) {\n\tif (vnode) {\n\t\tif (vnode._component && vnode._component.__hooks) {\n\t\t\tvnode._component.__hooks._list.forEach(effect => {\n\t\t\t\tif (typeof effect._cleanup == 'function') effect._cleanup();\n\t\t\t});\n\n\t\t\tvnode._component.__hooks = null;\n\t\t}\n\n\t\tvnode = assign({}, vnode);\n\t\tif (vnode._component != null) {\n\t\t\tif (vnode._component._parentDom === parentDom) {\n\t\t\t\tvnode._component._parentDom = detachedParent;\n\t\t\t}\n\t\t\tvnode._component = null;\n\t\t}\n\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tdetachedClone(child, detachedParent, parentDom)\n\t\t\t);\n\t}\n\n\treturn vnode;\n}\n\nfunction removeOriginal(vnode, detachedParent, originalParent) {\n\tif (vnode) {\n\t\tvnode._original = null;\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tremoveOriginal(child, detachedParent, originalParent)\n\t\t\t);\n\n\t\tif (vnode._component) {\n\t\t\tif (vnode._component._parentDom === detachedParent) {\n\t\t\t\tif (vnode._dom) {\n\t\t\t\t\toriginalParent.insertBefore(vnode._dom, vnode._nextDom);\n\t\t\t\t}\n\t\t\t\tvnode._component._force = true;\n\t\t\t\tvnode._component._parentDom = originalParent;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn vnode;\n}\n\n// having custom inheritance instead of a class here saves a lot of bytes\nexport function Suspense() {\n\t// we do not call super here to golf some bytes...\n\tthis._pendingSuspensionCount = 0;\n\tthis._suspenders = null;\n\tthis._detachOnNextRender = null;\n}\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspense.prototype = new Component();\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {Promise} promise The thrown promise\n * @param {import('./internal').VNode<any, any>} suspendingVNode The suspending component\n */\nSuspense.prototype._childDidSuspend = function(promise, suspendingVNode) {\n\tconst suspendingComponent = suspendingVNode._component;\n\n\t/** @type {import('./internal').SuspenseComponent} */\n\tconst c = this;\n\n\tif (c._suspenders == null) {\n\t\tc._suspenders = [];\n\t}\n\tc._suspenders.push(suspendingComponent);\n\n\tconst resolve = suspended(c._vnode);\n\n\tlet resolved = false;\n\tconst onResolved = () => {\n\t\tif (resolved) return;\n\n\t\tresolved = true;\n\t\tsuspendingComponent._onResolve = null;\n\n\t\tif (resolve) {\n\t\t\tresolve(onSuspensionComplete);\n\t\t} else {\n\t\t\tonSuspensionComplete();\n\t\t}\n\t};\n\n\tsuspendingComponent._onResolve = onResolved;\n\n\tconst onSuspensionComplete = () => {\n\t\tif (!--c._pendingSuspensionCount) {\n\t\t\t// If the suspension was during hydration we don't need to restore the\n\t\t\t// suspended children into the _children array\n\t\t\tif (c.state._suspended) {\n\t\t\t\tconst suspendedVNode = c.state._suspended;\n\t\t\t\tc._vnode._children[0] = removeOriginal(\n\t\t\t\t\tsuspendedVNode,\n\t\t\t\t\tsuspendedVNode._component._parentDom,\n\t\t\t\t\tsuspendedVNode._component._originalParentDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tc.setState({ _suspended: (c._detachOnNextRender = null) });\n\n\t\t\tlet suspended;\n\t\t\twhile ((suspended = c._suspenders.pop())) {\n\t\t\t\tsuspended.forceUpdate();\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * We do not set `suspended: true` during hydration because we want the actual markup\n\t * to remain on screen and hydrate it when the suspense actually gets resolved.\n\t * While in non-hydration cases the usual fallback -> component flow would occour.\n\t */\n\tconst wasHydrating = suspendingVNode._hydrating === true;\n\tif (!c._pendingSuspensionCount++ && !wasHydrating) {\n\t\tc.setState({ _suspended: (c._detachOnNextRender = c._vnode._children[0]) });\n\t}\n\tpromise.then(onResolved, onResolved);\n};\n\nSuspense.prototype.componentWillUnmount = function() {\n\tthis._suspenders = [];\n};\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {import('./internal').SuspenseComponent[\"props\"]} props\n * @param {import('./internal').SuspenseState} state\n */\nSuspense.prototype.render = function(props, state) {\n\tif (this._detachOnNextRender) {\n\t\t// When the Suspense's _vnode was created by a call to createVNode\n\t\t// (i.e. due to a setState further up in the tree)\n\t\t// it's _children prop is null, in this case we \"forget\" about the parked vnodes to detach\n\t\tif (this._vnode._children) {\n\t\t\tconst detachedParent = document.createElement('div');\n\t\t\tconst detachedComponent = this._vnode._children[0]._component;\n\t\t\tthis._vnode._children[0] = detachedClone(\n\t\t\t\tthis._detachOnNextRender,\n\t\t\t\tdetachedParent,\n\t\t\t\t(detachedComponent._originalParentDom = detachedComponent._parentDom)\n\t\t\t);\n\t\t}\n\n\t\tthis._detachOnNextRender = null;\n\t}\n\n\t// Wrap fallback tree in a VNode that prevents itself from being marked as aborting mid-hydration:\n\t/** @type {import('./internal').VNode} */\n\tconst fallback =\n\t\tstate._suspended && createElement(Fragment, null, props.fallback);\n\tif (fallback) fallback._hydrating = null;\n\n\treturn [\n\t\tcreateElement(Fragment, null, state._suspended ? null : props.children),\n\t\tfallback\n\t];\n};\n\n/**\n * Checks and calls the parent component's _suspended method, passing in the\n * suspended vnode. This is a way for a parent (e.g. SuspenseList) to get notified\n * that one of its children/descendants suspended.\n *\n * The parent MAY return a callback. The callback will get called when the\n * suspension resolves, notifying the parent of the fact.\n * Moreover, the callback gets function `unsuspend` as a parameter. The resolved\n * child descendant will not actually get unsuspended until `unsuspend` gets called.\n * This is a way for the parent to delay unsuspending.\n *\n * If the parent does not return a callback then the resolved vnode\n * gets unsuspended immediately when it resolves.\n *\n * @param {import('./internal').VNode} vnode\n * @returns {((unsuspend: () => void) => void)?}\n */\nexport function suspended(vnode) {\n\t/** @type {import('./internal').Component} */\n\tlet component = vnode._parent._component;\n\treturn component && component._suspended && component._suspended(vnode);\n}\n\nexport function lazy(loader) {\n\tlet prom;\n\tlet component;\n\tlet error;\n\n\tfunction Lazy(props) {\n\t\tif (!prom) {\n\t\t\tprom = loader();\n\t\t\tprom.then(\n\t\t\t\texports => {\n\t\t\t\t\tcomponent = exports.default || exports;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\terror = e;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tif (!component) {\n\t\t\tthrow prom;\n\t\t}\n\n\t\treturn createElement(component, props);\n\t}\n\n\tLazy.displayName = 'Lazy';\n\tLazy._forwarded = true;\n\treturn Lazy;\n}\n","import { Component, toChildArray } from 'preact';\nimport { suspended } from './suspense.js';\n\n// Indexes to linked list nodes (nodes are stored as arrays to save bytes).\nconst SUSPENDED_COUNT = 0;\nconst RESOLVED_COUNT = 1;\nconst NEXT_NODE = 2;\n\n// Having custom inheritance instead of a class here saves a lot of bytes.\nexport function SuspenseList() {\n\tthis._next = null;\n\tthis._map = null;\n}\n\n// Mark one of child's earlier suspensions as resolved.\n// Some pending callbacks may become callable due to this\n// (e.g. the last suspended descendant gets resolved when\n// revealOrder === 'together'). Process those callbacks as well.\nconst resolve = (list, child, node) => {\n\tif (++node[RESOLVED_COUNT] === node[SUSPENDED_COUNT]) {\n\t\t// The number a child (or any of its descendants) has been suspended\n\t\t// matches the number of times it's been resolved. Therefore we\n\t\t// mark the child as completely resolved by deleting it from ._map.\n\t\t// This is used to figure out when *all* children have been completely\n\t\t// resolved when revealOrder is 'together'.\n\t\tlist._map.delete(child);\n\t}\n\n\t// If revealOrder is falsy then we can do an early exit, as the\n\t// callbacks won't get queued in the node anyway.\n\t// If revealOrder is 'together' then also do an early exit\n\t// if all suspended descendants have not yet been resolved.\n\tif (\n\t\t!list.props.revealOrder ||\n\t\t(list.props.revealOrder[0] === 't' && list._map.size)\n\t) {\n\t\treturn;\n\t}\n\n\t// Walk the currently suspended children in order, calling their\n\t// stored callbacks on the way. Stop if we encounter a child that\n\t// has not been completely resolved yet.\n\tnode = list._next;\n\twhile (node) {\n\t\twhile (node.length > 3) {\n\t\t\tnode.pop()();\n\t\t}\n\t\tif (node[RESOLVED_COUNT] < node[SUSPENDED_COUNT]) {\n\t\t\tbreak;\n\t\t}\n\t\tlist._next = node = node[NEXT_NODE];\n\t}\n};\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspenseList.prototype = new Component();\n\nSuspenseList.prototype._suspended = function(child) {\n\tconst list = this;\n\tconst delegated = suspended(list._vnode);\n\n\tlet node = list._map.get(child);\n\tnode[SUSPENDED_COUNT]++;\n\n\treturn unsuspend => {\n\t\tconst wrappedUnsuspend = () => {\n\t\t\tif (!list.props.revealOrder) {\n\t\t\t\t// Special case the undefined (falsy) revealOrder, as there\n\t\t\t\t// is no need to coordinate a specific order or unsuspends.\n\t\t\t\tunsuspend();\n\t\t\t} else {\n\t\t\t\tnode.push(unsuspend);\n\t\t\t\tresolve(list, child, node);\n\t\t\t}\n\t\t};\n\t\tif (delegated) {\n\t\t\tdelegated(wrappedUnsuspend);\n\t\t} else {\n\t\t\twrappedUnsuspend();\n\t\t}\n\t};\n};\n\nSuspenseList.prototype.render = function(props) {\n\tthis._next = null;\n\tthis._map = new Map();\n\n\tconst children = toChildArray(props.children);\n\tif (props.revealOrder && props.revealOrder[0] === 'b') {\n\t\t// If order === 'backwards' (or, well, anything starting with a 'b')\n\t\t// then flip the child list around so that the last child will be\n\t\t// the first in the linked list.\n\t\tchildren.reverse();\n\t}\n\t// Build the linked list. Iterate through the children in reverse order\n\t// so that `_next` points to the first linked list node to be resolved.\n\tfor (let i = children.length; i--; ) {\n\t\t// Create a new linked list node as an array of form:\n\t\t// \t[suspended_count, resolved_count, next_node]\n\t\t// where suspended_count and resolved_count are numeric counters for\n\t\t// keeping track how many times a node has been suspended and resolved.\n\t\t//\n\t\t// Note that suspended_count starts from 1 instead of 0, so we can block\n\t\t// processing callbacks until componentDidMount has been called. In a sense\n\t\t// node is suspended at least until componentDidMount gets called!\n\t\t//\n\t\t// Pending callbacks are added to the end of the node:\n\t\t// \t[suspended_count, resolved_count, next_node, callback_0, callback_1, ...]\n\t\tthis._map.set(children[i], (this._next = [1, 0, this._next]));\n\t}\n\treturn props.children;\n};\n\nSuspenseList.prototype.componentDidUpdate = SuspenseList.prototype.componentDidMount = function() {\n\t// Iterate through all children after mounting for two reasons:\n\t// 1. As each node[SUSPENDED_COUNT] starts from 1, this iteration increases\n\t//    each node[RELEASED_COUNT] by 1, therefore balancing the counters.\n\t//    The nodes can now be completely consumed from the linked list.\n\t// 2. Handle nodes that might have gotten resolved between render and\n\t//    componentDidMount.\n\tthis._map.forEach((node, child) => {\n\t\tresolve(this, child, node);\n\t});\n};\n","import {\n\trender as preactRender,\n\thydrate as preactHydrate,\n\toptions,\n\ttoChildArray,\n\tComponent\n} from 'preact';\n\nexport const REACT_ELEMENT_TYPE =\n\t(typeof Symbol != 'undefined' && Symbol.for && Symbol.for('react.element')) ||\n\t0xeac7;\n\nconst CAMEL_PROPS = /^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|marker(?!H|W|U)|overline|paint|stop|strikethrough|stroke|text(?!L)|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/;\n\nconst IS_DOM = typeof document !== 'undefined';\n\n// Input types for which onchange should not be converted to oninput.\n// type=\"file|checkbox|radio\", plus \"range\" in IE11.\n// (IE11 doesn't support Symbol, which we use here to turn `rad` into `ra` which matches \"range\")\nconst onChangeInputType = type =>\n\t(typeof Symbol != 'undefined' && typeof Symbol() == 'symbol'\n\t\t? /fil|che|rad/i\n\t\t: /fil|che|ra/i\n\t).test(type);\n\n// Some libraries like `react-virtualized` explicitly check for this.\nComponent.prototype.isReactComponent = {};\n\n// `UNSAFE_*` lifecycle hooks\n// Preact only ever invokes the unprefixed methods.\n// Here we provide a base \"fallback\" implementation that calls any defined UNSAFE_ prefixed method.\n// - If a component defines its own `componentDidMount()` (including via defineProperty), use that.\n// - If a component defines `UNSAFE_componentDidMount()`, `componentDidMount` is the alias getter/setter.\n// - If anything assigns to an `UNSAFE_*` property, the assignment is forwarded to the unprefixed property.\n// See https://github.com/preactjs/preact/issues/1941\n[\n\t'componentWillMount',\n\t'componentWillReceiveProps',\n\t'componentWillUpdate'\n].forEach(key => {\n\tObject.defineProperty(Component.prototype, key, {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn this['UNSAFE_' + key];\n\t\t},\n\t\tset(v) {\n\t\t\tObject.defineProperty(this, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true,\n\t\t\t\tvalue: v\n\t\t\t});\n\t\t}\n\t});\n});\n\n/**\n * Proxy render() since React returns a Component reference.\n * @param {import('./internal').VNode} vnode VNode tree to render\n * @param {import('./internal').PreactElement} parent DOM node to render vnode tree into\n * @param {() => void} [callback] Optional callback that will be called after rendering\n * @returns {import('./internal').Component | null} The root component reference or null\n */\nexport function render(vnode, parent, callback) {\n\t// React destroys any existing DOM nodes, see #1727\n\t// ...but only on the first render, see #1828\n\tif (parent._children == null) {\n\t\tparent.textContent = '';\n\t}\n\n\tpreactRender(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nexport function hydrate(vnode, parent, callback) {\n\tpreactHydrate(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nlet oldEventHook = options.event;\noptions.event = e => {\n\tif (oldEventHook) e = oldEventHook(e);\n\te.persist = empty;\n\te.isPropagationStopped = isPropagationStopped;\n\te.isDefaultPrevented = isDefaultPrevented;\n\treturn (e.nativeEvent = e);\n};\n\nfunction empty() {}\n\nfunction isPropagationStopped() {\n\treturn this.cancelBubble;\n}\n\nfunction isDefaultPrevented() {\n\treturn this.defaultPrevented;\n}\n\nlet classNameDescriptor = {\n\tconfigurable: true,\n\tget() {\n\t\treturn this.class;\n\t}\n};\n\nlet oldVNodeHook = options.vnode;\noptions.vnode = vnode => {\n\tlet type = vnode.type;\n\tlet props = vnode.props;\n\tlet normalizedProps = props;\n\n\t// only normalize props on Element nodes\n\tif (typeof type === 'string') {\n\t\tconst nonCustomElement = type.indexOf('-') === -1;\n\t\tnormalizedProps = {};\n\n\t\tfor (let i in props) {\n\t\t\tlet value = props[i];\n\n\t\t\tif (IS_DOM && i === 'children' && type === 'noscript') {\n\t\t\t\t// Emulate React's behavior of not rendering the contents of noscript tags on the client.\n\t\t\t\tcontinue;\n\t\t\t} else if (i === 'value' && 'defaultValue' in props && value == null) {\n\t\t\t\t// Skip applying value if it is null/undefined and we already set\n\t\t\t\t// a default value\n\t\t\t\tcontinue;\n\t\t\t} else if (\n\t\t\t\ti === 'defaultValue' &&\n\t\t\t\t'value' in props &&\n\t\t\t\tprops.value == null\n\t\t\t) {\n\t\t\t\t// `defaultValue` is treated as a fallback `value` when a value prop is present but null/undefined.\n\t\t\t\t// `defaultValue` for Elements with no value prop is the same as the DOM defaultValue property.\n\t\t\t\ti = 'value';\n\t\t\t} else if (i === 'download' && value === true) {\n\t\t\t\t// Calling `setAttribute` with a truthy value will lead to it being\n\t\t\t\t// passed as a stringified value, e.g. `download=\"true\"`. React\n\t\t\t\t// converts it to an empty string instead, otherwise the attribute\n\t\t\t\t// value will be used as the file name and the file will be called\n\t\t\t\t// \"true\" upon downloading it.\n\t\t\t\tvalue = '';\n\t\t\t} else if (/ondoubleclick/i.test(i)) {\n\t\t\t\ti = 'ondblclick';\n\t\t\t} else if (\n\t\t\t\t/^onchange(textarea|input)/i.test(i + type) &&\n\t\t\t\t!onChangeInputType(props.type)\n\t\t\t) {\n\t\t\t\ti = 'oninput';\n\t\t\t} else if (/^onfocus$/i.test(i)) {\n\t\t\t\ti = 'onfocusin';\n\t\t\t} else if (/^onblur$/i.test(i)) {\n\t\t\t\ti = 'onfocusout';\n\t\t\t} else if (/^on(Ani|Tra|Tou|BeforeInp|Compo)/.test(i)) {\n\t\t\t\ti = i.toLowerCase();\n\t\t\t} else if (nonCustomElement && CAMEL_PROPS.test(i)) {\n\t\t\t\ti = i.replace(/[A-Z0-9]/, '-$&').toLowerCase();\n\t\t\t} else if (value === null) {\n\t\t\t\tvalue = undefined;\n\t\t\t}\n\n\t\t\tnormalizedProps[i] = value;\n\t\t}\n\n\t\t// Add support for array select values: <select multiple value={[]} />\n\t\tif (\n\t\t\ttype == 'select' &&\n\t\t\tnormalizedProps.multiple &&\n\t\t\tArray.isArray(normalizedProps.value)\n\t\t) {\n\t\t\t// forEach() always returns undefined, which we abuse here to unset the value prop.\n\t\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\t\tchild.props.selected =\n\t\t\t\t\tnormalizedProps.value.indexOf(child.props.value) != -1;\n\t\t\t});\n\t\t}\n\n\t\t// Adding support for defaultValue in select tag\n\t\tif (type == 'select' && normalizedProps.defaultValue != null) {\n\t\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\t\tif (normalizedProps.multiple) {\n\t\t\t\t\tchild.props.selected =\n\t\t\t\t\t\tnormalizedProps.defaultValue.indexOf(child.props.value) != -1;\n\t\t\t\t} else {\n\t\t\t\t\tchild.props.selected =\n\t\t\t\t\t\tnormalizedProps.defaultValue == child.props.value;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tvnode.props = normalizedProps;\n\n\t\tif (props.class != props.className) {\n\t\t\tclassNameDescriptor.enumerable = 'className' in props;\n\t\t\tif (props.className != null) normalizedProps.class = props.className;\n\t\t\tObject.defineProperty(normalizedProps, 'className', classNameDescriptor);\n\t\t}\n\t}\n\n\tvnode.$$typeof = REACT_ELEMENT_TYPE;\n\n\tif (oldVNodeHook) oldVNodeHook(vnode);\n};\n\n// Only needed for react-relay\nlet currentComponent;\nconst oldBeforeRender = options._render;\noptions._render = function(vnode) {\n\tif (oldBeforeRender) {\n\t\toldBeforeRender(vnode);\n\t}\n\tcurrentComponent = vnode._component;\n};\n\n// This is a very very private internal function for React it\n// is used to sort-of do runtime dependency injection. So far\n// only `react-relay` makes use of it. It uses it to read the\n// context value.\nexport const __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = {\n\tReactCurrentDispatcher: {\n\t\tcurrent: {\n\t\t\treadContext(context) {\n\t\t\t\treturn currentComponent._globalContext[context._id].props.value;\n\t\t\t}\n\t\t}\n\t}\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"main__HlV3u\",\"scale\":\"scale__sPURg\",\"input\":\"input__Mm3Cc\",\"matches\":\"matches__oZGw7\",\"word\":\"word__OY4BL\",\"wordSpacer\":\"wordSpacer__gRTfF\"};","import styles from './BoxesInput.module.css';\n\nexport default function BoxesInput({ selected, setSelected }) {\n  const indices = [0, 1, 2, 3, 4];\n\n  return (\n    <label className={styles.label}> \n      <div className={styles.boxes}>\n        {indices.map((index) => {\n          const letter = selected[index] ?? '';\n          return (\n            <div className={styles.box}>\n              {letter}\n            </div>\n          );\n        })}\n      </div>\n      <input\n        type='text'\n        maxLength={5}\n        value={selected}\n        onInput={(e) => setSelected(e.target.value.toLowerCase())}\n      />\n    </label>\n  );\n}\n","import classnames from 'classnames';\nimport styles from './CountBoxes.module.css';\n\nexport default function CountBoxes({ count, className }) {\n  const whole = Math.floor(count);\n  const part = count - whole;\n  const indices = Array.from(Array(whole).keys());\n  const wholeClasses = classnames(styles.box, styles.whole, className);\n  const partClasses = classnames(styles.box, className);\n  const partStyle = { width: `calc(${part} * var(--box-size))` };\n\n  return (\n    <div className={styles.main}>\n      <div className={styles.boxes}>\n        {indices.map(() => <div className={wholeClasses} />)}\n        <div className={partClasses} style={partStyle}/>\n      </div>\n      <div className={styles.count}>{count.toFixed(2)}</div>\n    </div>\n  );\n}\n","export const wordsDefault = 'answers';\nexport const wordNames = {\n  answers: 'Possible Answers',\n  all: 'All Valid Guesses'\n};\n\nexport const displayDefault = 'letterPositions';\nexport const displayNames = {\n  letterPositions: 'Letter Counts Per Position',\n  bestMatch: 'Best Starting Words',\n  worstMatch: 'Worst Starting Words',\n  patternSearch: 'Letter Pattern Search',\n  letterSearch: 'Included Letter Search',\n}\nexport const displayDescriptions = {\n  letterPositions: (total) => `The times each letter appears in each positions in the ${total} words. \n  Greens appear in that position at least 10% of the time, yellows at least 3%, and grays at least 1%. \n  Enter a word to see its values.`,\n  bestMatch: () => `Find the words that will get the most green and yellow matches, depending on your\n  preference for more greens or yellows. Shows the average number of yellow and green squares for that\n  word when matched with all of the possible answers`,\n  worstMatch: () => `Find the words that will get the fewest green and yellow matches, depending on\n  your preference for more greens or yellows. Shows the average number of yellow and green squares\n  for that word when matched with all of the possible answers`,\n  patternSearch: (total) => `Search the ${total} words for letter patterns. Include a period in\n  your pattern to match any letter at that position. For instance K.E will match ANKLE, KNEAD, and SKIER`,\n  letterSearch: (total) => `Search the ${total} words for ones that contain all of the entered \n  letters. For instance, if you enter ZZY, you'll match DIZZY, FIZZY, FUZZY, and JAZZY`\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"main__SzV8l\",\"input\":\"input__ihzEA\",\"count\":\"count__uvDM8\"};","export default \"aback\\nabase\\nabate\\nabbey\\nabbot\\nabhor\\nabide\\nabled\\nabode\\nabort\\nabout\\nabove\\nabuse\\nabyss\\nacorn\\nacrid\\nactor\\nacute\\nadage\\nadapt\\nadept\\nadmin\\nadmit\\nadobe\\nadopt\\nadore\\nadorn\\nadult\\naffix\\nafire\\nafoot\\nafoul\\nafter\\nagain\\nagape\\nagate\\nagent\\nagile\\naging\\naglow\\nagony\\nagree\\nahead\\naider\\naisle\\nalarm\\nalbum\\nalert\\nalgae\\nalibi\\nalien\\nalign\\nalike\\nalive\\nallay\\nalley\\nallot\\nallow\\nalloy\\naloft\\nalone\\nalong\\naloof\\naloud\\nalpha\\naltar\\nalter\\namass\\namaze\\namber\\namble\\namend\\namiss\\namity\\namong\\nample\\namply\\namuse\\nangel\\nanger\\nangle\\nangry\\nangst\\nanime\\nankle\\nannex\\nannoy\\nannul\\nanode\\nantic\\nanvil\\naorta\\napart\\naphid\\naping\\napnea\\napple\\napply\\napron\\naptly\\narbor\\nardor\\narena\\nargue\\narise\\narmor\\naroma\\narose\\narray\\narrow\\narson\\nartsy\\nascot\\nashen\\naside\\naskew\\nassay\\nasset\\natoll\\natone\\nattic\\naudio\\naudit\\naugur\\naunty\\navail\\navert\\navian\\navoid\\nawait\\nawake\\naward\\naware\\nawash\\nawful\\nawoke\\naxial\\naxiom\\naxion\\nazure\\nbacon\\nbadge\\nbadly\\nbagel\\nbaggy\\nbaker\\nbaler\\nbalmy\\nbanal\\nbanjo\\nbarge\\nbaron\\nbasal\\nbasic\\nbasil\\nbasin\\nbasis\\nbaste\\nbatch\\nbathe\\nbaton\\nbatty\\nbawdy\\nbayou\\nbeach\\nbeady\\nbeard\\nbeast\\nbeech\\nbeefy\\nbefit\\nbegan\\nbegat\\nbeget\\nbegin\\nbegun\\nbeing\\nbelch\\nbelie\\nbelle\\nbelly\\nbelow\\nbench\\nberet\\nberry\\nberth\\nbeset\\nbetel\\nbevel\\nbezel\\nbible\\nbicep\\nbiddy\\nbigot\\nbilge\\nbilly\\nbinge\\nbingo\\nbiome\\nbirch\\nbirth\\nbison\\nbitty\\nblack\\nblade\\nblame\\nbland\\nblank\\nblare\\nblast\\nblaze\\nbleak\\nbleat\\nbleed\\nbleep\\nblend\\nbless\\nblimp\\nblind\\nblink\\nbliss\\nblitz\\nbloat\\nblock\\nbloke\\nblond\\nblood\\nbloom\\nblown\\nbluer\\nbluff\\nblunt\\nblurb\\nblurt\\nblush\\nboard\\nboast\\nbobby\\nboney\\nbongo\\nbonus\\nbooby\\nboost\\nbooth\\nbooty\\nbooze\\nboozy\\nborax\\nborne\\nbosom\\nbossy\\nbotch\\nbough\\nboule\\nbound\\nbowel\\nboxer\\nbrace\\nbraid\\nbrain\\nbrake\\nbrand\\nbrash\\nbrass\\nbrave\\nbravo\\nbrawl\\nbrawn\\nbread\\nbreak\\nbreed\\nbriar\\nbribe\\nbrick\\nbride\\nbrief\\nbrine\\nbring\\nbrink\\nbriny\\nbrisk\\nbroad\\nbroil\\nbroke\\nbrood\\nbrook\\nbroom\\nbroth\\nbrown\\nbrunt\\nbrush\\nbrute\\nbuddy\\nbudge\\nbuggy\\nbugle\\nbuild\\nbuilt\\nbulge\\nbulky\\nbully\\nbunch\\nbunny\\nburly\\nburnt\\nburst\\nbused\\nbushy\\nbutch\\nbutte\\nbuxom\\nbuyer\\nbylaw\\ncabal\\ncabby\\ncabin\\ncable\\ncacao\\ncache\\ncacti\\ncaddy\\ncadet\\ncagey\\ncairn\\ncamel\\ncameo\\ncanal\\ncandy\\ncanny\\ncanoe\\ncanon\\ncaper\\ncaput\\ncarat\\ncargo\\ncarol\\ncarry\\ncarve\\ncaste\\ncatch\\ncater\\ncatty\\ncaulk\\ncause\\ncavil\\ncease\\ncedar\\ncello\\nchafe\\nchaff\\nchain\\nchair\\nchalk\\nchamp\\nchant\\nchaos\\nchard\\ncharm\\nchart\\nchase\\nchasm\\ncheap\\ncheat\\ncheck\\ncheek\\ncheer\\nchess\\nchest\\nchick\\nchide\\nchief\\nchild\\nchili\\nchill\\nchime\\nchina\\nchirp\\nchock\\nchoir\\nchoke\\nchord\\nchore\\nchose\\nchuck\\nchump\\nchunk\\nchurn\\nchute\\ncider\\ncigar\\ncinch\\ncirca\\ncivic\\ncivil\\nclack\\nclaim\\nclamp\\nclang\\nclank\\nclash\\nclasp\\nclass\\nclean\\nclear\\ncleat\\ncleft\\nclerk\\nclick\\ncliff\\nclimb\\ncling\\nclink\\ncloak\\nclock\\nclone\\nclose\\ncloth\\ncloud\\nclout\\nclove\\nclown\\ncluck\\nclued\\nclump\\nclung\\ncoach\\ncoast\\ncobra\\ncocoa\\ncolon\\ncolor\\ncomet\\ncomfy\\ncomic\\ncomma\\nconch\\ncondo\\nconic\\ncopse\\ncoral\\ncorer\\ncorny\\ncouch\\ncough\\ncould\\ncount\\ncoupe\\ncourt\\ncoven\\ncover\\ncovet\\ncovey\\ncower\\ncoyly\\ncrack\\ncraft\\ncramp\\ncrane\\ncrank\\ncrash\\ncrass\\ncrate\\ncrave\\ncrawl\\ncraze\\ncrazy\\ncreak\\ncream\\ncredo\\ncreed\\ncreek\\ncreep\\ncreme\\ncrepe\\ncrept\\ncress\\ncrest\\ncrick\\ncried\\ncrier\\ncrime\\ncrimp\\ncrisp\\ncroak\\ncrock\\ncrone\\ncrony\\ncrook\\ncross\\ncroup\\ncrowd\\ncrown\\ncrude\\ncruel\\ncrumb\\ncrump\\ncrush\\ncrust\\ncrypt\\ncubic\\ncumin\\ncurio\\ncurly\\ncurry\\ncurse\\ncurve\\ncurvy\\ncutie\\ncyber\\ncycle\\ncynic\\ndaddy\\ndaily\\ndairy\\ndaisy\\ndally\\ndance\\ndandy\\ndatum\\ndaunt\\ndealt\\ndeath\\ndebar\\ndebit\\ndebug\\ndebut\\ndecal\\ndecay\\ndecor\\ndecoy\\ndecry\\ndefer\\ndeign\\ndeity\\ndelay\\ndelta\\ndelve\\ndemon\\ndemur\\ndenim\\ndense\\ndepot\\ndepth\\nderby\\ndeter\\ndetox\\ndeuce\\ndevil\\ndiary\\ndicey\\ndigit\\ndilly\\ndimly\\ndiner\\ndingo\\ndingy\\ndiode\\ndirge\\ndirty\\ndisco\\nditch\\nditto\\nditty\\ndiver\\ndizzy\\ndodge\\ndodgy\\ndogma\\ndoing\\ndolly\\ndonor\\ndonut\\ndopey\\ndoubt\\ndough\\ndowdy\\ndowel\\ndowny\\ndowry\\ndozen\\ndraft\\ndrain\\ndrake\\ndrama\\ndrank\\ndrape\\ndrawl\\ndrawn\\ndread\\ndream\\ndress\\ndried\\ndrier\\ndrift\\ndrill\\ndrink\\ndrive\\ndroit\\ndroll\\ndrone\\ndrool\\ndroop\\ndross\\ndrove\\ndrown\\ndruid\\ndrunk\\ndryer\\ndryly\\nduchy\\ndully\\ndummy\\ndumpy\\ndunce\\ndusky\\ndusty\\ndutch\\nduvet\\ndwarf\\ndwell\\ndwelt\\ndying\\neager\\neagle\\nearly\\nearth\\neasel\\neaten\\neater\\nebony\\neclat\\nedict\\nedify\\neerie\\negret\\neight\\neject\\neking\\nelate\\nelbow\\nelder\\nelect\\nelegy\\nelfin\\nelide\\nelite\\nelope\\nelude\\nemail\\nembed\\nember\\nemcee\\nempty\\nenact\\nendow\\nenema\\nenemy\\nenjoy\\nennui\\nensue\\nenter\\nentry\\nenvoy\\nepoch\\nepoxy\\nequal\\nequip\\nerase\\nerect\\nerode\\nerror\\nerupt\\nessay\\nester\\nether\\nethic\\nethos\\netude\\nevade\\nevent\\nevery\\nevict\\nevoke\\nexact\\nexalt\\nexcel\\nexert\\nexile\\nexist\\nexpel\\nextol\\nextra\\nexult\\neying\\nfable\\nfacet\\nfaint\\nfairy\\nfaith\\nfalse\\nfancy\\nfanny\\nfarce\\nfatal\\nfatty\\nfault\\nfauna\\nfavor\\nfeast\\nfecal\\nfeign\\nfella\\nfelon\\nfemme\\nfemur\\nfence\\nferal\\nferry\\nfetal\\nfetch\\nfetid\\nfetus\\nfever\\nfewer\\nfiber\\nficus\\nfield\\nfiend\\nfiery\\nfifth\\nfifty\\nfight\\nfiler\\nfilet\\nfilly\\nfilmy\\nfilth\\nfinal\\nfinch\\nfiner\\nfirst\\nfishy\\nfixer\\nfizzy\\nfjord\\nflack\\nflail\\nflair\\nflake\\nflaky\\nflame\\nflank\\nflare\\nflash\\nflask\\nfleck\\nfleet\\nflesh\\nflick\\nflier\\nfling\\nflint\\nflirt\\nfloat\\nflock\\nflood\\nfloor\\nflora\\nfloss\\nflour\\nflout\\nflown\\nfluff\\nfluid\\nfluke\\nflume\\nflung\\nflunk\\nflush\\nflute\\nflyer\\nfoamy\\nfocal\\nfocus\\nfoggy\\nfoist\\nfolio\\nfolly\\nforay\\nforce\\nforge\\nforgo\\nforte\\nforth\\nforty\\nforum\\nfound\\nfoyer\\nfrail\\nframe\\nfrank\\nfraud\\nfreak\\nfreed\\nfreer\\nfresh\\nfriar\\nfried\\nfrill\\nfrisk\\nfritz\\nfrock\\nfrond\\nfront\\nfrost\\nfroth\\nfrown\\nfroze\\nfruit\\nfudge\\nfugue\\nfully\\nfungi\\nfunky\\nfunny\\nfuror\\nfurry\\nfussy\\nfuzzy\\ngaffe\\ngaily\\ngamer\\ngamma\\ngamut\\ngassy\\ngaudy\\ngauge\\ngaunt\\ngauze\\ngavel\\ngawky\\ngayer\\ngayly\\ngazer\\ngecko\\ngeeky\\ngeese\\ngenie\\ngenre\\nghost\\nghoul\\ngiant\\ngiddy\\ngipsy\\ngirly\\ngirth\\ngiven\\ngiver\\nglade\\ngland\\nglare\\nglass\\nglaze\\ngleam\\nglean\\nglide\\nglint\\ngloat\\nglobe\\ngloom\\nglory\\ngloss\\nglove\\nglyph\\ngnash\\ngnome\\ngodly\\ngoing\\ngolem\\ngolly\\ngonad\\ngoner\\ngoody\\ngooey\\ngoofy\\ngoose\\ngorge\\ngouge\\ngourd\\ngrace\\ngrade\\ngraft\\ngrail\\ngrain\\ngrand\\ngrant\\ngrape\\ngraph\\ngrasp\\ngrass\\ngrate\\ngrave\\ngravy\\ngraze\\ngreat\\ngreed\\ngreen\\ngreet\\ngrief\\ngrill\\ngrime\\ngrimy\\ngrind\\ngripe\\ngroan\\ngroin\\ngroom\\ngrope\\ngross\\ngroup\\ngrout\\ngrove\\ngrowl\\ngrown\\ngruel\\ngruff\\ngrunt\\nguard\\nguava\\nguess\\nguest\\nguide\\nguild\\nguile\\nguilt\\nguise\\ngulch\\ngully\\ngumbo\\ngummy\\nguppy\\ngusto\\ngusty\\ngypsy\\nhabit\\nhairy\\nhalve\\nhandy\\nhappy\\nhardy\\nharem\\nharpy\\nharry\\nharsh\\nhaste\\nhasty\\nhatch\\nhater\\nhaunt\\nhaute\\nhaven\\nhavoc\\nhazel\\nheady\\nheard\\nheart\\nheath\\nheave\\nheavy\\nhedge\\nhefty\\nheist\\nhelix\\nhello\\nhence\\nheron\\nhilly\\nhinge\\nhippo\\nhippy\\nhitch\\nhoard\\nhobby\\nhoist\\nholly\\nhomer\\nhoney\\nhonor\\nhorde\\nhorny\\nhorse\\nhotel\\nhotly\\nhound\\nhouse\\nhovel\\nhover\\nhowdy\\nhuman\\nhumid\\nhumor\\nhumph\\nhumus\\nhunch\\nhunky\\nhurry\\nhusky\\nhussy\\nhutch\\nhydro\\nhyena\\nhymen\\nhyper\\nicily\\nicing\\nideal\\nidiom\\nidiot\\nidler\\nidyll\\nigloo\\niliac\\nimage\\nimbue\\nimpel\\nimply\\ninane\\ninbox\\nincur\\nindex\\ninept\\ninert\\ninfer\\ningot\\ninlay\\ninlet\\ninner\\ninput\\ninter\\nintro\\nionic\\nirate\\nirony\\nislet\\nissue\\nitchy\\nivory\\njaunt\\njazzy\\njelly\\njerky\\njetty\\njewel\\njiffy\\njoint\\njoist\\njoker\\njolly\\njoust\\njudge\\njuice\\njuicy\\njumbo\\njumpy\\njunta\\njunto\\njuror\\nkappa\\nkarma\\nkayak\\nkebab\\nkhaki\\nkinky\\nkiosk\\nkitty\\nknack\\nknave\\nknead\\nkneed\\nkneel\\nknelt\\nknife\\nknock\\nknoll\\nknown\\nkoala\\nkrill\\nlabel\\nlabor\\nladen\\nladle\\nlager\\nlance\\nlanky\\nlapel\\nlapse\\nlarge\\nlarva\\nlasso\\nlatch\\nlater\\nlathe\\nlatte\\nlaugh\\nlayer\\nleach\\nleafy\\nleaky\\nleant\\nleapt\\nlearn\\nlease\\nleash\\nleast\\nleave\\nledge\\nleech\\nleery\\nlefty\\nlegal\\nleggy\\nlemon\\nlemur\\nleper\\nlevel\\nlever\\nlibel\\nliege\\nlight\\nliken\\nlilac\\nlimbo\\nlimit\\nlinen\\nliner\\nlingo\\nlipid\\nlithe\\nliver\\nlivid\\nllama\\nloamy\\nloath\\nlobby\\nlocal\\nlocus\\nlodge\\nlofty\\nlogic\\nlogin\\nloopy\\nloose\\nlorry\\nloser\\nlouse\\nlousy\\nlover\\nlower\\nlowly\\nloyal\\nlucid\\nlucky\\nlumen\\nlumpy\\nlunar\\nlunch\\nlunge\\nlupus\\nlurch\\nlurid\\nlusty\\nlying\\nlymph\\nlyric\\nmacaw\\nmacho\\nmacro\\nmadam\\nmadly\\nmafia\\nmagic\\nmagma\\nmaize\\nmajor\\nmaker\\nmambo\\nmamma\\nmammy\\nmanga\\nmange\\nmango\\nmangy\\nmania\\nmanic\\nmanly\\nmanor\\nmaple\\nmarch\\nmarry\\nmarsh\\nmason\\nmasse\\nmatch\\nmatey\\nmauve\\nmaxim\\nmaybe\\nmayor\\nmealy\\nmeant\\nmeaty\\nmecca\\nmedal\\nmedia\\nmedic\\nmelee\\nmelon\\nmercy\\nmerge\\nmerit\\nmerry\\nmetal\\nmeter\\nmetro\\nmicro\\nmidge\\nmidst\\nmight\\nmilky\\nmimic\\nmince\\nminer\\nminim\\nminor\\nminty\\nminus\\nmirth\\nmiser\\nmissy\\nmocha\\nmodal\\nmodel\\nmodem\\nmogul\\nmoist\\nmolar\\nmoldy\\nmoney\\nmonth\\nmoody\\nmoose\\nmoral\\nmoron\\nmorph\\nmossy\\nmotel\\nmotif\\nmotor\\nmotto\\nmoult\\nmound\\nmount\\nmourn\\nmouse\\nmouth\\nmover\\nmovie\\nmower\\nmucky\\nmucus\\nmuddy\\nmulch\\nmummy\\nmunch\\nmural\\nmurky\\nmushy\\nmusic\\nmusky\\nmusty\\nmyrrh\\nnadir\\nnaive\\nnanny\\nnasal\\nnasty\\nnatal\\nnaval\\nnavel\\nneedy\\nneigh\\nnerdy\\nnerve\\nnever\\nnewer\\nnewly\\nnicer\\nniche\\nniece\\nnight\\nninja\\nninny\\nninth\\nnoble\\nnobly\\nnoise\\nnoisy\\nnomad\\nnoose\\nnorth\\nnosey\\nnotch\\nnovel\\nnudge\\nnurse\\nnutty\\nnylon\\nnymph\\noaken\\nobese\\noccur\\nocean\\noctal\\noctet\\nodder\\noddly\\noffal\\noffer\\noften\\nolden\\nolder\\nolive\\nombre\\nomega\\nonion\\nonset\\nopera\\nopine\\nopium\\noptic\\norbit\\norder\\norgan\\nother\\notter\\nought\\nounce\\noutdo\\nouter\\noutgo\\novary\\novate\\novert\\novine\\novoid\\nowing\\nowner\\noxide\\nozone\\npaddy\\npagan\\npaint\\npaler\\npalsy\\npanel\\npanic\\npansy\\npapal\\npaper\\nparer\\nparka\\nparry\\nparse\\nparty\\npasta\\npaste\\npasty\\npatch\\npatio\\npatsy\\npatty\\npause\\npayee\\npayer\\npeace\\npeach\\npearl\\npecan\\npedal\\npenal\\npence\\npenne\\npenny\\nperch\\nperil\\nperky\\npesky\\npesto\\npetal\\npetty\\nphase\\nphone\\nphony\\nphoto\\npiano\\npicky\\npiece\\npiety\\npiggy\\npilot\\npinch\\npiney\\npinky\\npinto\\npiper\\npique\\npitch\\npithy\\npivot\\npixel\\npixie\\npizza\\nplace\\nplaid\\nplain\\nplait\\nplane\\nplank\\nplant\\nplate\\nplaza\\nplead\\npleat\\nplied\\nplier\\npluck\\nplumb\\nplume\\nplump\\nplunk\\nplush\\npoesy\\npoint\\npoise\\npoker\\npolar\\npolka\\npolyp\\npooch\\npoppy\\nporch\\nposer\\nposit\\nposse\\npouch\\npound\\npouty\\npower\\nprank\\nprawn\\npreen\\npress\\nprice\\nprick\\npride\\npried\\nprime\\nprimo\\nprint\\nprior\\nprism\\nprivy\\nprize\\nprobe\\nprone\\nprong\\nproof\\nprose\\nproud\\nprove\\nprowl\\nproxy\\nprude\\nprune\\npsalm\\npubic\\npudgy\\npuffy\\npulpy\\npulse\\npunch\\npupil\\npuppy\\npuree\\npurer\\npurge\\npurse\\npushy\\nputty\\npygmy\\nquack\\nquail\\nquake\\nqualm\\nquark\\nquart\\nquash\\nquasi\\nqueen\\nqueer\\nquell\\nquery\\nquest\\nqueue\\nquick\\nquiet\\nquill\\nquilt\\nquirk\\nquite\\nquota\\nquote\\nquoth\\nrabbi\\nrabid\\nracer\\nradar\\nradii\\nradio\\nrainy\\nraise\\nrajah\\nrally\\nralph\\nramen\\nranch\\nrandy\\nrange\\nrapid\\nrarer\\nraspy\\nratio\\nratty\\nraven\\nrayon\\nrazor\\nreach\\nreact\\nready\\nrealm\\nrearm\\nrebar\\nrebel\\nrebus\\nrebut\\nrecap\\nrecur\\nrecut\\nreedy\\nrefer\\nrefit\\nregal\\nrehab\\nreign\\nrelax\\nrelay\\nrelic\\nremit\\nrenal\\nrenew\\nrepay\\nrepel\\nreply\\nrerun\\nreset\\nresin\\nretch\\nretro\\nretry\\nreuse\\nrevel\\nrevue\\nrhino\\nrhyme\\nrider\\nridge\\nrifle\\nright\\nrigid\\nrigor\\nrinse\\nripen\\nriper\\nrisen\\nriser\\nrisky\\nrival\\nriver\\nrivet\\nroach\\nroast\\nrobin\\nrobot\\nrocky\\nrodeo\\nroger\\nrogue\\nroomy\\nroost\\nrotor\\nrouge\\nrough\\nround\\nrouse\\nroute\\nrover\\nrowdy\\nrower\\nroyal\\nruddy\\nruder\\nrugby\\nruler\\nrumba\\nrumor\\nrupee\\nrural\\nrusty\\nsadly\\nsafer\\nsaint\\nsalad\\nsally\\nsalon\\nsalsa\\nsalty\\nsalve\\nsalvo\\nsandy\\nsaner\\nsappy\\nsassy\\nsatin\\nsatyr\\nsauce\\nsaucy\\nsauna\\nsaute\\nsavor\\nsavoy\\nsavvy\\nscald\\nscale\\nscalp\\nscaly\\nscamp\\nscant\\nscare\\nscarf\\nscary\\nscene\\nscent\\nscion\\nscoff\\nscold\\nscone\\nscoop\\nscope\\nscore\\nscorn\\nscour\\nscout\\nscowl\\nscram\\nscrap\\nscree\\nscrew\\nscrub\\nscrum\\nscuba\\nsedan\\nseedy\\nsegue\\nseize\\nsemen\\nsense\\nsepia\\nserif\\nserum\\nserve\\nsetup\\nseven\\nsever\\nsewer\\nshack\\nshade\\nshady\\nshaft\\nshake\\nshaky\\nshale\\nshall\\nshalt\\nshame\\nshank\\nshape\\nshard\\nshare\\nshark\\nsharp\\nshave\\nshawl\\nshear\\nsheen\\nsheep\\nsheer\\nsheet\\nsheik\\nshelf\\nshell\\nshied\\nshift\\nshine\\nshiny\\nshire\\nshirk\\nshirt\\nshoal\\nshock\\nshone\\nshook\\nshoot\\nshore\\nshorn\\nshort\\nshout\\nshove\\nshown\\nshowy\\nshrew\\nshrub\\nshrug\\nshuck\\nshunt\\nshush\\nshyly\\nsiege\\nsieve\\nsight\\nsigma\\nsilky\\nsilly\\nsince\\nsinew\\nsinge\\nsiren\\nsissy\\nsixth\\nsixty\\nskate\\nskier\\nskiff\\nskill\\nskimp\\nskirt\\nskulk\\nskull\\nskunk\\nslack\\nslain\\nslang\\nslant\\nslash\\nslate\\nsleek\\nsleep\\nsleet\\nslept\\nslice\\nslick\\nslide\\nslime\\nslimy\\nsling\\nslink\\nsloop\\nslope\\nslosh\\nsloth\\nslump\\nslung\\nslunk\\nslurp\\nslush\\nslyly\\nsmack\\nsmall\\nsmart\\nsmash\\nsmear\\nsmell\\nsmelt\\nsmile\\nsmirk\\nsmite\\nsmith\\nsmock\\nsmoke\\nsmoky\\nsmote\\nsnack\\nsnail\\nsnake\\nsnaky\\nsnare\\nsnarl\\nsneak\\nsneer\\nsnide\\nsniff\\nsnipe\\nsnoop\\nsnore\\nsnort\\nsnout\\nsnowy\\nsnuck\\nsnuff\\nsoapy\\nsober\\nsoggy\\nsolar\\nsolid\\nsolve\\nsonar\\nsonic\\nsooth\\nsooty\\nsorry\\nsound\\nsouth\\nsower\\nspace\\nspade\\nspank\\nspare\\nspark\\nspasm\\nspawn\\nspeak\\nspear\\nspeck\\nspeed\\nspell\\nspelt\\nspend\\nspent\\nsperm\\nspice\\nspicy\\nspied\\nspiel\\nspike\\nspiky\\nspill\\nspilt\\nspine\\nspiny\\nspire\\nspite\\nsplat\\nsplit\\nspoil\\nspoke\\nspoof\\nspook\\nspool\\nspoon\\nspore\\nsport\\nspout\\nspray\\nspree\\nsprig\\nspunk\\nspurn\\nspurt\\nsquad\\nsquat\\nsquib\\nstack\\nstaff\\nstage\\nstaid\\nstain\\nstair\\nstake\\nstale\\nstalk\\nstall\\nstamp\\nstand\\nstank\\nstare\\nstark\\nstart\\nstash\\nstate\\nstave\\nstead\\nsteak\\nsteal\\nsteam\\nsteed\\nsteel\\nsteep\\nsteer\\nstein\\nstern\\nstick\\nstiff\\nstill\\nstilt\\nsting\\nstink\\nstint\\nstock\\nstoic\\nstoke\\nstole\\nstomp\\nstone\\nstony\\nstood\\nstool\\nstoop\\nstore\\nstork\\nstorm\\nstory\\nstout\\nstove\\nstrap\\nstraw\\nstray\\nstrip\\nstrut\\nstuck\\nstudy\\nstuff\\nstump\\nstung\\nstunk\\nstunt\\nstyle\\nsuave\\nsugar\\nsuing\\nsuite\\nsulky\\nsully\\nsumac\\nsunny\\nsuper\\nsurer\\nsurge\\nsurly\\nsushi\\nswami\\nswamp\\nswarm\\nswash\\nswath\\nswear\\nsweat\\nsweep\\nsweet\\nswell\\nswept\\nswift\\nswill\\nswine\\nswing\\nswirl\\nswish\\nswoon\\nswoop\\nsword\\nswore\\nsworn\\nswung\\nsynod\\nsyrup\\ntabby\\ntable\\ntaboo\\ntacit\\ntacky\\ntaffy\\ntaint\\ntaken\\ntaker\\ntally\\ntalon\\ntamer\\ntango\\ntangy\\ntaper\\ntapir\\ntardy\\ntarot\\ntaste\\ntasty\\ntatty\\ntaunt\\ntawny\\nteach\\nteary\\ntease\\nteddy\\nteeth\\ntempo\\ntenet\\ntenor\\ntense\\ntenth\\ntepee\\ntepid\\nterra\\nterse\\ntesty\\nthank\\ntheft\\ntheir\\ntheme\\nthere\\nthese\\ntheta\\nthick\\nthief\\nthigh\\nthing\\nthink\\nthird\\nthong\\nthorn\\nthose\\nthree\\nthrew\\nthrob\\nthrow\\nthrum\\nthumb\\nthump\\nthyme\\ntiara\\ntibia\\ntidal\\ntiger\\ntight\\ntilde\\ntimer\\ntimid\\ntipsy\\ntitan\\ntithe\\ntitle\\ntoast\\ntoday\\ntoddy\\ntoken\\ntonal\\ntonga\\ntonic\\ntooth\\ntopaz\\ntopic\\ntorch\\ntorso\\ntorus\\ntotal\\ntotem\\ntouch\\ntough\\ntowel\\ntower\\ntoxic\\ntoxin\\ntrace\\ntrack\\ntract\\ntrade\\ntrail\\ntrain\\ntrait\\ntramp\\ntrash\\ntrawl\\ntread\\ntreat\\ntrend\\ntriad\\ntrial\\ntribe\\ntrice\\ntrick\\ntried\\ntripe\\ntrite\\ntroll\\ntroop\\ntrope\\ntrout\\ntrove\\ntruce\\ntruck\\ntruer\\ntruly\\ntrump\\ntrunk\\ntruss\\ntrust\\ntruth\\ntryst\\ntubal\\ntuber\\ntulip\\ntulle\\ntumor\\ntunic\\nturbo\\ntutor\\ntwang\\ntweak\\ntweed\\ntweet\\ntwice\\ntwine\\ntwirl\\ntwist\\ntwixt\\ntying\\nudder\\nulcer\\nultra\\numbra\\nuncle\\nuncut\\nunder\\nundid\\nundue\\nunfed\\nunfit\\nunify\\nunion\\nunite\\nunity\\nunlit\\nunmet\\nunset\\nuntie\\nuntil\\nunwed\\nunzip\\nupper\\nupset\\nurban\\nurine\\nusage\\nusher\\nusing\\nusual\\nusurp\\nutile\\nutter\\nvague\\nvalet\\nvalid\\nvalor\\nvalue\\nvalve\\nvapid\\nvapor\\nvault\\nvaunt\\nvegan\\nvenom\\nvenue\\nverge\\nverse\\nverso\\nverve\\nvicar\\nvideo\\nvigil\\nvigor\\nvilla\\nvinyl\\nviola\\nviper\\nviral\\nvirus\\nvisit\\nvisor\\nvista\\nvital\\nvivid\\nvixen\\nvocal\\nvodka\\nvogue\\nvoice\\nvoila\\nvomit\\nvoter\\nvouch\\nvowel\\nvying\\nwacky\\nwafer\\nwager\\nwagon\\nwaist\\nwaive\\nwaltz\\nwarty\\nwaste\\nwatch\\nwater\\nwaver\\nwaxen\\nweary\\nweave\\nwedge\\nweedy\\nweigh\\nweird\\nwelch\\nwelsh\\nwhack\\nwhale\\nwharf\\nwheat\\nwheel\\nwhelp\\nwhere\\nwhich\\nwhiff\\nwhile\\nwhine\\nwhiny\\nwhirl\\nwhisk\\nwhite\\nwhole\\nwhoop\\nwhose\\nwiden\\nwider\\nwidow\\nwidth\\nwield\\nwight\\nwilly\\nwimpy\\nwince\\nwinch\\nwindy\\nwiser\\nwispy\\nwitch\\nwitty\\nwoken\\nwoman\\nwomen\\nwoody\\nwooer\\nwooly\\nwoozy\\nwordy\\nworld\\nworry\\nworse\\nworst\\nworth\\nwould\\nwound\\nwoven\\nwrack\\nwrath\\nwreak\\nwreck\\nwrest\\nwring\\nwrist\\nwrite\\nwrong\\nwrote\\nwrung\\nwryly\\nyacht\\nyearn\\nyeast\\nyield\\nyoung\\nyouth\\nzebra\\nzesty\\nzonal\";","import { useState } from 'preact/hooks';\nimport classnames from 'classnames';\n\nimport { countLettersByPosition, sortLetterCounts } from '../utilities/words';\nimport BoxesInput from './BoxesInput';\nimport styles from './LetterPositions.module.css';\n\nconst indices = [0, 1, 2, 3, 4];\n\nexport default function LetterPositions({ words }) {\n  const byLetter = indices.map(index => countLettersByPosition(index, words));\n  const total = words.length;\n  const [selected, setSelected] = useState('');\n\n  return (\n    <div className={styles.main}>\n      <BoxesInput selected={selected} setSelected={setSelected} />\n      <div className={styles.columns}>\n        {buildColumns(selected, byLetter, total)}\n      </div>\n    </div>\n  );\n}\n\nfunction buildColumns(selected, byLetter, total) {\n  return indices.map(index => {\n    const letter = selected[index];\n    if (letter) {\n      return buildGraph(index, letter, byLetter, total);\n    }\n\n    const sortedCounts = byLetter.map(byLetter => sortLetterCounts(byLetter));\n    return buildLetterCounts(sortedCounts[index], total);\n  });\n}\n\nfunction buildGraph(index, letter, byLetter, total) {\n  const allCount = indices.reduce((sum, index) => sum + byLetter[index][letter], 0);\n  const positionCount = byLetter[index][letter];\n  const allPercent = (100 * allCount / total).toFixed(1);\n  const positionPercent = (100 * positionCount / total).toFixed(1);\n  const allLabel = `${allPercent}%\\ntotal`;\n  const positionLabel = `${positionPercent}%\\nhere`;\n\n  const allClasses = classnames(styles.bar, 'yellow');\n  const positionClasses = classnames(styles.bar, 'green');\n  const allStyle = { height: `${allPercent}%` };\n  const positionStyle = { height: `${positionPercent}%` };\n\n  return (\n    <div className={styles.graph}>\n      <div className={styles.graphBars}>\n        <div className={allClasses} style={allStyle} />\n        <div className={positionClasses} style={positionStyle} />\n      </div>\n      <div className={styles.graphText}>{allLabel}</div>\n      <div className={styles.graphText}>{positionLabel}</div>\n    </div>\n  );\n}\n\nfunction buildLetterCounts(counts, total) {\n  return (\n    <div className={styles.letterCounts}>\n      {counts.map(count => buildLetterCount(count, total))}\n    </div>\n  );\n}\n\nfunction buildLetterCount(count, total) {\n  const letter = count[0];\n  const value = count[1];\n  const { green, yellow, gray } = getColors(value, total);\n  const classes = classnames({\n    [styles.letterCount]: true,\n    ['gray']: gray,\n    ['yellow']: yellow,\n    ['green']: green,\n  });\n\n  return (\n    <div className={classes}>\n      <div className={styles.letter}>\n        {letter}\n      </div>\n      <div className={styles.count}>\n        {value}\n      </div>\n    </div>\n  );\n}\n\nfunction getColors(value, total) {\n  const percent = 100 * (value / total);\n  const green = percent >= 10;\n  const yellow = !green && percent >= 3;\n  const gray = !green && !yellow && percent > 1;\n\n  return { percent, green, yellow, gray };\n}\n"],"sourceRoot":""}